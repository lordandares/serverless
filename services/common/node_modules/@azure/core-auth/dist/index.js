'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib_1 = require('tslib');

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * Tests an object to determine whether it implements TokenCredential.
 *
 * @param credential The assumed TokenCredential to be tested.
 */
function isTokenCredential(credential) {
    // Check for an object with a 'getToken' function and possibly with
    // a 'signRequest' function.  We do this check to make sure that
    // a ServiceClientCredentials implementor (like TokenClientCredentials
    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if
    // it doesn't actually implement TokenCredential also.
    return credential
        && typeof credential.getToken === "function"
        && (credential.signRequest === undefined || credential.getToken.length > 0);
}

// Copyright (c) Microsoft Corporation. All rights reserved.
/**
 * A TokenCredential that always returns the given token. This class can be
 * used when the access token is already known or can be retrieved from an
 * outside source.
 */
var SimpleTokenCredential = /** @class */ (function () {
    /**
     * Creates an instance of TokenCredential.
     * @param {string} token
     */
    function SimpleTokenCredential(token, expiresOn) {
        this.token = token;
        this.expiresOn = expiresOn ? expiresOn : new Date(Date.now() + 60 * 60 * 1000);
    }
    /**
     * Retrieves the token stored in this RawTokenCredential.
     *
     * @param _scopes Ignored since token is already known.
     * @param _options Ignored since token is already known.
     * @returns {AccessToken} The access token details.
     */
    SimpleTokenCredential.prototype.getToken = function (_scopes, _options) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, {
                        token: this.token,
                        expiresOnTimestamp: this.expiresOn.getTime()
                    }];
            });
        });
    };
    return SimpleTokenCredential;
}());

exports.SimpleTokenCredential = SimpleTokenCredential;
exports.isTokenCredential = isTokenCredential;
//# sourceMappingURL=index.js.map
