// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
import * as tslib_1 from "tslib";
/**
 * A TokenCredential that always returns the given token. This class can be
 * used when the access token is already known or can be retrieved from an
 * outside source.
 */
var SimpleTokenCredential = /** @class */ (function () {
    /**
     * Creates an instance of TokenCredential.
     * @param {string} token
     */
    function SimpleTokenCredential(token, expiresOn) {
        this.token = token;
        this.expiresOn = expiresOn ? expiresOn : new Date(Date.now() + 60 * 60 * 1000);
    }
    /**
     * Retrieves the token stored in this RawTokenCredential.
     *
     * @param _scopes Ignored since token is already known.
     * @param _options Ignored since token is already known.
     * @returns {AccessToken} The access token details.
     */
    SimpleTokenCredential.prototype.getToken = function (_scopes, _options) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, {
                        token: this.token,
                        expiresOnTimestamp: this.expiresOn.getTime()
                    }];
            });
        });
    };
    return SimpleTokenCredential;
}());
export { SimpleTokenCredential };
//# sourceMappingURL=simpleTokenCredential.js.map