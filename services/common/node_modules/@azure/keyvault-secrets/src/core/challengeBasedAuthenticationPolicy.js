"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
var core_http_1 = require("@azure/core-http");
var core_http_2 = require("@azure/core-http");
var core_http_3 = require("@azure/core-http");
exports.TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes
/**
 * Creates a new ChallengeBasedAuthenticationPolicy factory.
 *
 * @param credential The TokenCredential implementation that can supply the challenge token.
 */
function challengeBasedAuthenticationPolicy(credential) {
    return {
        create: function (nextPolicy, options) {
            return new ChallengeBasedAuthenticationPolicy(nextPolicy, options, credential);
        }
    };
}
exports.challengeBasedAuthenticationPolicy = challengeBasedAuthenticationPolicy;
var AuthenticationChallenge = /** @class */ (function () {
    function AuthenticationChallenge(scopes) {
        this.scopes = scopes;
    }
    return AuthenticationChallenge;
}());
exports.AuthenticationChallenge = AuthenticationChallenge;
/**
 *
 * Provides a RequestPolicy that can request a token from a TokenCredential
 * implementation and then apply it to the Authorization header of a request
 * as a Bearer token.
 *
 */
var ChallengeBasedAuthenticationPolicy = /** @class */ (function (_super) {
    __extends(ChallengeBasedAuthenticationPolicy, _super);
    /**
     * Creates a new ChallengeBasedAuthenticationPolicy object.
     *
     * @param nextPolicy The next RequestPolicy in the request pipeline.
     * @param options Options for this RequestPolicy.
     * @param credential The TokenCredential implementation that can supply the bearer token.
     * @param scopes The scopes for which the bearer token applies.
     */
    function ChallengeBasedAuthenticationPolicy(nextPolicy, options, credential, refreshOn) {
        if (refreshOn === void 0) { refreshOn = Date.now(); }
        var _this = _super.call(this, nextPolicy, options) || this;
        _this.credential = credential;
        _this.refreshOn = refreshOn;
        _this.cachedToken = undefined;
        _this.challenge = undefined;
        return _this;
    }
    ChallengeBasedAuthenticationPolicy.prototype.parseWWWAuthenticate = function (www_authenticate) {
        // Parses an authentication message like:
        // ```
        // Bearer authorization="some_authorization", resource="https://some.url"
        // ```
        var authenticateArray = www_authenticate.split(" ");
        // Remove the "Bearer" piece
        delete authenticateArray[0];
        // Split the KV comma-separated list
        var commaSep = authenticateArray.join().split(",");
        for (var _i = 0, commaSep_1 = commaSep; _i < commaSep_1.length; _i++) {
            var item = commaSep_1[_i];
            // Split the key/value pairs
            var kv = item.split("=");
            if (kv[0].trim() == "resource") {
                // Remove the quotations around the string
                var resource = kv[1].trim().replace(/['"]+/g, '');
                return resource;
            }
        }
        return "";
    };
    /**
     * Applies the Bearer token to the request through the Authorization header.
     * @param webResource
     */
    ChallengeBasedAuthenticationPolicy.prototype.sendRequest = function (webResource) {
        return __awaiter(this, void 0, void 0, function () {
            var originalBody, response, www_authenticate, resource, challenge;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!webResource.headers)
                            webResource.headers = new core_http_3.HttpHeaders();
                        originalBody = webResource.body;
                        if (!(this.challenge == undefined)) return [3 /*break*/, 1];
                        // Use a blank to start the challenge
                        webResource.body = "";
                        return [3 /*break*/, 3];
                    case 1: 
                    // or use the cached token if we have one
                    return [4 /*yield*/, this.authenticateRequest(webResource)];
                    case 2:
                        // or use the cached token if we have one
                        _a.sent();
                        _a.label = 3;
                    case 3: return [4 /*yield*/, this._nextPolicy.sendRequest(webResource)];
                    case 4:
                        response = _a.sent();
                        if (!(response.status == 401)) return [3 /*break*/, 7];
                        webResource.body = originalBody;
                        www_authenticate = response.headers.get("WWW-Authenticate");
                        if (!www_authenticate) return [3 /*break*/, 6];
                        resource = this.parseWWWAuthenticate(www_authenticate);
                        challenge = new AuthenticationChallenge(resource + "/.default");
                        if (!(this.challenge != challenge)) return [3 /*break*/, 6];
                        this.challenge = challenge;
                        this.cachedToken = undefined;
                        return [4 /*yield*/, this.authenticateRequest(webResource)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/, this._nextPolicy.sendRequest(webResource)];
                    case 7: return [2 /*return*/, response];
                }
            });
        });
    };
    ChallengeBasedAuthenticationPolicy.prototype.authenticateRequest = function (webResource) {
        return __awaiter(this, void 0, void 0, function () {
            var token;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.cachedToken &&
                            (Date.now() < this.refreshOn))) return [3 /*break*/, 1];
                        webResource.headers.set(core_http_2.Constants.HeaderConstants.AUTHORIZATION, "Bearer " + this.cachedToken.token);
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, this.credential.getToken(this.challenge.scopes)];
                    case 2:
                        token = _a.sent();
                        if (token) {
                            this.cachedToken = token;
                            this.refreshOn = token.expiresOnTimestamp - exports.TokenRefreshBufferMs;
                            webResource.headers.set(core_http_2.Constants.HeaderConstants.AUTHORIZATION, "Bearer " + token.token);
                        }
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return ChallengeBasedAuthenticationPolicy;
}(core_http_1.BaseRequestPolicy));
exports.ChallengeBasedAuthenticationPolicy = ChallengeBasedAuthenticationPolicy;
