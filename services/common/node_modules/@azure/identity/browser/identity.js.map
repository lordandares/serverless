{"version":3,"file":"identity.js","sources":["../../../../common/temp/node_modules/.registry.npmjs.org/tslib/1.10.0/node_modules/tslib/tslib.es6.js","../src/client/errors.ts","../../../core/core-tracing/lib/tracers/noop/noOpSpan.ts","../../../core/core-tracing/lib/tracers/noop/noOpBinaryFormat.ts","../../../core/core-tracing/lib/tracers/noop/noOpHttpTextFormat.ts","../../../core/core-tracing/lib/tracers/noop/noOpTracer.ts","../../../core/core-tracing/lib/utils/global.browser.ts","../../../core/core-tracing/lib/utils/cache.ts","../../../core/core-tracing/lib/tracerProxy.ts","../../../core/core-tracing/lib/interfaces/status.ts","../../../core/core-tracing/lib/interfaces/span_kind.ts","../../../core/core-tracing/lib/interfaces/trace_flags.ts","../../../core/core-tracing/lib/utils/traceParentHeader.ts","../src/util/tracing.ts","../src/credentials/chainedTokenCredential.ts","../src/credentials/environmentCredential.browser.ts","../src/credentials/managedIdentityCredential.browser.ts","../src/credentials/defaultAzureCredential.ts","../../../../common/temp/node_modules/.registry.npmjs.org/qs/6.8.0/node_modules/qs/lib/utils.js","../../../../common/temp/node_modules/.registry.npmjs.org/qs/6.8.0/node_modules/qs/lib/formats.js","../../../../common/temp/node_modules/.registry.npmjs.org/qs/6.8.0/node_modules/qs/lib/stringify.js","../../../../common/temp/node_modules/.registry.npmjs.org/qs/6.8.0/node_modules/qs/lib/parse.js","../../../../common/temp/node_modules/.registry.npmjs.org/qs/6.8.0/node_modules/qs/lib/index.js","../../../core/core-http/lib/httpHeaders.ts","../../../core/core-http/lib/util/base64.browser.ts","../../../../common/temp/node_modules/.registry.npmjs.org/uuid/3.3.3/node_modules/uuid/lib/rng-browser.js","../../../../common/temp/node_modules/.registry.npmjs.org/uuid/3.3.3/node_modules/uuid/lib/bytesToUuid.js","../../../../common/temp/node_modules/.registry.npmjs.org/uuid/3.3.3/node_modules/uuid/v4.js","../../../core/core-http/lib/util/constants.ts","../../../core/core-http/lib/util/utils.ts","../../../core/core-http/lib/serializer.ts","../../../core/core-http/lib/webResource.ts","../../../../common/temp/node_modules/.registry.npmjs.org/@azure/abort-controller/1.0.0-preview.2/node_modules/@azure/abort-controller/src/AbortSignal.ts","../../../../common/temp/node_modules/.registry.npmjs.org/@azure/abort-controller/1.0.0-preview.2/node_modules/@azure/abort-controller/src/AbortController.ts","../../../core/core-http/lib/restError.ts","../../../core/core-http/lib/xhrHttpClient.ts","../../../core/core-http/lib/httpPipelineLogLevel.ts","../../../core/core-auth/src/tokenCredential.ts","../../../core/core-http/lib/url.ts","../../../core/core-http/lib/policies/requestPolicy.ts","../../../core/logger/src/log.browser.ts","../../../core/logger/src/debug.ts","../../../core/logger/src/logger.ts","../../../core/core-http/lib/log.ts","../../../core/core-http/lib/policies/logPolicy.ts","../../../core/core-http/lib/operationParameter.ts","../../../core/core-http/lib/operationSpec.ts","../../../core/core-http/lib/util/xml.browser.ts","../../../core/core-http/lib/policies/deserializationPolicy.ts","../../../core/core-http/lib/policies/exponentialRetryPolicy.ts","../../../core/core-http/lib/policies/generateClientRequestIdPolicy.ts","../../../core/core-http/lib/policies/msRestUserAgentPolicy.browser.ts","../../../core/core-http/lib/policies/userAgentPolicy.ts","../../../core/core-http/lib/policies/redirectPolicy.ts","../../../core/core-http/lib/policies/rpRegistrationPolicy.ts","../../../core/core-http/lib/credentials/accessTokenCache.ts","../../../core/core-http/lib/policies/bearerTokenAuthenticationPolicy.ts","../../../core/core-http/lib/policies/systemErrorRetryPolicy.ts","../../../core/core-http/lib/queryCollectionFormat.ts","../../../core/core-http/lib/policies/proxyPolicy.browser.ts","../../../core/core-http/lib/policies/throttlingRetryPolicy.ts","../../../core/core-http/lib/policies/signingPolicy.ts","../../../core/core-http/lib/policies/tracingPolicy.ts","../../../core/core-http/lib/serviceClient.ts","../src/util/logging.ts","../src/client/identityClient.ts","../src/credentials/clientSecretCredential.ts","../src/credentials/clientCertificateCredential.browser.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/utils/CryptoUtils.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/utils/Constants.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/ScopeSet.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/utils/StringUtils.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/utils/UrlUtils.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/AccessTokenKey.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/AccessTokenValue.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/error/AuthError.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/error/ClientAuthError.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/error/ClientConfigurationError.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/AuthenticationParameters.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/ServerRequestParameters.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/ClientInfo.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/utils/TokenUtils.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/IdToken.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/AccessTokenCacheItem.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/Storage.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/Account.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/utils/TimeUtils.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/utils/ResponseUtils.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/XHRClient.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/Authority.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/AadAuthority.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/B2cAuthority.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/AuthorityFactory.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/Logger.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/Configuration.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/error/ServerError.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/error/InteractionRequiredAuthError.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/AuthResponse.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/telemetry/TelemetryConstants.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/telemetry/TelemetryUtils.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/telemetry/TelemetryEvent.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/telemetry/DefaultEvent.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/telemetry/TelemetryManager.ts","../../../../common/temp/node_modules/.registry.npmjs.org/msal/1.1.3/node_modules/msal/src/UserAgentApplication.ts","../src/constants.ts","../src/credentials/interactiveBrowserCredential.browser.ts","../src/credentials/deviceCodeCredential.browser.ts","../src/credentials/usernamePasswordCredential.ts","../src/credentials/authorizationCodeCredential.browser.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * See the official documentation for more details:\n *\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-protocols-oauth-code#error-response-1\n *\n * NOTE: This documentation is for v1 OAuth support but the same error\n * response details still apply to v2.\n */\nexport interface ErrorResponse {\n  /**\n   * The string identifier for the error.\n   */\n  error: string;\n\n  /**\n   * The error's description.\n   */\n  errorDescription: string;\n\n  /**\n   * An array of codes pertaining to the error(s) that occurred.\n   */\n  errorCodes?: number[];\n\n  /**\n   * The timestamp at which the error occurred.\n   */\n  timestamp?: string;\n\n  /**\n   * The trace identifier for this error occurrence.\n   */\n  traceId?: string;\n\n  /**\n   * The correlation ID to be used for tracking the source of the error.\n   */\n  correlationId?: string;\n}\n\n/**\n * Used for internal deserialization of OAuth responses. Public model is ErrorResponse\n * @internal\n * @ignore\n */\nexport interface OAuthErrorResponse {\n  error: string;\n  error_description: string;\n  error_codes?: number[];\n  timestamp?: string;\n  trace_id?: string;\n  correlation_id?: string;\n}\n\nfunction isErrorResponse(errorResponse: any): errorResponse is OAuthErrorResponse {\n  return (\n    errorResponse &&\n    typeof errorResponse.error === \"string\" &&\n    typeof errorResponse.error_description === \"string\"\n  );\n}\n\n/**\n * The Error.name value of an AuthenticationError\n */\nexport const AuthenticationErrorName = \"AuthenticationError\";\n\n/**\n * Provides details about a failure to authenticate with Azure Active\n * Directory.  The `errorResponse` field contains more details about\n * the specific failure.\n */\nexport class AuthenticationError extends Error {\n  /**\n   * The HTTP status code returned from the authentication request.\n   */\n  public readonly statusCode: number;\n\n  /**\n   * The error response details.\n   */\n  public readonly errorResponse: ErrorResponse;\n\n  constructor(statusCode: number, errorBody: object | string | undefined | null) {\n    let errorResponse: ErrorResponse = {\n      error: \"unknown\",\n      errorDescription: \"An unknown error occurred and no additional details are available.\"\n    };\n\n    if (isErrorResponse(errorBody)) {\n      errorResponse = convertOAuthErrorResponseToErrorResponse(errorBody);\n    } else if (typeof errorBody === \"string\") {\n      try {\n        // Most error responses will contain JSON-formatted error details\n        // in the response body        \n        const oauthErrorResponse: OAuthErrorResponse = JSON.parse(errorBody);\n        errorResponse = convertOAuthErrorResponseToErrorResponse(oauthErrorResponse);\n      } catch (e) {\n        if (statusCode === 400) {\n          errorResponse = {\n            error: \"authority_not_found\",\n            errorDescription: \"The specified authority URL was not found.\"\n          };\n        } else {\n          errorResponse = {\n            error: \"unknown_error\",\n            errorDescription: `An unknown error has occurred. Response body:\\n\\n${errorBody}`\n          };\n        }\n      }\n    } else {\n      errorResponse = {\n        error: \"unknown_error\",\n        errorDescription: \"An unknown error occurred and no additional details are available.\"\n      };\n    }\n\n    super(\n      `An error was returned while authenticating to Azure Active Directory (status code ${statusCode}).\\n\\nMore details:\\n\\n${JSON.stringify(\n        errorResponse,\n        null,\n        \"  \"\n      )}`\n    );\n    this.statusCode = statusCode;\n    this.errorResponse = errorResponse;\n\n    // Ensure that this type reports the correct name\n    this.name = AuthenticationErrorName;\n  }\n}\n\n/**\n * The Error.name value of an AggregateAuthenticationError\n */\nexport const AggregateAuthenticationErrorName = \"AggregateAuthenticationError\";\n\n/**\n * Provides an `errors` array containing {@link AuthenticationError} instance\n * for authentication failures from credentials in a {@link ChainedTokenCredential}.\n */\nexport class AggregateAuthenticationError extends Error {\n  /**\n   * The array of error objects that were thrown while trying to authenticate\n   * with the credentials in a {@link ChainedTokenCredential}.\n   */\n  public errors: any[];\n\n  constructor(errors: any[]) {\n    super(\n      `Authentication failed to complete due to the following errors:\\n\\n${errors.join(\"\\n\\n\")}`\n    );\n    this.errors = errors;\n\n    // Ensure that this type reports the correct name\n    this.name = AggregateAuthenticationErrorName;\n  }\n}\n\nfunction convertOAuthErrorResponseToErrorResponse(errorBody: OAuthErrorResponse) : ErrorResponse {\n  return {\n    error: errorBody.error,\n    errorDescription: errorBody.error_description,\n    correlationId: errorBody.correlation_id,\n    errorCodes: errorBody.error_codes,\n    timestamp: errorBody.timestamp,\n    traceId: errorBody.trace_id\n  };\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Span } from \"../../interfaces/span\";\nimport { SpanContext } from \"../../interfaces/span_context\";\nimport { Attributes } from \"../../interfaces/attributes\";\nimport { Status } from \"../../interfaces/status\";\n\n/**\n * A no-op implementation of Span that can safely be used without side-effects.\n */\nexport class NoOpSpan implements Span {\n\n  /**\n   * Returns the SpanContext associated with this Span.\n   */\n  context(): SpanContext {\n    return {\n      spanId: \"\",\n      traceId: \"\"\n    };\n  }\n\n  /**\n   * Marks the end of Span execution.\n   * @param _endTime The time to use as the Span's end time. Defaults to\n   * the current time.\n   */\n  end(_endTime?: number): void {\n    /* Noop */\n  }\n\n  /**\n   * Sets an attribute on the Span\n   * @param _key the attribute key\n   * @param _value the attribute value\n   */\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  /**\n   * Sets attributes on the Span\n   * @param _attributes the attributes to add\n   */\n  setAttributes(_attributes: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Adds an event to the Span\n   * @param _name The name of the event\n   * @param _attributes The associated attributes to add for this event\n   */\n  addEvent(_name: string, _attributes?: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Adds a link to the Span.\n   * @param _spanContext the context of the linked span\n   * @param _attributes attributes to be added that are associated with the link\n   */\n  addLink(_spanContext: SpanContext, _attributes?: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Sets a status on the span. Overrides the default of CanonicalCode.OK.\n   * @param _status The status to set.\n   */\n  setStatus(_status: Status): this {\n    return this;\n  }\n\n  /**\n   * Updates the name of the Span\n   * @param _name the new Span name\n   */\n  updateName(_name: string): this {\n    return this;\n  }\n\n  /**\n   * Returns whether this span will be recorded\n   */\n  isRecordingEvents(): boolean {\n    return false;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { BinaryFormat } from \"../../interfaces/BinaryFormat\";\nimport { SpanContext } from \"../../interfaces/span_context\";\n\n/**\n * A no-op implementation of BinaryFormat to be used when tracing is disabled.\n */\nexport class NoOpBinaryFormat implements BinaryFormat {\n  /** Serialize the given SpanContext to a buffer */\n  toBytes(_spanContext: SpanContext): ArrayBuffer {\n    return new ArrayBuffer(0);\n  }\n\n  /** \n   * Deserialize a SpanContext from binary encoding. \n   * Returns null if the buffer does not contain a valid SpanContext.\n   */\n  fromBytes(_buffer: ArrayBuffer): SpanContext | null {\n    return null;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { HttpTextFormat } from \"../../interfaces/HttpTextFormat\";\nimport { SpanContext } from \"../../interfaces/span_context\";\n\n/**\n * A no-op implementation of HttpTextFormat to be used when tracing is disabled.\n */\nexport class NoOpHttpTextFormat implements HttpTextFormat {\n  /**\n   * Injects the given SpanContext for transmitting to a remote server.\n   * @param _spanContext The SpanContext to transmit\n   * @param _format The format of the carrier\n   * @param _carrier The carrier to propagate through, e.g. an HTTP request\n   */\n  inject(_spanContext: SpanContext, _format: string, _carrier: unknown): void { }\n  /**\n   * Returns a SpanContext intance extracted from the carrier.\n   * @param _format the format of the carrier\n   * @param _carrier The carrier being used for propagation, e.g. an HTTP request\n   */\n  extract(_format: string, _carrier: unknown): SpanContext | null {\n    return null;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tracer } from \"../../interfaces/tracer\";\nimport { Span } from \"../../interfaces/span\";\nimport { SpanOptions } from \"../../interfaces/SpanOptions\";\nimport { NoOpSpan } from \"./noOpSpan\";\nimport { BinaryFormat } from \"../../interfaces/BinaryFormat\";\nimport { HttpTextFormat } from \"../../interfaces/HttpTextFormat\";\nimport { NoOpBinaryFormat } from \"./noOpBinaryFormat\";\nimport { NoOpHttpTextFormat } from \"./noOpHttpTextFormat\";\n\n/**\n * A no-op implementation of Tracer that can be used when tracing\n * is disabled.\n */\nexport class NoOpTracer implements Tracer {\n\n  /**\n   * Starts a new Span.\n   * @param _name The name of the span.\n   * @param _options The SpanOptions used during Span creation.\n   */\n  startSpan(_name: string, _options?: SpanOptions): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n  getCurrentSpan(): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param fn The function to be executed.\n   */\n  withSpan<T extends (...args: unknown[]) => ReturnType<T>>(\n    _span: Span,\n    fn: T\n  ): ReturnType<T> {\n    return fn();\n  }\n\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n  bind<T>(target: T, _span?: Span): T {\n    return target;\n  }\n\n  /**\n   * Send a pre-populated Span object to the exporter.\n   * @param _span The span to pass along.\n   */\n  recordSpanData(_span: Span): void {\n    /* NOOP */\n  }\n\n  /**\n   * Returns the BinaryFormat interface for serializing/deserializing Spans.\n   */\n  getBinaryFormat(): BinaryFormat {\n    return new NoOpBinaryFormat();\n  }\n\n  /**\n   * Returns the HttpTextFormat interface for injecting/extracting Spans.\n   */\n  getHttpTextFormat(): HttpTextFormat {\n    return new NoOpHttpTextFormat();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport function getGlobalObject(): any {\n  return self;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tracer } from \"../interfaces/tracer\";\nimport { getGlobalObject } from \"./global\";\n\nconst GLOBAL_TRACER_VERSION = 1;\nconst GLOBAL_TRACER_SYMBOL = Symbol.for(\"@azure/core-tracing.tracerCache\");\n\nexport interface TracerCache {\n  version: number;\n  tracer?: Tracer;\n}\n\nlet cache: TracerCache;\n\nfunction loadTracerCache(): void {\n  const globalObj = getGlobalObject();\n  const existingCache: TracerCache = globalObj[GLOBAL_TRACER_SYMBOL];\n  if (existingCache) {\n    if (existingCache.version !== GLOBAL_TRACER_VERSION) {\n      throw new Error(\n        `Two incompatible versions of @azure/core-tracing have been loaded.\n         This library is ${GLOBAL_TRACER_VERSION}, existing is ${existingCache.version}.`\n      );\n    }\n    cache = existingCache;\n  } else {\n    cache = {\n      tracer: undefined,\n      version: GLOBAL_TRACER_VERSION\n    };\n    globalObj[GLOBAL_TRACER_SYMBOL] = cache;\n  }\n}\n\nexport function getCache(): TracerCache {\n  if (!cache) {\n    loadTracerCache();\n  }\n  return cache;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { NoOpTracer } from \"./tracers/noop/noOpTracer\";\nimport { Tracer } from \"./interfaces/tracer\";\nimport { getCache } from \"./utils/cache\";\n\n/**\n * Sets the global tracer, enabling tracing for the Azure SDK.\n * @param tracer An OpenTelemetry Tracer instance.\n */\nexport function setTracer(tracer: Tracer) {\n  const cache = getCache();\n  cache.tracer = tracer;\n}\n\n/**\n * Retrieves the active tracer, or returns a\n * no-op implementation if one is not set.\n */\nexport function getTracer() {\n  const cache = getCache();\n  if (!cache.tracer) {\n    cache.tracer = new NoOpTracer();\n  }\n  return cache.tracer;\n}\n","/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The status of a Span by providing a standard CanonicalCode in conjunction\n * with an optional descriptive message.\n */\nexport interface Status {\n  /** The canonical code of this message. */\n  code: CanonicalCode;\n  /** A developer-facing error message. */\n  message?: string;\n}\n\n/**\n * An enumeration of canonical status codes.\n *\n * TODO (revision): https://github.com/open-telemetry/opentelemetry-specification/issues/59\n */\nexport enum CanonicalCode {\n  /**\n   * Not an error; returned on success\n   */\n  OK = 0,\n  /**\n   * The operation was cancelled (typically by the caller).\n   */\n  CANCELLED = 1,\n  /**\n   * Unknown error.  An example of where this error may be returned is\n   * if a status value received from another address space belongs to\n   * an error-space that is not known in this address space.  Also\n   * errors raised by APIs that do not return enough error information\n   * may be converted to this error.\n   */\n  UNKNOWN = 2,\n  /**\n   * Client specified an invalid argument.  Note that this differs\n   * from FAILED_PRECONDITION.  INVALID_ARGUMENT indicates arguments\n   * that are problematic regardless of the state of the system\n   * (e.g., a malformed file name).\n   */\n  INVALID_ARGUMENT = 3,\n  /**\n   * Deadline expired before operation could complete.  For operations\n   * that change the state of the system, this error may be returned\n   * even if the operation has completed successfully.  For example, a\n   * successful response from a server could have been delayed long\n   * enough for the deadline to expire.\n   */\n  DEADLINE_EXCEEDED = 4,\n  /**\n   * Some requested entity (e.g., file or directory) was not found.\n   */\n  NOT_FOUND = 5,\n  /**\n   * Some entity that we attempted to create (e.g., file or directory)\n   * already exists.\n   */\n  ALREADY_EXISTS = 6,\n  /**\n   * The caller does not have permission to execute the specified\n   * operation.  PERMISSION_DENIED must not be used for rejections\n   * caused by exhausting some resource (use RESOURCE_EXHAUSTED\n   * instead for those errors).  PERMISSION_DENIED must not be\n   * used if the caller can not be identified (use UNAUTHENTICATED\n   * instead for those errors).\n   */\n  PERMISSION_DENIED = 7,\n  /**\n   * Some resource has been exhausted, perhaps a per-user quota, or\n   * perhaps the entire file system is out of space.\n   */\n  RESOURCE_EXHAUSTED = 8,\n  /**\n   * Operation was rejected because the system is not in a state\n   * required for the operation's execution.  For example, directory\n   * to be deleted may be non-empty, an rmdir operation is applied to\n   * a non-directory, etc.\n   *\n   * A litmus test that may help a service implementor in deciding\n   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n   *\n   *  - Use UNAVAILABLE if the client can retry just the failing call.\n   *  - Use ABORTED if the client should retry at a higher-level\n   *    (e.g., restarting a read-modify-write sequence).\n   *  - Use FAILED_PRECONDITION if the client should not retry until\n   *    the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n   *    fails because the directory is non-empty, FAILED_PRECONDITION\n   *    should be returned since the client should not retry unless\n   *    they have first fixed up the directory by deleting files from it.\n   *  - Use FAILED_PRECONDITION if the client performs conditional\n   *    REST Get/Update/Delete on a resource and the resource on the\n   *    server does not match the condition. E.g., conflicting\n   *    read-modify-write on the same resource.\n   */\n  FAILED_PRECONDITION = 9,\n  /**\n   * The operation was aborted, typically due to a concurrency issue\n   * like sequencer check failures, transaction aborts, etc.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION,\n   * ABORTED, and UNAVAILABLE.\n   */\n  ABORTED = 10,\n  /**\n   * Operation was attempted past the valid range.  E.g., seeking or\n   * reading past end of file.\n   *\n   * Unlike INVALID_ARGUMENT, this error indicates a problem that may\n   * be fixed if the system state changes. For example, a 32-bit file\n   * system will generate INVALID_ARGUMENT if asked to read at an\n   * offset that is not in the range [0,2^32-1], but it will generate\n   * OUT_OF_RANGE if asked to read from an offset past the current\n   * file size.\n   *\n   * There is a fair bit of overlap between FAILED_PRECONDITION and\n   * OUT_OF_RANGE.  We recommend using OUT_OF_RANGE (the more specific\n   * error) when it applies so that callers who are iterating through\n   * a space can easily look for an OUT_OF_RANGE error to detect when\n   * they are done.\n   */\n  OUT_OF_RANGE = 11,\n  /**\n   * Operation is not implemented or not supported/enabled in this service.\n   */\n  UNIMPLEMENTED = 12,\n  /**\n   * Internal errors.  Means some invariants expected by underlying\n   * system has been broken.  If you see one of these errors,\n   * something is very broken.\n   */\n  INTERNAL = 13,\n  /**\n   * The service is currently unavailable.  This is a most likely a\n   * transient condition and may be corrected by retrying with\n   * a backoff.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION,\n   * ABORTED, and UNAVAILABLE.\n   */\n  UNAVAILABLE = 14,\n  /**\n   * Unrecoverable data loss or corruption.\n   */\n  DATA_LOSS = 15,\n  /**\n   * The request does not have valid authentication credentials for the\n   * operation.\n   */\n  UNAUTHENTICATED = 16,\n}\n","/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type of span. Can be used to specify additional relationships between spans\n * in addition to a parent/child relationship.\n */\nexport enum SpanKind {\n  /** Default value. Indicates that the span is used internally. */\n  INTERNAL = 0,\n\n  /**\n   * Indicates that the span covers server-side handling of an RPC or other\n   * remote request.\n   */\n  SERVER = 1,\n\n  /**\n   * Indicates that the span covers the client-side wrapper around an RPC or\n   * other remote request.\n   */\n  CLIENT = 2,\n\n  /**\n   * Indicates that the span describes producer sending a message to a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  PRODUCER = 3,\n\n  /**\n   * Indicates that the span describes consumer receiving a message from a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  CONSUMER = 4,\n}\n","/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An enumeration that represents global trace flags. These flags are\n * propagated to all child {@link Span}. These determine features such as\n * whether a Span should be traced. It is implemented as a bitmask.\n */\nexport enum TraceFlags {\n  /** Bit to represent whether trace is unsampled in trace flags. */\n  UNSAMPLED = 0x0,\n  /** Bit to represent whether trace is sampled in trace flags. */\n  SAMPLED = 0x1,\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { SpanContext } from \"../interfaces/span_context\";\nimport { TraceFlags } from \"../interfaces/trace_flags\";\n\nconst VERSION = \"00\";\n\n/**\n * Generates a `SpanContext` given a `traceparent` header value.\n * @param traceParent Serialized span context data as a `traceparent` header value.\n * @returns The `SpanContext` generated from the `traceparent` value.\n */\nexport function extractSpanContextFromTraceParentHeader(\n  traceParentHeader: string\n): SpanContext | undefined {\n  const parts = traceParentHeader.split(\"-\");\n\n  if (parts.length !== 4) {\n    return;\n  }\n\n  const [version, traceId, spanId, traceOptions] = parts;\n\n  if (version !== VERSION) {\n    return;\n  }\n\n  const traceFlags = parseInt(traceOptions, 16);\n\n  const spanContext: SpanContext = {\n    spanId,\n    traceId,\n    traceFlags\n  };\n\n  return spanContext;\n}\n\n/**\n * Generates a `traceparent` value given a span context.\n * @param spanContext Contains context for a specific span.\n * @returns The `spanContext` represented as a `traceparent` value.\n */\nexport function getTraceParentHeader(spanContext: SpanContext): string | undefined {\n  const missingFields: string[] = [];\n  if (!spanContext.traceId) {\n    missingFields.push(\"traceId\");\n  }\n  if (!spanContext.spanId) {\n    missingFields.push(\"spanId\");\n  }\n\n  if (missingFields.length) {\n    return;\n  }\n\n  const flags = spanContext.traceFlags || TraceFlags.UNSAMPLED;\n  const hexFlags = flags.toString(16);\n  const traceFlags = hexFlags.length === 1 ? `0${hexFlags}` : hexFlags;\n\n  // https://www.w3.org/TR/trace-context/#traceparent-header-field-values\n  return `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-${traceFlags}`;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { GetTokenOptions } from \"@azure/core-http\";\nimport { getTracer, Span, SpanOptions, SpanKind } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @param name The name of the operation being performed.\n * @param options The options for the underlying http request.\n */\nexport function createSpan(\n  operationName: string,\n  options: GetTokenOptions = {}\n): { span: Span; options: GetTokenOptions } {\n  const tracer = getTracer();\n  const spanOptions: SpanOptions = {\n    ...options.spanOptions,\n    kind: SpanKind.CLIENT\n  };\n\n  const span = tracer.startSpan(`Azure.Identity.${operationName}`, spanOptions);\n  span.setAttribute(\"component\", \"identity\");\n\n  let newOptions = options;\n  if (span.isRecordingEvents()) {\n    newOptions = {\n      ...options,\n      spanOptions: {\n        ...options.spanOptions,\n        parent: span\n      }\n    };\n  }\n\n  return {\n    span,\n    options: newOptions\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AccessToken, TokenCredential, GetTokenOptions } from \"@azure/core-http\";\nimport { AggregateAuthenticationError } from \"../client/errors\";\nimport { createSpan } from \"../util/tracing\";\nimport { CanonicalCode } from \"@azure/core-tracing\";\n\n/**\n * Enables multiple {@link TokenCredential} implementations to be tried in order\n * until one of the getToken methods returns an {@link AccessToken}.\n */\nexport class ChainedTokenCredential implements TokenCredential {\n  private _sources: TokenCredential[] = [];\n\n  constructor(...sources: TokenCredential[]) {\n    this._sources = sources;\n  }\n\n  /**\n   * Returns the first {@link AccessToken} returned by one of the chained\n   * {@link TokenCredential} implementations.  Throws an {@link AggregateAuthenticationError}\n   * when one or more credentials throws an {@link AuthenticationError} and\n   * no credentials have returned an {@link AccessToken}.\n   *\n   * @param scopes The list of scopes for which the token will have access.\n   * @param options The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  async getToken(\n    scopes: string | string[],\n    options?: GetTokenOptions\n  ): Promise<AccessToken | null> {\n    let token = null;\n    const errors = [];\n\n    const { span, options: newOptions } = createSpan(\"ChainedTokenCredential-getToken\", options);\n\n    for (let i = 0; i < this._sources.length && token === null; i++) {\n      try {\n        token = await this._sources[i].getToken(scopes, newOptions);\n      } catch (err) {\n        errors.push(err);\n      }\n    }\n\n    if (!token && errors.length > 0) {\n      const err = new AggregateAuthenticationError(errors);\n      span.setStatus({\n        code: CanonicalCode.UNAUTHENTICATED,\n        message: err.message\n      });\n      throw err;\n    }\n\n    span.end();\n\n    return token;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { AccessToken, TokenCredential, GetTokenOptions } from \"@azure/core-http\";\nimport { IdentityClientOptions } from \"../client/identityClient\";\n\nconst BrowserNotSupportedError = new Error(\n  \"EnvironmentCredential is not supported in the browser.\"\n);\n\nexport class EnvironmentCredential implements TokenCredential {\n  constructor(options?: IdentityClientOptions) {\n    throw BrowserNotSupportedError;\n  }\n\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null> {\n    throw BrowserNotSupportedError;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-http\";\nimport { IdentityClientOptions } from \"../client/identityClient\";\n\nconst BrowserNotSupportedError = new Error(\n  \"ManagedIdentityCredential is not supported in the browser.\"\n);\n\nexport class ManagedIdentityCredential implements TokenCredential {\n  constructor(clientId: string, options?: IdentityClientOptions);\n  constructor(options?: IdentityClientOptions);  \n  constructor(clientIdOrOptions: string | IdentityClientOptions | undefined, options?: IdentityClientOptions) {\n    throw BrowserNotSupportedError;\n  }\n\n  public async getToken(\n    scopes: string | string[],\n    options?: GetTokenOptions\n  ): Promise<AccessToken | null> {\n    throw BrowserNotSupportedError;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { IdentityClientOptions } from \"../client/identityClient\";\nimport { ChainedTokenCredential } from \"./chainedTokenCredential\";\nimport { EnvironmentCredential } from \"./environmentCredential\";\nimport { ManagedIdentityCredential } from \"./managedIdentityCredential\";\n\n/**\n * Provides a default {@link ChainedTokenCredential} configuration for\n * applications that will be deployed to Azure.  The following credential\n * types will be tried, in order:\n *\n * - {@link EnvironmentCredential}\n * - {@link ManagedIdentityCredential}\n *\n * Consult the documentation of these credential types for more information\n * on how they attempt authentication.\n */\nexport class DefaultAzureCredential extends ChainedTokenCredential {\n  /**\n   * Creates an instance of the DefaultAzureCredential class.\n   *\n   * @param options Options for configuring the client which makes the authentication request.\n   */\n  constructor(identityClientOptions?: IdentityClientOptions) {\n    super(\n      new EnvironmentCredential(identityClientOptions),\n      new ManagedIdentityCredential(identityClientOptions)\n    );\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = require('./utils');\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) { // eslint-disable-line func-name-matching\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint'; // eslint-disable-line valid-typeof\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName: string) {\n  return headerName.toLowerCase();\n}\n\n/**\n * An individual header within a HttpHeaders collection.\n */\nexport interface HttpHeader {\n  /**\n   * The name of the header.\n   */\n  name: string;\n\n  /**\n   * The value of the header.\n   */\n  value: string;\n}\n\n/**\n * A HttpHeaders collection represented as a simple JSON object.\n */\nexport type RawHttpHeaders = { [headerName: string]: string };\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport class HttpHeaders {\n  private readonly _headersMap: { [headerKey: string]: HttpHeader };\n\n  constructor(rawHeaders?: RawHttpHeaders) {\n    this._headersMap = {};\n    if (rawHeaders) {\n      for (const headerName in rawHeaders) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName The name of the header to set. This value is case-insensitive.\n   * @param headerValue The value of the header to set.\n   */\n  public set(headerName: string, headerValue: string | number): void {\n    this._headersMap[getHeaderKey(headerName)] = {\n      name: headerName,\n      value: headerValue.toString()\n    };\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName The name of the header.\n   */\n  public get(headerName: string): string | undefined {\n    const header: HttpHeader = this._headersMap[getHeaderKey(headerName)];\n    return !header ? undefined : header.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  public contains(headerName: string): boolean {\n    return !!this._headersMap[getHeaderKey(headerName)];\n  }\n\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName The name of the header to remove.\n   */\n  public remove(headerName: string): boolean {\n    const result: boolean = this.contains(headerName);\n    delete this._headersMap[getHeaderKey(headerName)];\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  public rawHeaders(): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    for (const headerKey in this._headersMap) {\n      const header: HttpHeader = this._headersMap[headerKey];\n      result[header.name.toLowerCase()] = header.value;\n    }\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  public headersArray(): HttpHeader[] {\n    const headers: HttpHeader[] = [];\n    for (const headerKey in this._headersMap) {\n      headers.push(this._headersMap[headerKey]);\n    }\n    return headers;\n  }\n\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  public headerNames(): string[] {\n    const headerNames: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerNames.push(headers[i].name);\n    }\n    return headerNames;\n  }\n\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  public headerValues(): string[] {\n    const headerValues: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerValues.push(headers[i].value);\n    }\n    return headerValues;\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJson(): RawHttpHeaders {\n    return this.rawHeaders();\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJson());\n  }\n\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  public clone(): HttpHeaders {\n    return new HttpHeaders(this.rawHeaders());\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Encodes a string in base64 format.\n * @param value the string to encode\n */\nexport function encodeString(value: string): string {\n  return btoa(value);\n}\n\n/**\n * Encodes a byte array in base64 format.\n * @param value the Uint8Aray to encode\n */\nexport function encodeByteArray(value: Uint8Array): string {\n  let str = \"\";\n  for (let i = 0; i < value.length; i++) {\n    str += String.fromCharCode(value[i]);\n  }\n  return btoa(str);\n}\n\n/**\n * Decodes a base64 string into a byte array.\n * @param value the base64 string to decode\n */\nexport function decodeString(value: string): Uint8Array {\n  const byteString = atob(value);\n  const arr = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    arr[i] = byteString.charCodeAt(i);\n  }\n  return arr;\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const Constants = {\n  /**\n   * The core-http version\n   * @const\n   * @type {string}\n   */\n  coreHttpVersion: \"1.0.0-preview.2\",\n\n  /**\n   * Specifies HTTP.\n   *\n   * @const\n   * @type {string}\n   */\n  HTTP: \"http:\",\n\n  /**\n   * Specifies HTTPS.\n   *\n   * @const\n   * @type {string}\n   */\n  HTTPS: \"https:\",\n\n  /**\n   * Specifies HTTP Proxy.\n   *\n   * @const\n   * @type {string}\n   */\n  HTTP_PROXY: \"HTTP_PROXY\",\n\n  /**\n   * Specifies HTTPS Proxy.\n   *\n   * @const\n   * @type {string}\n   */\n  HTTPS_PROXY: \"HTTPS_PROXY\",\n\n  HttpConstants: {\n    /**\n     * Http Verbs\n     *\n     * @const\n     * @enum {string}\n     */\n    HttpVerbs: {\n      PUT: \"PUT\",\n      GET: \"GET\",\n      DELETE: \"DELETE\",\n      POST: \"POST\",\n      MERGE: \"MERGE\",\n      HEAD: \"HEAD\",\n      PATCH: \"PATCH\"\n    },\n\n    StatusCodes: {\n      TooManyRequests: 429\n    }\n  },\n\n  /**\n   * Defines constants for use with HTTP headers.\n   */\n  HeaderConstants: {\n    /**\n     * The Authorization header.\n     *\n     * @const\n     * @type {string}\n     */\n    AUTHORIZATION: \"authorization\",\n\n    AUTHORIZATION_SCHEME: \"Bearer\",\n\n    /**\n     * The Retry-After response-header field can be used with a 503 (Service\n     * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n     * the service is expected to be unavailable to the requesting client.\n     *\n     * @const\n     * @type {string}\n     */\n    RETRY_AFTER: \"Retry-After\",\n\n    /**\n     * The UserAgent header.\n     *\n     * @const\n     * @type {string}\n     */\n    USER_AGENT: \"User-Agent\"\n  }\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport uuidv4 from \"uuid/v4\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { RestError } from \"../restError\";\nimport { WebResource } from \"../webResource\";\nimport { Constants } from \"./constants\";\n\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/gi;\n\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport const isNode =\n  typeof process !== \"undefined\" &&\n  !!process.version &&\n  !!process.versions &&\n  !!process.versions.node;\n\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param {object} urlToCheck The url to check\n * @return {boolean} True if the URL is HTTPS; false otherwise.\n */\nexport function urlIsHTTPS(urlToCheck: { protocol: string }): boolean {\n  return urlToCheck.protocol.toLowerCase() === Constants.HTTPS;\n}\n\n/**\n * Encodes an URI.\n *\n * @param {string} uri The URI to be encoded.\n * @return {string} The encoded URI.\n */\nexport function encodeUri(uri: string): string {\n  return encodeURIComponent(uri)\n    .replace(/!/g, \"%21\")\n    .replace(/\"/g, \"%27\")\n    .replace(/\\(/g, \"%28\")\n    .replace(/\\)/g, \"%29\")\n    .replace(/\\*/g, \"%2A\");\n}\n\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param {HttpOperationResponse} response The Http Response\n *\n * @return {object} The stripped version of Http Response.\n */\nexport function stripResponse(response: HttpOperationResponse): any {\n  const strippedResponse: any = {};\n  strippedResponse.body = response.bodyAsText;\n  strippedResponse.headers = response.headers;\n  strippedResponse.status = response.status;\n  return strippedResponse;\n}\n\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param {WebResource} request The Http Request object\n *\n * @return {WebResource} The stripped version of Http Request.\n */\nexport function stripRequest(request: WebResource): WebResource {\n  const strippedRequest = request.clone();\n  if (strippedRequest.headers) {\n    strippedRequest.headers.remove(\"authorization\");\n  }\n  return strippedRequest;\n}\n\n/**\n * Validates the given uuid as a string\n *\n * @param {string} uuid The uuid as a string that needs to be validated\n *\n * @return {boolean} True if the uuid is valid; false otherwise.\n */\nexport function isValidUuid(uuid: string): boolean {\n  return validUuidRegex.test(uuid);\n}\n\n/**\n * Generated UUID\n *\n * @return {string} RFC4122 v4 UUID.\n */\nexport function generateUuid(): string {\n  return uuidv4();\n}\n\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param {Array} promiseFactories An array of promise factories(A function that return a promise)\n *\n * @param {any} [kickstart] Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n *\n * @return A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(promiseFactories: Array<any>, kickstart: any) {\n  let result = Promise.resolve(kickstart);\n  promiseFactories.forEach((promiseFactory) => {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param {number} t The number of milliseconds to be delayed.\n * @param {T} value The value to be resolved with after a timeout of t milliseconds.\n * @returns {Promise<T>} Resolved promise\n */\nexport function delay<T>(t: number, value?: T): Promise<T> {\n  return new Promise((resolve) => setTimeout(() => resolve(value), t));\n}\n\n/**\n * Service callback that is returned for REST requests initiated by the service client.\n */\nexport interface ServiceCallback<TResult> {\n  /**\n   * A method that will be invoked as a callback to a service function.\n   * @param {Error | RestError | null} err The error occurred if any, while executing the request; otherwise null.\n   * @param {TResult} [result] The deserialized response body if an error did not occur.\n   * @param {WebResource} [request] The raw/actual request sent to the server if an error did not occur.\n   * @param {HttpOperationResponse} [response] The raw/actual response from the server if an error did not occur.\n   */\n  (\n    err: Error | RestError | null,\n    result?: TResult,\n    request?: WebResource,\n    response?: HttpOperationResponse\n  ): void;\n}\n\n/**\n * Converts a Promise to a callback.\n * @param {Promise<any>} promise The Promise to be converted to a callback\n * @returns {Function} A function that takes the callback (cb: Function): void\n * @deprecated generated code should instead depend on responseToBody\n */\nexport function promiseToCallback(promise: Promise<any>): Function {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  return (cb: Function): void => {\n    promise.then(\n      (data: any) => {\n        cb(undefined, data);\n      },\n      (err: Error) => {\n        cb(err);\n      }\n    );\n  };\n}\n\n/**\n * Converts a Promise to a service callback.\n * @param {Promise<HttpOperationResponse>} promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns {Function} A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nexport function promiseToServiceCallback<T>(promise: Promise<HttpOperationResponse>): Function {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  return (cb: ServiceCallback<T>): void => {\n    promise.then(\n      (data: HttpOperationResponse) => {\n        process.nextTick(cb, undefined, data.parsedBody as T, data.request, data);\n      },\n      (err: Error) => {\n        process.nextTick(cb, err);\n      }\n    );\n  };\n}\n\nexport function prepareXMLRootList(obj: any, elementName: string) {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n  return { [elementName]: obj };\n}\n\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param {object} targetCtor The target object on which the properties need to be applied.\n * @param {Array<object>} sourceCtors An array of source objects from which the properties need to be taken.\n */\nexport function applyMixins(targetCtor: any, sourceCtors: any[]): void {\n  sourceCtors.forEach((sourceCtors) => {\n    Object.getOwnPropertyNames(sourceCtors.prototype).forEach((name) => {\n      targetCtor.prototype[name] = sourceCtors.prototype[name];\n    });\n  });\n}\n\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param {string} value The value to be validated for ISO 8601 duration format.\n * @return {boolean} `true` if valid, `false` otherwise.\n */\nexport function isDuration(value: string): boolean {\n  return validateISODuration.test(value);\n}\n\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param {string | undefined} value The value to search and replace in.\n * @param {string} searchValue The value to search for in the value argument.\n * @param {string} replaceValue The value to replace searchValue with in the value argument.\n * @returns {string | undefined} The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(\n  value: string | undefined,\n  searchValue: string,\n  replaceValue: string\n): string | undefined {\n  return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param {any} value Any entity\n * @return {boolean} - true is it is primitive type, false otherwise.\n */\nexport function isPrimitiveType(value: any): boolean {\n  return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as base64 from \"./util/base64\";\nimport * as utils from \"./util/utils\";\n\nexport class Serializer {\n  constructor(\n    public readonly modelMappers: { [key: string]: any } = {},\n    public readonly isXML?: boolean\n  ) {}\n\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void {\n    const failValidation = (constraintName: keyof MapperConstraints, constraintValue: any) => {\n      throw new Error(\n        `\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`\n      );\n    };\n    if (mapper.constraints && value != undefined) {\n      const {\n        ExclusiveMaximum,\n        ExclusiveMinimum,\n        InclusiveMaximum,\n        InclusiveMinimum,\n        MaxItems,\n        MaxLength,\n        MinItems,\n        MinLength,\n        MultipleOf,\n        Pattern,\n        UniqueItems\n      } = mapper.constraints;\n      if (ExclusiveMaximum != undefined && value >= ExclusiveMaximum) {\n        failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n      }\n      if (ExclusiveMinimum != undefined && value <= ExclusiveMinimum) {\n        failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n      }\n      if (InclusiveMaximum != undefined && value > InclusiveMaximum) {\n        failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n      }\n      if (InclusiveMinimum != undefined && value < InclusiveMinimum) {\n        failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n      }\n      if (MaxItems != undefined && value.length > MaxItems) {\n        failValidation(\"MaxItems\", MaxItems);\n      }\n      if (MaxLength != undefined && value.length > MaxLength) {\n        failValidation(\"MaxLength\", MaxLength);\n      }\n      if (MinItems != undefined && value.length < MinItems) {\n        failValidation(\"MinItems\", MinItems);\n      }\n      if (MinLength != undefined && value.length < MinLength) {\n        failValidation(\"MinLength\", MinLength);\n      }\n      if (MultipleOf != undefined && value % MultipleOf !== 0) {\n        failValidation(\"MultipleOf\", MultipleOf);\n      }\n      if (Pattern) {\n        const pattern: RegExp = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n        if (typeof value !== \"string\" || value.match(pattern) === null) {\n          failValidation(\"Pattern\", Pattern);\n        }\n      }\n      if (\n        UniqueItems &&\n        value.some((item: any, i: number, ar: Array<any>) => ar.indexOf(item) !== i)\n      ) {\n        failValidation(\"UniqueItems\", UniqueItems);\n      }\n    }\n  }\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper\n   *\n   * @param {Mapper} mapper The mapper which defines the metadata of the serializable object\n   *\n   * @param {object|string|Array|number|boolean|Date|stream} object A valid Javascript object to be serialized\n   *\n   * @param {string} objectName Name of the serialized object\n   *\n   * @returns {object|string|Array|number|boolean|Date|stream} A valid serialized Javascript object\n   */\n  serialize(mapper: Mapper, object: any, objectName?: string): any {\n    let payload: any = {};\n    const mapperType = mapper.type.name as string;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n    if (mapperType.match(/^Sequence$/gi) !== null) {\n      payload = [];\n    }\n\n    if (mapper.isConstant) {\n      object = mapper.defaultValue;\n    }\n\n    // This table of allowed values should help explain\n    // the mapper.required and mapper.nullable properties.\n    // X means \"neither undefined or null are allowed\".\n    //           || required\n    //           || true      | false\n    //  nullable || ==========================\n    //      true || null      | undefined/null\n    //     false || X         | undefined\n    // undefined || X         | undefined/null\n\n    const { required, nullable } = mapper;\n\n    if (required && nullable && object === undefined) {\n      throw new Error(`${objectName} cannot be undefined.`);\n    }\n    if (required && !nullable && object == undefined) {\n      throw new Error(`${objectName} cannot be null or undefined.`);\n    }\n    if (!required && nullable === false && object === null) {\n      throw new Error(`${objectName} cannot be null.`);\n    }\n\n    if (object == undefined) {\n      payload = object;\n    } else {\n      // Validate Constraints if any\n      this.validateConstraints(mapper, object, objectName);\n      if (mapperType.match(/^any$/gi) !== null) {\n        payload = object;\n      } else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/gi) !== null) {\n        payload = serializeBasicTypes(mapperType, objectName, object);\n      } else if (mapperType.match(/^Enum$/gi) !== null) {\n        const enumMapper: EnumMapper = mapper as EnumMapper;\n        payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n      } else if (\n        mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/gi) !== null\n      ) {\n        payload = serializeDateTypes(mapperType, object, objectName);\n      } else if (mapperType.match(/^ByteArray$/gi) !== null) {\n        payload = serializeByteArrayType(objectName, object);\n      } else if (mapperType.match(/^Base64Url$/gi) !== null) {\n        payload = serializeBase64UrlType(objectName, object);\n      } else if (mapperType.match(/^Sequence$/gi) !== null) {\n        payload = serializeSequenceType(this, mapper as SequenceMapper, object, objectName);\n      } else if (mapperType.match(/^Dictionary$/gi) !== null) {\n        payload = serializeDictionaryType(this, mapper as DictionaryMapper, object, objectName);\n      } else if (mapperType.match(/^Composite$/gi) !== null) {\n        payload = serializeCompositeType(this, mapper as CompositeMapper, object, objectName);\n      }\n    }\n    return payload;\n  }\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper\n   *\n   * @param {object} mapper The mapper which defines the metadata of the serializable object\n   *\n   * @param {object|string|Array|number|boolean|Date|stream} responseBody A valid Javascript entity to be deserialized\n   *\n   * @param {string} objectName Name of the deserialized object\n   *\n   * @returns {object|string|Array|number|boolean|Date|stream} A valid deserialized Javascript object\n   */\n  deserialize(mapper: Mapper, responseBody: any, objectName: string): any {\n    if (responseBody == undefined) {\n      if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n        // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n        // between the list being empty versus being missing,\n        // so let's do the more user-friendly thing and return an empty list.\n        responseBody = [];\n      }\n      // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n      if (mapper.defaultValue !== undefined) {\n        responseBody = mapper.defaultValue;\n      }\n      return responseBody;\n    }\n\n    let payload: any;\n    const mapperType = mapper.type.name;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n\n    if (mapperType.match(/^Composite$/gi) !== null) {\n      payload = deserializeCompositeType(this, mapper as CompositeMapper, responseBody, objectName);\n    } else {\n      if (this.isXML) {\n        /**\n         * If the mapper specifies this as a non-composite type value but the responseBody contains\n         * both header (\"$\") and body (\"_\") properties, then just reduce the responseBody value to\n         * the body (\"_\") property.\n         */\n        if (responseBody[\"$\"] != undefined && responseBody[\"_\"] != undefined) {\n          responseBody = responseBody[\"_\"];\n        }\n      }\n\n      if (mapperType.match(/^Number$/gi) !== null) {\n        payload = parseFloat(responseBody);\n        if (isNaN(payload)) {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^Boolean$/gi) !== null) {\n        if (responseBody === \"true\") {\n          payload = true;\n        } else if (responseBody === \"false\") {\n          payload = false;\n        } else {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/gi) !== null) {\n        payload = responseBody;\n      } else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/gi) !== null) {\n        payload = new Date(responseBody);\n      } else if (mapperType.match(/^UnixTime$/gi) !== null) {\n        payload = unixTimeToDate(responseBody);\n      } else if (mapperType.match(/^ByteArray$/gi) !== null) {\n        payload = base64.decodeString(responseBody);\n      } else if (mapperType.match(/^Base64Url$/gi) !== null) {\n        payload = base64UrlToByteArray(responseBody);\n      } else if (mapperType.match(/^Sequence$/gi) !== null) {\n        payload = deserializeSequenceType(this, mapper as SequenceMapper, responseBody, objectName);\n      } else if (mapperType.match(/^Dictionary$/gi) !== null) {\n        payload = deserializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          responseBody,\n          objectName\n        );\n      }\n    }\n\n    if (mapper.isConstant) {\n      payload = mapper.defaultValue;\n    }\n\n    return payload;\n  }\n}\n\nfunction trimEnd(str: string, ch: string) {\n  let len = str.length;\n  while (len - 1 >= 0 && str[len - 1] === ch) {\n    --len;\n  }\n  return str.substr(0, len);\n}\n\nfunction bufferToBase64Url(buffer: any): string | undefined {\n  if (!buffer) {\n    return undefined;\n  }\n  if (!(buffer instanceof Uint8Array)) {\n    throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n  }\n  // Uint8Array to Base64.\n  const str = base64.encodeByteArray(buffer);\n  // Base64 to Base64Url.\n  return trimEnd(str, \"=\")\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\");\n}\n\nfunction base64UrlToByteArray(str: string): Uint8Array | undefined {\n  if (!str) {\n    return undefined;\n  }\n  if (str && typeof str.valueOf() !== \"string\") {\n    throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n  }\n  // Base64Url to Base64.\n  str = str.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n  // Base64 to Uint8Array.\n  return base64.decodeString(str);\n}\n\nfunction splitSerializeName(prop: string | undefined): string[] {\n  const classes: string[] = [];\n  let partialclass = \"\";\n  if (prop) {\n    const subwords = prop.split(\".\");\n\n    for (const item of subwords) {\n      if (item.charAt(item.length - 1) === \"\\\\\") {\n        partialclass += item.substr(0, item.length - 1) + \".\";\n      } else {\n        partialclass += item;\n        classes.push(partialclass);\n        partialclass = \"\";\n      }\n    }\n  }\n\n  return classes;\n}\n\nfunction dateToUnixTime(d: string | Date): number | undefined {\n  if (!d) {\n    return undefined;\n  }\n\n  if (typeof d.valueOf() === \"string\") {\n    d = new Date(d as string);\n  }\n  return Math.floor((d as Date).getTime() / 1000);\n}\n\nfunction unixTimeToDate(n: number): Date | undefined {\n  if (!n) {\n    return undefined;\n  }\n  return new Date(n * 1000);\n}\n\nfunction serializeBasicTypes(typeName: string, objectName: string, value: any): any {\n  if (value !== null && value !== undefined) {\n    if (typeName.match(/^Number$/gi) !== null) {\n      if (typeof value !== \"number\") {\n        throw new Error(`${objectName} with value ${value} must be of type number.`);\n      }\n    } else if (typeName.match(/^String$/gi) !== null) {\n      if (typeof value.valueOf() !== \"string\") {\n        throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n      }\n    } else if (typeName.match(/^Uuid$/gi) !== null) {\n      if (!(typeof value.valueOf() === \"string\" && utils.isValidUuid(value))) {\n        throw new Error(\n          `${objectName} with value \"${value}\" must be of type string and a valid uuid.`\n        );\n      }\n    } else if (typeName.match(/^Boolean$/gi) !== null) {\n      if (typeof value !== \"boolean\") {\n        throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n      }\n    } else if (typeName.match(/^Stream$/gi) !== null) {\n      const objectType = typeof value;\n      if (\n        objectType !== \"string\" &&\n        objectType !== \"function\" &&\n        !(value instanceof ArrayBuffer) &&\n        !ArrayBuffer.isView(value) &&\n        !(typeof Blob === \"function\" && value instanceof Blob)\n      ) {\n        throw new Error(\n          `${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.`\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeEnumType(objectName: string, allowedValues: Array<any>, value: any): any {\n  if (!allowedValues) {\n    throw new Error(\n      `Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`\n    );\n  }\n  const isPresent = allowedValues.some((item) => {\n    if (typeof item.valueOf() === \"string\") {\n      return item.toLowerCase() === value.toLowerCase();\n    }\n    return item === value;\n  });\n  if (!isPresent) {\n    throw new Error(\n      `${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(\n        allowedValues\n      )}.`\n    );\n  }\n  return value;\n}\n\nfunction serializeByteArrayType(objectName: string, value: any): any {\n  if (value != undefined) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = base64.encodeByteArray(value);\n  }\n  return value;\n}\n\nfunction serializeBase64UrlType(objectName: string, value: any): any {\n  if (value != undefined) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = bufferToBase64Url(value);\n  }\n  return value;\n}\n\nfunction serializeDateTypes(typeName: string, value: any, objectName: string) {\n  if (value != undefined) {\n    if (typeName.match(/^Date$/gi) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value =\n        value instanceof Date\n          ? value.toISOString().substring(0, 10)\n          : new Date(value).toISOString().substring(0, 10);\n    } else if (typeName.match(/^DateTime$/gi) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n    } else if (typeName.match(/^DateTimeRfc1123$/gi) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n      }\n      value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n    } else if (typeName.match(/^UnixTime$/gi) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(\n          `${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n            `for it to be serialized in UnixTime/Epoch format.`\n        );\n      }\n      value = dateToUnixTime(value);\n    } else if (typeName.match(/^TimeSpan$/gi) !== null) {\n      if (!utils.isDuration(value)) {\n        throw new Error(\n          `${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`\n        );\n      }\n      value = value;\n    }\n  }\n  return value;\n}\n\nfunction serializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  object: any,\n  objectName: string\n) {\n  if (!Array.isArray(object)) {\n    throw new Error(`${objectName} must be of type Array.`);\n  }\n  const elementType = mapper.type.element;\n  if (!elementType || typeof elementType !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`\n    );\n  }\n  const tempArray = [];\n  for (let i = 0; i < object.length; i++) {\n    tempArray[i] = serializer.serialize(elementType, object[i], objectName);\n  }\n  return tempArray;\n}\n\nfunction serializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  object: any,\n  objectName: string\n) {\n  if (typeof object !== \"object\") {\n    throw new Error(`${objectName} must be of type object.`);\n  }\n  const valueType = mapper.type.value;\n  if (!valueType || typeof valueType !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`\n    );\n  }\n  const tempDictionary: { [key: string]: any } = {};\n  for (const key of Object.keys(object)) {\n    tempDictionary[key] = serializer.serialize(valueType, object[key], objectName + \".\" + key);\n  }\n  return tempDictionary;\n}\n\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer the serializer containing the entire set of mappers\n * @param mapper the composite mapper to resolve\n */\nfunction resolveModelProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): { [propertyName: string]: Mapper } {\n  let modelProps = mapper.type.modelProperties;\n  if (!modelProps) {\n    const className = mapper.type.className;\n    if (!className) {\n      throw new Error(\n        `Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(\n          mapper,\n          undefined,\n          2\n        )}\".`\n      );\n    }\n\n    const modelMapper = serializer.modelMappers[className];\n    if (!modelMapper) {\n      throw new Error(`mapper() cannot be null or undefined for model \"${className}\".`);\n    }\n    modelProps = modelMapper.type.modelProperties;\n    if (!modelProps) {\n      throw new Error(\n        `modelProperties cannot be null or undefined in the ` +\n          `mapper \"${JSON.stringify(\n            modelMapper\n          )}\" of type \"${className}\" for object \"${objectName}\".`\n      );\n    }\n  }\n\n  return modelProps;\n}\n\nfunction serializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  objectName: string\n) {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n  }\n\n  if (object != undefined) {\n    const payload: any = {};\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    for (const key of Object.keys(modelProps)) {\n      const propertyMapper = modelProps[key];\n      if (propertyMapper.readOnly) {\n        continue;\n      }\n\n      let propName: string | undefined;\n      let parentObject: any = payload;\n      if (serializer.isXML) {\n        if (propertyMapper.xmlIsWrapped) {\n          propName = propertyMapper.xmlName;\n        } else {\n          propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n        }\n      } else {\n        const paths = splitSerializeName(propertyMapper.serializedName!);\n        propName = paths.pop();\n\n        for (const pathName of paths) {\n          const childObject = parentObject[pathName];\n          if (childObject == undefined && object[key] != undefined) {\n            parentObject[pathName] = {};\n          }\n          parentObject = parentObject[pathName];\n        }\n      }\n\n      if (parentObject != undefined) {\n        const propertyObjectName =\n          propertyMapper.serializedName !== \"\"\n            ? objectName + \".\" + propertyMapper.serializedName\n            : objectName;\n\n        let toSerialize = object[key];\n        const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n        if (\n          polymorphicDiscriminator &&\n          polymorphicDiscriminator.clientName === key &&\n          toSerialize == undefined\n        ) {\n          toSerialize = mapper.serializedName;\n        }\n\n        const serializedValue = serializer.serialize(\n          propertyMapper,\n          toSerialize,\n          propertyObjectName\n        );\n        if (serializedValue !== undefined && propName != undefined) {\n          if (propertyMapper.xmlIsAttribute) {\n            // $ is the key attributes are kept under in xml2js.\n            // This keeps things simple while preventing name collision\n            // with names in user documents.\n            parentObject.$ = parentObject.$ || {};\n            parentObject.$[propName] = serializedValue;\n          } else if (propertyMapper.xmlIsWrapped) {\n            parentObject[propName] = { [propertyMapper.xmlElementName!]: serializedValue };\n          } else {\n            parentObject[propName] = serializedValue;\n          }\n        }\n      }\n    }\n\n    const additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n      const propNames = Object.keys(modelProps);\n      for (const clientPropName in object) {\n        const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n        if (isAdditionalProperty) {\n          payload[clientPropName] = serializer.serialize(\n            additionalPropertiesMapper,\n            object[clientPropName],\n            objectName + '[\"' + clientPropName + '\"]'\n          );\n        }\n      }\n    }\n\n    return payload;\n  }\n  return object;\n}\n\nfunction isSpecialXmlProperty(propertyName: string): boolean {\n  return [\"$\", \"_\"].includes(propertyName);\n}\n\nfunction deserializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  responseBody: any,\n  objectName: string\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n  }\n\n  const modelProps = resolveModelProperties(serializer, mapper, objectName);\n  let instance: { [key: string]: any } = {};\n  const handledPropertyNames: string[] = [];\n\n  for (const key of Object.keys(modelProps)) {\n    const propertyMapper = modelProps[key];\n    const paths = splitSerializeName(modelProps[key].serializedName!);\n    handledPropertyNames.push(paths[0]);\n    const { serializedName, xmlName, xmlElementName } = propertyMapper;\n    let propertyObjectName = objectName;\n    if (serializedName !== \"\" && serializedName !== undefined) {\n      propertyObjectName = objectName + \".\" + serializedName;\n    }\n\n    const headerCollectionPrefix = (propertyMapper as DictionaryMapper).headerCollectionPrefix;\n    if (headerCollectionPrefix) {\n      const dictionary: any = {};\n      for (const headerKey of Object.keys(responseBody)) {\n        if (headerKey.startsWith(headerCollectionPrefix)) {\n          dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(\n            (propertyMapper as DictionaryMapper).type.value,\n            responseBody[headerKey],\n            propertyObjectName\n          );\n        }\n\n        handledPropertyNames.push(headerKey);\n      }\n      instance[key] = dictionary;\n    } else if (serializer.isXML) {\n      if (propertyMapper.xmlIsAttribute && responseBody.$) {\n        instance[key] = serializer.deserialize(\n          propertyMapper,\n          responseBody.$[xmlName!],\n          propertyObjectName\n        );\n      } else {\n        const propertyName = xmlElementName || xmlName || serializedName;\n        let unwrappedProperty = responseBody[propertyName!];\n        if (propertyMapper.xmlIsWrapped) {\n          unwrappedProperty = responseBody[xmlName!];\n          unwrappedProperty = unwrappedProperty && unwrappedProperty[xmlElementName!];\n\n          const isEmptyWrappedList = unwrappedProperty === undefined;\n          if (isEmptyWrappedList) {\n            unwrappedProperty = [];\n          }\n        }\n        instance[key] = serializer.deserialize(\n          propertyMapper,\n          unwrappedProperty,\n          propertyObjectName\n        );\n      }\n    } else {\n      // deserialize the property if it is present in the provided responseBody instance\n      let propertyInstance;\n      let res = responseBody;\n      // traversing the object step by step.\n      for (const item of paths) {\n        if (!res) break;\n        res = res[item];\n      }\n      propertyInstance = res;\n      const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n      // checking that the model property name (key)(ex: \"fishtype\") and the\n      // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n      // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n      // is a better approach. The generator is not consistent with escaping '\\.' in the\n      // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n      // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n      // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n      // the transformation of model property name (ex: \"fishtype\") is done consistently.\n      // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n      if (\n        polymorphicDiscriminator &&\n        key === polymorphicDiscriminator.clientName &&\n        propertyInstance == undefined\n      ) {\n        propertyInstance = mapper.serializedName;\n      }\n\n      let serializedValue;\n      // paging\n      if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n        propertyInstance = responseBody[key];\n        instance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName);\n      } else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n        serializedValue = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName\n        );\n        instance[key] = serializedValue;\n      }\n    }\n  }\n\n  const additionalPropertiesMapper = mapper.type.additionalProperties;\n  if (additionalPropertiesMapper) {\n    const isAdditionalProperty = (responsePropName: string) => {\n      for (const clientPropName in modelProps) {\n        const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n        if (paths[0] === responsePropName) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    for (const responsePropName in responseBody) {\n      if (isAdditionalProperty(responsePropName)) {\n        instance[responsePropName] = serializer.deserialize(\n          additionalPropertiesMapper,\n          responseBody[responsePropName],\n          objectName + '[\"' + responsePropName + '\"]'\n        );\n      }\n    }\n  } else if (responseBody) {\n    for (const key of Object.keys(responseBody)) {\n      if (\n        instance[key] === undefined &&\n        !handledPropertyNames.includes(key) &&\n        !isSpecialXmlProperty(key)\n      ) {\n        instance[key] = responseBody[key];\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction deserializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  responseBody: any,\n  objectName: string\n): any {\n  /*jshint validthis: true */\n  const value = mapper.type.value;\n  if (!value || typeof value !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`\n    );\n  }\n  if (responseBody) {\n    const tempDictionary: { [key: string]: any } = {};\n    for (const key of Object.keys(responseBody)) {\n      tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName);\n    }\n    return tempDictionary;\n  }\n  return responseBody;\n}\n\nfunction deserializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  responseBody: any,\n  objectName: string\n): any {\n  /*jshint validthis: true */\n  const element = mapper.type.element;\n  if (!element || typeof element !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`\n    );\n  }\n  if (responseBody) {\n    if (!Array.isArray(responseBody)) {\n      // xml2js will interpret a single element array as just the element, so force it to be an array\n      responseBody = [responseBody];\n    }\n\n    const tempArray = [];\n    for (let i = 0; i < responseBody.length; i++) {\n      tempArray[i] = serializer.deserialize(element, responseBody[i], `${objectName}[${i}]`);\n    }\n    return tempArray;\n  }\n  return responseBody;\n}\n\nfunction getPolymorphicMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  polymorphicPropertyName: \"clientName\" | \"serializedName\"\n): CompositeMapper {\n  const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n  if (polymorphicDiscriminator) {\n    const discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n    if (discriminatorName != undefined) {\n      const discriminatorValue = object[discriminatorName];\n      if (discriminatorValue != undefined) {\n        const typeName = mapper.type.uberParent || mapper.type.className;\n        const indexDiscriminator =\n          discriminatorValue === typeName\n            ? discriminatorValue\n            : typeName + \".\" + discriminatorValue;\n        const polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n        if (polymorphicMapper) {\n          mapper = polymorphicMapper;\n        }\n      }\n    }\n  }\n  return mapper;\n}\n\nfunction getPolymorphicDiscriminatorRecursively(\n  serializer: Serializer,\n  mapper: CompositeMapper\n): PolymorphicDiscriminator | undefined {\n  return (\n    mapper.type.polymorphicDiscriminator ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.className)\n  );\n}\n\nfunction getPolymorphicDiscriminatorSafely(serializer: Serializer, typeName?: string) {\n  return (\n    typeName &&\n    serializer.modelMappers[typeName] &&\n    serializer.modelMappers[typeName].type.polymorphicDiscriminator\n  );\n}\n\nexport interface MapperConstraints {\n  InclusiveMaximum?: number;\n  ExclusiveMaximum?: number;\n  InclusiveMinimum?: number;\n  ExclusiveMinimum?: number;\n  MaxLength?: number;\n  MinLength?: number;\n  Pattern?: RegExp;\n  MaxItems?: number;\n  MinItems?: number;\n  UniqueItems?: true;\n  MultipleOf?: number;\n}\n\nexport type MapperType =\n  | SimpleMapperType\n  | CompositeMapperType\n  | SequenceMapperType\n  | DictionaryMapperType\n  | EnumMapperType;\n\nexport interface SimpleMapperType {\n  name:\n    | \"Base64Url\"\n    | \"Boolean\"\n    | \"ByteArray\"\n    | \"Date\"\n    | \"DateTime\"\n    | \"DateTimeRfc1123\"\n    | \"Object\"\n    | \"Stream\"\n    | \"String\"\n    | \"TimeSpan\"\n    | \"UnixTime\"\n    | \"Uuid\"\n    | \"Number\"\n    | \"any\";\n}\n\nexport interface CompositeMapperType {\n  name: \"Composite\";\n\n  // Only one of the two below properties should be present.\n  // Use className to reference another type definition,\n  // and use modelProperties/additionalProperties when the reference to the other type has been resolved.\n  className?: string;\n\n  modelProperties?: { [propertyName: string]: Mapper };\n  additionalProperties?: Mapper;\n\n  uberParent?: string;\n  polymorphicDiscriminator?: PolymorphicDiscriminator;\n}\n\nexport interface SequenceMapperType {\n  name: \"Sequence\";\n  element: Mapper;\n}\n\nexport interface DictionaryMapperType {\n  name: \"Dictionary\";\n  value: Mapper;\n}\n\nexport interface EnumMapperType {\n  name: \"Enum\";\n  allowedValues: any[];\n}\n\nexport interface BaseMapper {\n  xmlName?: string;\n  xmlIsAttribute?: boolean;\n  xmlElementName?: string;\n  xmlIsWrapped?: boolean;\n  readOnly?: boolean;\n  isConstant?: boolean;\n  required?: boolean;\n  nullable?: boolean;\n  serializedName?: string;\n  type: MapperType;\n  defaultValue?: any;\n  constraints?: MapperConstraints;\n}\n\nexport type Mapper = BaseMapper | CompositeMapper | SequenceMapper | DictionaryMapper | EnumMapper;\n\nexport interface PolymorphicDiscriminator {\n  serializedName: string;\n  clientName: string;\n  [key: string]: string;\n}\n\nexport interface CompositeMapper extends BaseMapper {\n  type: CompositeMapperType;\n}\n\nexport interface SequenceMapper extends BaseMapper {\n  type: SequenceMapperType;\n}\n\nexport interface DictionaryMapper extends BaseMapper {\n  type: DictionaryMapperType;\n  headerCollectionPrefix?: string;\n}\n\nexport interface EnumMapper extends BaseMapper {\n  type: EnumMapperType;\n}\n\nexport interface UrlParameterValue {\n  value: string;\n  skipUrlEncoding: boolean;\n}\n\n// TODO: why is this here?\nexport function serializeObject(toSerialize: any): any {\n  if (toSerialize == undefined) return undefined;\n  if (toSerialize instanceof Uint8Array) {\n    toSerialize = base64.encodeByteArray(toSerialize);\n    return toSerialize;\n  } else if (toSerialize instanceof Date) {\n    return toSerialize.toISOString();\n  } else if (Array.isArray(toSerialize)) {\n    const array = [];\n    for (let i = 0; i < toSerialize.length; i++) {\n      array.push(serializeObject(toSerialize[i]));\n    }\n    return array;\n  } else if (typeof toSerialize === \"object\") {\n    const dictionary: { [key: string]: any } = {};\n    for (const property in toSerialize) {\n      dictionary[property] = serializeObject(toSerialize[property]);\n    }\n    return dictionary;\n  }\n  return toSerialize;\n}\n\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum<T extends string>(o: Array<T>): { [K in T]: K } {\n  const result: any = {};\n  for (const key of o) {\n    result[key] = key;\n  }\n  return result;\n}\n\nexport const MapperType = strEnum([\n  \"Base64Url\",\n  \"Boolean\",\n  \"ByteArray\",\n  \"Composite\",\n  \"Date\",\n  \"DateTime\",\n  \"DateTimeRfc1123\",\n  \"Dictionary\",\n  \"Enum\",\n  \"Number\",\n  \"Object\",\n  \"Sequence\",\n  \"String\",\n  \"Stream\",\n  \"TimeSpan\",\n  \"UnixTime\"\n]);\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpHeaders } from \"./httpHeaders\";\nimport { OperationSpec } from \"./operationSpec\";\nimport { Mapper, Serializer } from \"./serializer\";\nimport { generateUuid } from \"./util/utils\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { ProxySettings } from \"./serviceClient\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanOptions } from \"@azure/core-tracing\";\n\nexport type HttpMethods =\n  | \"GET\"\n  | \"PUT\"\n  | \"POST\"\n  | \"DELETE\"\n  | \"PATCH\"\n  | \"HEAD\"\n  | \"OPTIONS\"\n  | \"TRACE\";\nexport type HttpRequestBody =\n  | Blob\n  | string\n  | ArrayBuffer\n  | ArrayBufferView\n  | (() => NodeJS.ReadableStream);\n\n/**\n * Fired in response to upload or download progress.\n */\nexport type TransferProgressEvent = {\n  /**\n   * The number of bytes loaded so far.\n   */\n  loadedBytes: number;\n};\n\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n *\n * @constructor\n */\nexport class WebResource {\n  url: string;\n  method: HttpMethods;\n  body?: any;\n  headers: HttpHeaders;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n  /**\n   * A function that returns the proper OperationResponse for the given OperationSpec and\n   * HttpOperationResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: HttpOperationResponse\n  ) => undefined | OperationResponse;\n  formData?: any;\n  query?: { [key: string]: any };\n  operationSpec?: OperationSpec;\n  withCredentials: boolean;\n  timeout: number;\n  proxySettings?: ProxySettings;\n  keepAlive?: boolean;\n\n  abortSignal?: AbortSignalLike;\n\n  /** Callback which fires upon upload progress. */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  constructor(\n    url?: string,\n    method?: HttpMethods,\n    body?: any,\n    query?: { [key: string]: any },\n    headers?: { [key: string]: any } | HttpHeaders,\n    streamResponseBody?: boolean,\n    withCredentials?: boolean,\n    abortSignal?: AbortSignalLike,\n    timeout?: number,\n    onUploadProgress?: (progress: TransferProgressEvent) => void,\n    onDownloadProgress?: (progress: TransferProgressEvent) => void,\n    proxySettings?: ProxySettings,\n    keepAlive?: boolean\n  ) {\n    this.streamResponseBody = streamResponseBody;\n    this.url = url || \"\";\n    this.method = method || \"GET\";\n    this.headers = headers instanceof HttpHeaders ? headers : new HttpHeaders(headers);\n    this.body = body;\n    this.query = query;\n    this.formData = undefined;\n    this.withCredentials = withCredentials || false;\n    this.abortSignal = abortSignal;\n    this.timeout = timeout || 0;\n    this.onUploadProgress = onUploadProgress;\n    this.onDownloadProgress = onDownloadProgress;\n    this.proxySettings = proxySettings;\n    this.keepAlive = keepAlive;\n  }\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   */\n  validateRequestProperties(): void {\n    if (!this.method) {\n      throw new Error(\"WebResource.method is required.\");\n    }\n    if (!this.url) {\n      throw new Error(\"WebResource.url is required.\");\n    }\n  }\n\n  /**\n   * Prepares the request.\n   * @param {RequestPrepareOptions} options Options to provide for preparing the request.\n   * @returns {WebResource} Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n   */\n  prepare(options: RequestPrepareOptions): WebResource {\n    if (!options) {\n      throw new Error(\"options object is required\");\n    }\n\n    if (options.method == undefined || typeof options.method.valueOf() !== \"string\") {\n      throw new Error(\"options.method must be a string.\");\n    }\n\n    if (options.url && options.pathTemplate) {\n      throw new Error(\n        \"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\"\n      );\n    }\n\n    if (\n      (options.pathTemplate == undefined || typeof options.pathTemplate.valueOf() !== \"string\") &&\n      (options.url == undefined || typeof options.url.valueOf() !== \"string\")\n    ) {\n      throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n    }\n\n    // set the url if it is provided.\n    if (options.url) {\n      if (typeof options.url !== \"string\") {\n        throw new Error('options.url must be of type \"string\".');\n      }\n      this.url = options.url;\n    }\n\n    // set the method\n    if (options.method) {\n      const validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n      if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n        throw new Error(\n          'The provided method \"' +\n            options.method +\n            '\" is invalid. Supported HTTP methods are: ' +\n            JSON.stringify(validMethods)\n        );\n      }\n    }\n    this.method = options.method.toUpperCase() as HttpMethods;\n\n    // construct the url if path template is provided\n    if (options.pathTemplate) {\n      const { pathTemplate, pathParameters } = options;\n      if (typeof pathTemplate !== \"string\") {\n        throw new Error('options.pathTemplate must be of type \"string\".');\n      }\n      if (!options.baseUrl) {\n        options.baseUrl = \"https://management.azure.com\";\n      }\n      const baseUrl = options.baseUrl;\n      let url =\n        baseUrl +\n        (baseUrl.endsWith(\"/\") ? \"\" : \"/\") +\n        (pathTemplate.startsWith(\"/\") ? pathTemplate.slice(1) : pathTemplate);\n      const segments = url.match(/({\\w*\\s*\\w*})/gi);\n      if (segments && segments.length) {\n        if (!pathParameters) {\n          throw new Error(\n            `pathTemplate: ${pathTemplate} has been provided. Hence, options.pathParameters must also be provided.`\n          );\n        }\n        segments.forEach(function(item) {\n          const pathParamName = item.slice(1, -1);\n          const pathParam = (pathParameters as { [key: string]: any })[pathParamName];\n          if (\n            pathParam === null ||\n            pathParam === undefined ||\n            !(typeof pathParam === \"string\" || typeof pathParam === \"object\")\n          ) {\n            const stringifiedPathParameters = JSON.stringify(pathParameters, undefined, 2);\n            throw new Error(\n              `pathTemplate: ${pathTemplate} contains the path parameter ${pathParamName}` +\n                ` however, it is not present in parameters: ${stringifiedPathParameters}.` +\n                `The value of the path parameter can either be a \"string\" of the form { ${pathParamName}: \"some sample value\" } or ` +\n                `it can be an \"object\" of the form { \"${pathParamName}\": { value: \"some sample value\", skipUrlEncoding: true } }.`\n            );\n          }\n\n          if (typeof pathParam.valueOf() === \"string\") {\n            url = url.replace(item, encodeURIComponent(pathParam));\n          }\n\n          if (typeof pathParam.valueOf() === \"object\") {\n            if (!pathParam.value) {\n              throw new Error(\n                `options.pathParameters[${pathParamName}] is of type \"object\" but it does not contain a \"value\" property.`\n              );\n            }\n            if (pathParam.skipUrlEncoding) {\n              url = url.replace(item, pathParam.value);\n            } else {\n              url = url.replace(item, encodeURIComponent(pathParam.value));\n            }\n          }\n        });\n      }\n      this.url = url;\n    }\n\n    // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n    if (options.queryParameters) {\n      const queryParameters = options.queryParameters;\n      if (typeof queryParameters !== \"object\") {\n        throw new Error(\n          `options.queryParameters must be of type object. It should be a JSON object ` +\n            `of \"query-parameter-name\" as the key and the \"query-parameter-value\" as the value. ` +\n            `The \"query-parameter-value\" may be fo type \"string\" or an \"object\" of the form { value: \"query-parameter-value\", skipUrlEncoding: true }.`\n        );\n      }\n      // append question mark if it is not present in the url\n      if (this.url && this.url.indexOf(\"?\") === -1) {\n        this.url += \"?\";\n      }\n      // construct queryString\n      const queryParams = [];\n      // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n      this.query = {};\n      for (const queryParamName in queryParameters) {\n        const queryParam: any = queryParameters[queryParamName];\n        if (queryParam) {\n          if (typeof queryParam === \"string\") {\n            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n            this.query[queryParamName] = encodeURIComponent(queryParam);\n          } else if (typeof queryParam === \"object\") {\n            if (!queryParam.value) {\n              throw new Error(\n                `options.queryParameters[${queryParamName}] is of type \"object\" but it does not contain a \"value\" property.`\n              );\n            }\n            if (queryParam.skipUrlEncoding) {\n              queryParams.push(queryParamName + \"=\" + queryParam.value);\n              this.query[queryParamName] = queryParam.value;\n            } else {\n              queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n              this.query[queryParamName] = encodeURIComponent(queryParam.value);\n            }\n          }\n        }\n      } // end-of-for\n      // append the queryString\n      this.url += queryParams.join(\"&\");\n    }\n\n    // add headers to the request if they are provided\n    if (options.headers) {\n      const headers = options.headers;\n      for (const headerName of Object.keys(options.headers)) {\n        this.headers.set(headerName, headers[headerName]);\n      }\n    }\n    // ensure accept-language is set correctly\n    if (!this.headers.get(\"accept-language\")) {\n      this.headers.set(\"accept-language\", \"en-US\");\n    }\n    // ensure the request-id is set correctly\n    if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n      this.headers.set(\"x-ms-client-request-id\", generateUuid());\n    }\n\n    // default\n    if (!this.headers.get(\"Content-Type\")) {\n      this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n    }\n\n    // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicilty\n    this.body = options.body;\n    if (options.body != undefined) {\n      // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n      if (options.bodyIsStream) {\n        if (!this.headers.get(\"Transfer-Encoding\")) {\n          this.headers.set(\"Transfer-Encoding\", \"chunked\");\n        }\n        if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n          this.headers.set(\"Content-Type\", \"application/octet-stream\");\n        }\n      } else {\n        if (options.serializationMapper) {\n          this.body = new Serializer(options.mappers).serialize(\n            options.serializationMapper,\n            options.body,\n            \"requestBody\"\n          );\n        }\n        if (!options.disableJsonStringifyOnBody) {\n          this.body = JSON.stringify(options.body);\n        }\n      }\n    }\n\n    if (options.spanOptions) {\n      this.spanOptions = options.spanOptions;\n    }\n\n    this.abortSignal = options.abortSignal;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.onUploadProgress = options.onUploadProgress;\n\n    return this;\n  }\n\n  /**\n   * Clone this WebResource HTTP request object.\n   * @returns {WebResource} The clone of this WebResource HTTP request object.\n   */\n  clone(): WebResource {\n    const result = new WebResource(\n      this.url,\n      this.method,\n      this.body,\n      this.query,\n      this.headers && this.headers.clone(),\n      this.streamResponseBody,\n      this.withCredentials,\n      this.abortSignal,\n      this.timeout,\n      this.onUploadProgress,\n      this.onDownloadProgress,\n      this.proxySettings,\n      this.keepAlive\n    );\n\n    if (this.formData) {\n      result.formData = this.formData;\n    }\n\n    if (this.operationSpec) {\n      result.operationSpec = this.operationSpec;\n    }\n\n    if (this.shouldDeserialize) {\n      result.shouldDeserialize = this.shouldDeserialize;\n    }\n\n    if (this.operationResponseGetter) {\n      result.operationResponseGetter = this.operationResponseGetter;\n    }\n\n    return result;\n  }\n}\n\nexport interface RequestPrepareOptions {\n  /**\n   * The HTTP request method. Valid values are \"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\",\n   * or \"PATCH\".\n   */\n  method: HttpMethods;\n  /**\n   * The request url. It may or may not have query parameters in it. Either provide the \"url\" or\n   * provide the \"pathTemplate\" in the options object. Both the options are mutually exclusive.\n   */\n  url?: string;\n  /**\n   * A dictionary of query parameters to be appended to the url, where\n   * the \"key\" is the \"query-parameter-name\" and the \"value\" is the \"query-parameter-value\".\n   * The \"query-parameter-value\" can be of type \"string\" or it can be of type \"object\".\n   * The \"object\" format should be used when you want to skip url encoding. While using the object format,\n   * the object must have a property named value which provides the \"query-parameter-value\".\n   * Example:\n   *    - query-parameter-value in \"object\" format: { \"query-parameter-name\": { value: \"query-parameter-value\", skipUrlEncoding: true } }\n   *    - query-parameter-value in \"string\" format: { \"query-parameter-name\": \"query-parameter-value\"}.\n   * Note: \"If options.url already has some query parameters, then the value provided in options.queryParameters will be appended to the url.\n   */\n  queryParameters?: { [key: string]: any | ParameterValue };\n  /**\n   * The path template of the request url. Either provide the \"url\" or provide the \"pathTemplate\" in\n   * the options object. Both the options are mutually exclusive.\n   * Example: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}\"\n   */\n  pathTemplate?: string;\n  /**\n   * The base url of the request. Default value is: \"https://management.azure.com\". This is\n   * applicable only with pathTemplate. If you are providing options.url then it is expected that\n   * you provide the complete url.\n   */\n  baseUrl?: string;\n  /**\n   * A dictionary of path parameters that need to be replaced with actual values in the pathTemplate.\n   * Here the key is the \"path-parameter-name\" and the value is the \"path-parameter-value\".\n   * The \"path-parameter-value\" can be of type \"string\"  or it can be of type \"object\".\n   * The \"object\" format should be used when you want to skip url encoding. While using the object format,\n   * the object must have a property named value which provides the \"path-parameter-value\".\n   * Example:\n   *    - path-parameter-value in \"object\" format: { \"path-parameter-name\": { value: \"path-parameter-value\", skipUrlEncoding: true } }\n   *    - path-parameter-value in \"string\" format: { \"path-parameter-name\": \"path-parameter-value\" }.\n   */\n  pathParameters?: { [key: string]: any | ParameterValue };\n  formData?: { [key: string]: any };\n  /**\n   * A dictionary of request headers that need to be applied to the request.\n   * Here the key is the \"header-name\" and the value is the \"header-value\". The header-value MUST be of type string.\n   *  - ContentType must be provided with the key name as \"Content-Type\". Default value \"application/json; charset=utf-8\".\n   *  - \"Transfer-Encoding\" is set to \"chunked\" by default if \"options.bodyIsStream\" is set to true.\n   *  - \"Content-Type\" is set to \"application/octet-stream\" by default if \"options.bodyIsStream\" is set to true.\n   *  - \"accept-language\" by default is set to \"en-US\"\n   *  - \"x-ms-client-request-id\" by default is set to a new Guid. To not generate a guid for the request, please set options.disableClientRequestId to true\n   */\n  headers?: { [key: string]: any };\n  /**\n   * When set to true, instructs the client to not set \"x-ms-client-request-id\" header to a new Guid().\n   */\n  disableClientRequestId?: boolean;\n  /**\n   * The request body. It can be of any type. This value will be serialized if it is not a stream.\n   */\n  body?: any;\n  /**\n   * Provides information on how to serialize the request body.\n   */\n  serializationMapper?: Mapper;\n  /**\n   * A dictionary of mappers that may be used while [de]serialization.\n   */\n  mappers?: { [x: string]: any };\n  /**\n   * Provides information on how to deserialize the response body.\n   */\n  deserializationMapper?: object;\n  /**\n   * Indicates whether this method should JSON.stringify() the request body. Default value: false.\n   */\n  disableJsonStringifyOnBody?: boolean;\n  /**\n   * Indicates whether the request body is a stream (useful for file upload scenarios).\n   */\n  bodyIsStream?: boolean;\n  abortSignal?: AbortSignalLike;\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  spanOptions?: SpanOptions;\n}\n\n/**\n * The Parameter value provided for path or query parameters in RequestPrepareOptions\n */\nexport interface ParameterValue {\n  value: any;\n  skipUrlEncoding: boolean;\n  [key: string]: any;\n}\n\n/**\n * Describes the base structure of the options object that will be used in every operation.\n */\nexport interface RequestOptionsBase {\n  /**\n   * @property {object} [customHeaders] User defined custom request headers that\n   * will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  [key: string]: any;\n}\n","/// <reference path=\"./shims-public.d.ts\" />\ntype AbortEventListener = (this: AbortSignalLike, ev?: any) => any;\n\nconst listenersMap = new WeakMap<AbortSignal, AbortEventListener[]>();\nconst abortedMap = new WeakMap<AbortSignal, boolean>();\n\n/**\n * Allows the request to be aborted upon firing of the \"abort\" event.\n * Compatible with the browser built-in AbortSignal and common polyfills.\n */\nexport interface AbortSignalLike {\n  /**\n   * Indicates if the signal has already been aborted.\n   */\n  readonly aborted: boolean;\n  /**\n   * Add new \"abort\" event listener, only support \"abort\" event.\n   */\n  addEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   */\n  removeEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n}\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * // Abort without timeout\n * await doAsyncWork(AbortSignal.none);\n *\n * @export\n * @class AbortSignal\n * @implements {AbortSignalLike}\n */\nexport class AbortSignal implements AbortSignalLike {\n  constructor() {\n    listenersMap.set(this, []);\n    abortedMap.set(this, false);\n  }\n\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof AbortSignal\n   */\n  public get aborted(): boolean {\n    if (!abortedMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    return abortedMap.get(this)!;\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will never be aborted.\n   *\n   * @readonly\n   * @static\n   * @type {AbortSignal}\n   * @memberof AbortSignal\n   */\n  public static get none(): AbortSignal {\n    return new AbortSignal();\n  }\n\n  /**\n   * onabort event listener.\n   *\n   * @memberof AbortSignal\n   */\n  public onabort: ((ev?: Event) => any) | null = null;\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof AbortSignal\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n    listeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof AbortSignal\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  /**\n    * Dispatches a synthetic event to the AbortSignal.\n    */\n  dispatchEvent(event: Event): boolean {\n    throw new Error(\"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\")\n  }\n}\n\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @returns\n * @internal\n */\nexport function abortSignal(signal: AbortSignal) {\n  if (signal.aborted) {\n    return;\n  }\n\n  if (signal.onabort) {\n    signal.onabort.call(signal);\n  }\n\n  const listeners = listenersMap.get(signal)!;\n  if (listeners) {\n    listeners.forEach((listener) => {\n      listener.call(signal, { type: \"abort\" });\n    });\n  }\n\n  abortedMap.set(signal, true);\n}\n","import { AbortSignal, abortSignal, AbortSignalLike } from \"./AbortSignal\";\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * // Abort an operation when another event fires\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n *\n * @example\n * // Share aborter cross multiple operations in 30s\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *\n * @example\n * // Cascaded aborting\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n *\n * @export\n * @class AbortController\n * @implements {AbortSignalLike}\n */\nexport class AbortController {\n  private _signal: AbortSignal;\n\n  /**\n   * @param {AbortSignalLike[]} [parentSignals] The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   * @constructor\n   */\n  constructor(parentSignals?: AbortSignalLike[]);\n  /**\n   * @param {...AbortSignalLike} parentSignals The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   * @constructor\n   */\n  constructor(...parentSignals: AbortSignalLike[]);\n  constructor(parentSignals?: any) {\n    this._signal = new AbortSignal();\n\n    if (!parentSignals) {\n      return;\n    }\n    // coerce parentSignals into an array\n    if (!Array.isArray(parentSignals)) {\n      parentSignals = arguments;\n    }\n    for (const parentSignal of parentSignals) {\n      // if the parent signal has already had abort() called,\n      // then call abort on this signal as well.\n      if (parentSignal.aborted) {\n        this.abort();\n      } else {\n        // when the parent signal aborts, this signal should as well.\n        parentSignal.addEventListener(\"abort\", () => {\n          this.abort();\n        });\n      }\n    }\n  }\n\n  /**\n   * The AbortSignal associated with this controller that will signal aborted\n   * when the abort method is called on this controller.\n   *\n   * @readonly\n   * @type {AbortSignal}\n   * @memberof AbortController\n   */\n  public get signal() {\n    return this._signal;\n  }\n\n  /**\n   * Signal that any operations passed this controller's associated abort signal\n   * to cancel any remaining work and throw an `AbortError`.\n   *\n   * @memberof AbortController\n   */\n  abort() {\n    abortSignal(this._signal);\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will abort after the provided ms.\n   *\n   * @static\n   * @params {number} ms Elapsed time in milliseconds to trigger an abort.\n   * @returns {AbortSignal}\n   */\n  public static timeout(ms: number): AbortSignal {\n    const signal = new AbortSignal();\n    const timer = setTimeout(abortSignal, ms, signal);\n    // Prevent the active Timer from keeping the Node.js event loop active.\n    if (typeof timer.unref === \"function\") {\n      timer.unref();\n    }\n    return signal;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { WebResource } from \"./webResource\";\n\nexport class RestError extends Error {\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  code?: string;\n  statusCode?: number;\n  request?: WebResource;\n  response?: HttpOperationResponse;\n  details?: unknown;\n  constructor(\n    message: string,\n    code?: string,\n    statusCode?: number,\n    request?: WebResource,\n    response?: HttpOperationResponse\n  ) {\n    super(message);\n    this.code = code;\n    this.statusCode = statusCode;\n    this.request = request;\n    this.response = response;\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport { HttpClient } from \"./httpClient\";\nimport { HttpHeaders } from \"./httpHeaders\";\nimport { WebResource, TransferProgressEvent } from \"./webResource\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { RestError } from \"./restError\";\n\n/**\n * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n */\nexport class XhrHttpClient implements HttpClient {\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    const xhr = new XMLHttpRequest();\n\n    if (request.proxySettings) {\n      throw new Error(\"HTTP proxy is not supported in browser environment\");\n    }\n\n    const abortSignal = request.abortSignal;\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        return Promise.reject(new AbortError(\"The operation was aborted.\"));\n      }\n\n      const listener = () => {\n        xhr.abort();\n      };\n      abortSignal.addEventListener(\"abort\", listener);\n      xhr.addEventListener(\"readystatechange\", () => {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          abortSignal.removeEventListener(\"abort\", listener);\n        }\n      });\n    }\n\n    addProgressListener(xhr.upload, request.onUploadProgress);\n    addProgressListener(xhr, request.onDownloadProgress);\n\n    if (request.formData) {\n      const formData = request.formData;\n      const requestForm = new FormData();\n      const appendFormValue = (key: string, value: any) => {\n        if (value && value.hasOwnProperty(\"value\") && value.hasOwnProperty(\"options\")) {\n          requestForm.append(key, value.value, value.options);\n        } else {\n          requestForm.append(key, value);\n        }\n      };\n      for (const formKey of Object.keys(formData)) {\n        const formValue = formData[formKey];\n        if (Array.isArray(formValue)) {\n          for (let j = 0; j < formValue.length; j++) {\n            appendFormValue(formKey, formValue[j]);\n          }\n        } else {\n          appendFormValue(formKey, formValue);\n        }\n      }\n\n      request.body = requestForm;\n      request.formData = undefined;\n      const contentType = request.headers.get(\"Content-Type\");\n      if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n        // browser will automatically apply a suitable content-type header\n        request.headers.remove(\"Content-Type\");\n      }\n    }\n\n    xhr.open(request.method, request.url);\n    xhr.timeout = request.timeout;\n    xhr.withCredentials = request.withCredentials;\n    for (const header of request.headers.headersArray()) {\n      xhr.setRequestHeader(header.name, header.value);\n    }\n    xhr.responseType = request.streamResponseBody ? \"blob\" : \"text\";\n\n    // tslint:disable-next-line:no-null-keyword\n    xhr.send(request.body === undefined ? null : request.body);\n\n    if (request.streamResponseBody) {\n      return new Promise((resolve, reject) => {\n        xhr.addEventListener(\"readystatechange\", () => {\n          // Resolve as soon as headers are loaded\n          if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n            const blobBody = new Promise<Blob>((resolve, reject) => {\n              xhr.addEventListener(\"load\", () => {\n                resolve(xhr.response);\n              });\n              rejectOnTerminalEvent(request, xhr, reject);\n            });\n            resolve({\n              request,\n              status: xhr.status,\n              headers: parseHeaders(xhr),\n              blobBody\n            });\n          }\n        });\n        rejectOnTerminalEvent(request, xhr, reject);\n      });\n    } else {\n      return new Promise(function(resolve, reject) {\n        xhr.addEventListener(\"load\", () =>\n          resolve({\n            request,\n            status: xhr.status,\n            headers: parseHeaders(xhr),\n            bodyAsText: xhr.responseText\n          })\n        );\n        rejectOnTerminalEvent(request, xhr, reject);\n      });\n    }\n  }\n}\n\nfunction addProgressListener(\n  xhr: XMLHttpRequestEventTarget,\n  listener?: (progress: TransferProgressEvent) => void\n) {\n  if (listener) {\n    xhr.addEventListener(\"progress\", (rawEvent) =>\n      listener({\n        loadedBytes: rawEvent.loaded\n      })\n    );\n  }\n}\n\n// exported locally for testing\nexport function parseHeaders(xhr: XMLHttpRequest) {\n  const responseHeaders = new HttpHeaders();\n  const headerLines = xhr\n    .getAllResponseHeaders()\n    .trim()\n    .split(/[\\r\\n]+/);\n  for (const line of headerLines) {\n    const index = line.indexOf(\":\");\n    const headerName = line.slice(0, index);\n    const headerValue = line.slice(index + 2);\n    responseHeaders.set(headerName, headerValue);\n  }\n  return responseHeaders;\n}\n\nfunction rejectOnTerminalEvent(\n  request: WebResource,\n  xhr: XMLHttpRequest,\n  reject: (err: any) => void\n) {\n  xhr.addEventListener(\"error\", () =>\n    reject(\n      new RestError(\n        `Failed to send request to ${request.url}`,\n        RestError.REQUEST_SEND_ERROR,\n        undefined,\n        request\n      )\n    )\n  );\n  xhr.addEventListener(\"abort\", () => reject(new AbortError(\"The operation was aborted.\")));\n  xhr.addEventListener(\"timeout\", () =>\n    reject(\n      new RestError(\n        `timeout of ${xhr.timeout}ms exceeded`,\n        RestError.REQUEST_SEND_ERROR,\n        undefined,\n        request\n      )\n    )\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The different levels of logs that can be used with the HttpPipelineLogger.\n */\nexport enum HttpPipelineLogLevel {\n  /**\n   * A log level that indicates that no logs will be logged.\n   */\n  OFF,\n\n  /**\n   * An error log.\n   */\n  ERROR,\n\n  /**\n   * A warning log.\n   */\n  WARNING,\n\n  /**\n   * An information log.\n   */\n  INFO\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanOptions } from \"@azure/core-tracing\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * @param scopes The list of scopes for which the token will have access.\n   * @param options The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * An AbortSignalLike implementation that can be used to cancel\n   * the token request.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Timeout for pinging services\n   */\n  timeout?: number;\n  /**\n   * Options to create a span using the tracer if any was set.\n   */\n  spanOptions?: SpanOptions;\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp.\n   */\n  expiresOnTimestamp: number;\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: any): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  return (\n    credential &&\n    typeof credential.getToken === \"function\" &&\n    (credential.signRequest === undefined || credential.getToken.length > 0)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { replaceAll } from \"./util/utils\";\n\ntype URLQueryParseState = \"ParameterName\" | \"ParameterValue\" | \"Invalid\";\n\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nexport class URLQuery {\n  private readonly _rawQuery: { [queryParameterName: string]: string | string[] } = {};\n\n  /**\n   * Get whether or not there any query parameters in this URLQuery.\n   */\n  public any(): boolean {\n    return Object.keys(this._rawQuery).length > 0;\n  }\n\n  /**\n   * Get the keys of the query string.\n   */\n  public keys(): string[] {\n    return Object.keys(this._rawQuery);\n  }\n\n  /**\n   * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n   * empty, then this will attempt to remove an existing query parameter with the provided\n   * parameterName.\n   */\n  public set(parameterName: string, parameterValue: any): void {\n    if (parameterName) {\n      if (parameterValue != undefined) {\n        const newValue = Array.isArray(parameterValue) ? parameterValue : parameterValue.toString();\n        this._rawQuery[parameterName] = newValue;\n      } else {\n        delete this._rawQuery[parameterName];\n      }\n    }\n  }\n\n  /**\n   * Get the value of the query parameter with the provided name. If no parameter exists with the\n   * provided parameter name, then undefined will be returned.\n   */\n  public get(parameterName: string): string | string[] | undefined {\n    return parameterName ? this._rawQuery[parameterName] : undefined;\n  }\n\n  /**\n   * Get the string representation of this query. The return value will not start with a \"?\".\n   */\n  public toString(): string {\n    let result = \"\";\n    for (const parameterName in this._rawQuery) {\n      if (result) {\n        result += \"&\";\n      }\n      const parameterValue = this._rawQuery[parameterName];\n      if (Array.isArray(parameterValue)) {\n        const parameterStrings = [];\n        for (const parameterValueElement of parameterValue) {\n          parameterStrings.push(`${parameterName}=${parameterValueElement}`);\n        }\n        result += parameterStrings.join(\"&\");\n      } else {\n        result += `${parameterName}=${parameterValue}`;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Parse a URLQuery from the provided text.\n   */\n  public static parse(text: string): URLQuery {\n    const result = new URLQuery();\n\n    if (text) {\n      if (text.startsWith(\"?\")) {\n        text = text.substring(1);\n      }\n\n      let currentState: URLQueryParseState = \"ParameterName\";\n\n      let parameterName = \"\";\n      let parameterValue = \"\";\n      for (let i = 0; i < text.length; ++i) {\n        const currentCharacter: string = text[i];\n        switch (currentState) {\n          case \"ParameterName\":\n            switch (currentCharacter) {\n              case \"=\":\n                currentState = \"ParameterValue\";\n                break;\n\n              case \"&\":\n                parameterName = \"\";\n                parameterValue = \"\";\n                break;\n\n              default:\n                parameterName += currentCharacter;\n                break;\n            }\n            break;\n\n          case \"ParameterValue\":\n            switch (currentCharacter) {\n              case \"=\":\n                parameterName = \"\";\n                parameterValue = \"\";\n                currentState = \"Invalid\";\n                break;\n\n              case \"&\":\n                result.set(parameterName, parameterValue);\n                parameterName = \"\";\n                parameterValue = \"\";\n                currentState = \"ParameterName\";\n                break;\n\n              default:\n                parameterValue += currentCharacter;\n                break;\n            }\n            break;\n\n          case \"Invalid\":\n            if (currentCharacter === \"&\") {\n              currentState = \"ParameterName\";\n            }\n            break;\n\n          default:\n            throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n        }\n      }\n      if (currentState === \"ParameterValue\") {\n        result.set(parameterName, parameterValue);\n      }\n    }\n\n    return result;\n  }\n}\n\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nexport class URLBuilder {\n  private _scheme: string | undefined;\n  private _host: string | undefined;\n  private _port: string | undefined;\n  private _path: string | undefined;\n  private _query: URLQuery | undefined;\n\n  /**\n   * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n   * (such as a host, port, path, or query), those parts will be added to this URL as well.\n   */\n  public setScheme(scheme: string | undefined): void {\n    if (!scheme) {\n      this._scheme = undefined;\n    } else {\n      this.set(scheme, \"SCHEME\");\n    }\n  }\n\n  /**\n   * Get the scheme that has been set in this URL.\n   */\n  public getScheme(): string | undefined {\n    return this._scheme;\n  }\n\n  /**\n   * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n   * port, path, or query), those parts will be added to this URL as well.\n   */\n  public setHost(host: string | undefined): void {\n    if (!host) {\n      this._host = undefined;\n    } else {\n      this.set(host, \"SCHEME_OR_HOST\");\n    }\n  }\n\n  /**\n   * Get the host that has been set in this URL.\n   */\n  public getHost(): string | undefined {\n    return this._host;\n  }\n\n  /**\n   * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n   * path or query), those parts will be added to this URL as well.\n   */\n  public setPort(port: number | string | undefined): void {\n    if (port == undefined || port === \"\") {\n      this._port = undefined;\n    } else {\n      this.set(port.toString(), \"PORT\");\n    }\n  }\n\n  /**\n   * Get the port that has been set in this URL.\n   */\n  public getPort(): string | undefined {\n    return this._port;\n  }\n\n  /**\n   * Set the path for this URL. If the provided path contains a query, then it will be added to\n   * this URL as well.\n   */\n  public setPath(path: string | undefined): void {\n    if (!path) {\n      this._path = undefined;\n    } else {\n      if (path.indexOf(\"://\") !== -1) {\n        this.set(path, \"SCHEME\");\n      } else {\n        this.set(path, \"PATH\");\n      }\n    }\n  }\n\n  /**\n   * Append the provided path to this URL's existing path. If the provided path contains a query,\n   * then it will be added to this URL as well.\n   */\n  public appendPath(path: string | undefined): void {\n    if (path) {\n      let currentPath: string | undefined = this.getPath();\n      if (currentPath) {\n        if (!currentPath.endsWith(\"/\")) {\n          currentPath += \"/\";\n        }\n\n        if (path.startsWith(\"/\")) {\n          path = path.substring(1);\n        }\n\n        path = currentPath + path;\n      }\n      this.set(path, \"PATH\");\n    }\n  }\n\n  /**\n   * Get the path that has been set in this URL.\n   */\n  public getPath(): string | undefined {\n    return this._path;\n  }\n\n  /**\n   * Set the query in this URL.\n   */\n  public setQuery(query: string | undefined): void {\n    if (!query) {\n      this._query = undefined;\n    } else {\n      this._query = URLQuery.parse(query);\n    }\n  }\n\n  /**\n   * Set a query parameter with the provided name and value in this URL's query. If the provided\n   * query parameter value is undefined or empty, then the query parameter will be removed if it\n   * existed.\n   */\n  public setQueryParameter(queryParameterName: string, queryParameterValue: any): void {\n    if (queryParameterName) {\n      if (!this._query) {\n        this._query = new URLQuery();\n      }\n      this._query.set(queryParameterName, queryParameterValue);\n    }\n  }\n\n  /**\n   * Get the value of the query parameter with the provided query parameter name. If no query\n   * parameter exists with the provided name, then undefined will be returned.\n   */\n  public getQueryParameterValue(queryParameterName: string): string | string[] | undefined {\n    return this._query ? this._query.get(queryParameterName) : undefined;\n  }\n\n  /**\n   * Get the query in this URL.\n   */\n  public getQuery(): string | undefined {\n    return this._query ? this._query.toString() : undefined;\n  }\n\n  /**\n   * Set the parts of this URL by parsing the provided text using the provided startState.\n   */\n  private set(text: string, startState: URLTokenizerState): void {\n    const tokenizer = new URLTokenizer(text, startState);\n\n    while (tokenizer.next()) {\n      const token: URLToken | undefined = tokenizer.current();\n      if (token) {\n        switch (token.type) {\n          case \"SCHEME\":\n            this._scheme = token.text || undefined;\n            break;\n\n          case \"HOST\":\n            this._host = token.text || undefined;\n            break;\n\n          case \"PORT\":\n            this._port = token.text || undefined;\n            break;\n\n          case \"PATH\":\n            const tokenPath: string | undefined = token.text || undefined;\n            if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n              this._path = tokenPath;\n            }\n            break;\n\n          case \"QUERY\":\n            this._query = URLQuery.parse(token.text);\n            break;\n\n          default:\n            throw new Error(`Unrecognized URLTokenType: ${token.type}`);\n        }\n      }\n    }\n  }\n\n  public toString(): string {\n    let result = \"\";\n\n    if (this._scheme) {\n      result += `${this._scheme}://`;\n    }\n\n    if (this._host) {\n      result += this._host;\n    }\n\n    if (this._port) {\n      result += `:${this._port}`;\n    }\n\n    if (this._path) {\n      if (!this._path.startsWith(\"/\")) {\n        result += \"/\";\n      }\n      result += this._path;\n    }\n\n    if (this._query && this._query.any()) {\n      result += `?${this._query.toString()}`;\n    }\n\n    return result;\n  }\n\n  /**\n   * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n   * replaceValue.\n   */\n  public replaceAll(searchValue: string, replaceValue: string): void {\n    if (searchValue) {\n      this.setScheme(replaceAll(this.getScheme(), searchValue, replaceValue));\n      this.setHost(replaceAll(this.getHost(), searchValue, replaceValue));\n      this.setPort(replaceAll(this.getPort(), searchValue, replaceValue));\n      this.setPath(replaceAll(this.getPath(), searchValue, replaceValue));\n      this.setQuery(replaceAll(this.getQuery(), searchValue, replaceValue));\n    }\n  }\n\n  public static parse(text: string): URLBuilder {\n    const result = new URLBuilder();\n    result.set(text, \"SCHEME_OR_HOST\");\n    return result;\n  }\n}\n\ntype URLTokenizerState = \"SCHEME\" | \"SCHEME_OR_HOST\" | \"HOST\" | \"PORT\" | \"PATH\" | \"QUERY\" | \"DONE\";\n\ntype URLTokenType = \"SCHEME\" | \"HOST\" | \"PORT\" | \"PATH\" | \"QUERY\";\n\nexport class URLToken {\n  public constructor(public readonly text: string, public readonly type: URLTokenType) {}\n\n  public static scheme(text: string): URLToken {\n    return new URLToken(text, \"SCHEME\");\n  }\n\n  public static host(text: string): URLToken {\n    return new URLToken(text, \"HOST\");\n  }\n\n  public static port(text: string): URLToken {\n    return new URLToken(text, \"PORT\");\n  }\n\n  public static path(text: string): URLToken {\n    return new URLToken(text, \"PATH\");\n  }\n\n  public static query(text: string): URLToken {\n    return new URLToken(text, \"QUERY\");\n  }\n}\n\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nexport function isAlphaNumericCharacter(character: string): boolean {\n  const characterCode: number = character.charCodeAt(0);\n  return (\n    (48 /* '0' */ <= characterCode && characterCode <= 57) /* '9' */ ||\n    (65 /* 'A' */ <= characterCode && characterCode <= 90) /* 'Z' */ ||\n    (97 /* 'a' */ <= characterCode && characterCode <= 122) /* 'z' */\n  );\n}\n\n/**\n * A class that tokenizes URL strings.\n */\nexport class URLTokenizer {\n  readonly _textLength: number;\n  _currentState: URLTokenizerState;\n  _currentIndex: number;\n  _currentToken: URLToken | undefined;\n\n  public constructor(readonly _text: string, state?: URLTokenizerState) {\n    this._textLength = _text ? _text.length : 0;\n    this._currentState = state != undefined ? state : \"SCHEME_OR_HOST\";\n    this._currentIndex = 0;\n  }\n\n  /**\n   * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n   * hasn't started or has finished tokenizing.\n   */\n  public current(): URLToken | undefined {\n    return this._currentToken;\n  }\n\n  /**\n   * Advance to the next URLToken and return whether or not a URLToken was found.\n   */\n  public next(): boolean {\n    if (!hasCurrentCharacter(this)) {\n      this._currentToken = undefined;\n    } else {\n      switch (this._currentState) {\n        case \"SCHEME\":\n          nextScheme(this);\n          break;\n\n        case \"SCHEME_OR_HOST\":\n          nextSchemeOrHost(this);\n          break;\n\n        case \"HOST\":\n          nextHost(this);\n          break;\n\n        case \"PORT\":\n          nextPort(this);\n          break;\n\n        case \"PATH\":\n          nextPath(this);\n          break;\n\n        case \"QUERY\":\n          nextQuery(this);\n          break;\n\n        default:\n          throw new Error(`Unrecognized URLTokenizerState: ${this._currentState}`);\n      }\n    }\n    return !!this._currentToken;\n  }\n}\n\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer: URLTokenizer): string {\n  let result = \"\";\n  if (tokenizer._currentIndex < tokenizer._textLength) {\n    result = tokenizer._text.substring(tokenizer._currentIndex);\n    tokenizer._currentIndex = tokenizer._textLength;\n  }\n  return result;\n}\n\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer: URLTokenizer): boolean {\n  return tokenizer._currentIndex < tokenizer._textLength;\n}\n\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer: URLTokenizer): string {\n  return tokenizer._text[tokenizer._currentIndex];\n}\n\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer: URLTokenizer, step?: number): void {\n  if (hasCurrentCharacter(tokenizer)) {\n    if (!step) {\n      step = 1;\n    }\n    tokenizer._currentIndex += step;\n  }\n}\n\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer: URLTokenizer, charactersToPeek: number): string {\n  let endIndex: number = tokenizer._currentIndex + charactersToPeek;\n  if (tokenizer._textLength < endIndex) {\n    endIndex = tokenizer._textLength;\n  }\n  return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer: URLTokenizer, condition: (character: string) => boolean): string {\n  let result = \"\";\n\n  while (hasCurrentCharacter(tokenizer)) {\n    const currentCharacter: string = getCurrentCharacter(tokenizer);\n    if (!condition(currentCharacter)) {\n      break;\n    } else {\n      result += currentCharacter;\n      nextCharacter(tokenizer);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer: URLTokenizer): string {\n  return readWhile(tokenizer, (character: string) => isAlphaNumericCharacter(character));\n}\n\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer: URLTokenizer, ...terminatingCharacters: string[]): string {\n  return readWhile(\n    tokenizer,\n    (character: string) => terminatingCharacters.indexOf(character) === -1\n  );\n}\n\nfunction nextScheme(tokenizer: URLTokenizer): void {\n  const scheme: string = readWhileLetterOrDigit(tokenizer);\n  tokenizer._currentToken = URLToken.scheme(scheme);\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else {\n    tokenizer._currentState = \"HOST\";\n  }\n}\n\nfunction nextSchemeOrHost(tokenizer: URLTokenizer): void {\n  const schemeOrHost: string = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentToken = URLToken.host(schemeOrHost);\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \":\") {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n      tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n      tokenizer._currentState = \"HOST\";\n    } else {\n      tokenizer._currentToken = URLToken.host(schemeOrHost);\n      tokenizer._currentState = \"PORT\";\n    }\n  } else {\n    tokenizer._currentToken = URLToken.host(schemeOrHost);\n    if (getCurrentCharacter(tokenizer) === \"/\") {\n      tokenizer._currentState = \"PATH\";\n    } else {\n      tokenizer._currentState = \"QUERY\";\n    }\n  }\n}\n\nfunction nextHost(tokenizer: URLTokenizer): void {\n  if (peekCharacters(tokenizer, 3) === \"://\") {\n    nextCharacter(tokenizer, 3);\n  }\n\n  const host: string = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n  tokenizer._currentToken = URLToken.host(host);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \":\") {\n    tokenizer._currentState = \"PORT\";\n  } else if (getCurrentCharacter(tokenizer) === \"/\") {\n    tokenizer._currentState = \"PATH\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextPort(tokenizer: URLTokenizer): void {\n  if (getCurrentCharacter(tokenizer) === \":\") {\n    nextCharacter(tokenizer);\n  }\n\n  const port: string = readUntilCharacter(tokenizer, \"/\", \"?\");\n  tokenizer._currentToken = URLToken.port(port);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \"/\") {\n    tokenizer._currentState = \"PATH\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextPath(tokenizer: URLTokenizer): void {\n  const path: string = readUntilCharacter(tokenizer, \"?\");\n  tokenizer._currentToken = URLToken.path(path);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextQuery(tokenizer: URLTokenizer): void {\n  if (getCurrentCharacter(tokenizer) === \"?\") {\n    nextCharacter(tokenizer);\n  }\n\n  const query: string = readRemaining(tokenizer);\n  tokenizer._currentToken = URLToken.query(query);\n  tokenizer._currentState = \"DONE\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { HttpPipelineLogger } from \"../httpPipelineLogger\";\nimport { HttpPipelineLogLevel } from \"../httpPipelineLogLevel\";\nimport { WebResource } from \"../webResource\";\n\n/**\n * Creates a new RequestPolicy per-request that uses the provided nextPolicy.\n */\nexport type RequestPolicyFactory = {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): RequestPolicy;\n};\n\nexport interface RequestPolicy {\n  sendRequest(httpRequest: WebResource): Promise<HttpOperationResponse>;\n}\n\nexport abstract class BaseRequestPolicy implements RequestPolicy {\n  protected constructor(\n    readonly _nextPolicy: RequestPolicy,\n    readonly _options: RequestPolicyOptions\n  ) {}\n\n  public abstract sendRequest(webResource: WebResource): Promise<HttpOperationResponse>;\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return this._options.shouldLog(logLevel);\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel The log level of this log.\n   * @param message The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    this._options.log(logLevel, message);\n  }\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport class RequestPolicyOptions {\n  constructor(private _logger?: HttpPipelineLogger) {}\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return (\n      !!this._logger &&\n      logLevel !== HttpPipelineLogLevel.OFF &&\n      logLevel <= this._logger.minimumLogLevel\n    );\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel The log level of this log.\n   * @param message The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    if (this._logger && this.shouldLog(logLevel)) {\n      this._logger.log(logLevel, message);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst logFunction = console.debug || console.log;\nexport function log(...args: any[]) {\n  logFunction(...args);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { log } from \"./log\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"azure:*\"\n   * Supports skip syntax, e.g. \"azure:*,-azure:storage:*\" will enable\n   * everything under azure except for things under azure:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabled of enabledNamespaces) {\n    if (enabled.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  function debug(...args: any[]) {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend\n  });\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log\n  }\n);\n\nexport default debugObj;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport debug, { Debugger } from \"./debug\";\nexport { Debugger } from \"./debug\";\n\nconst registeredLoggers = new Set<AzureDebugger>();\nconst logLevelFromEnv =\n  (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\n\nlet azureLogLevel: AzureLogLevel | undefined;\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = debug(\"azure\");\nAzureLogger.log = (...args) => {\n  debug.log(...args);\n};\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype AzureDebugger = Debugger & { level: AzureLogLevel };\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\nif (logLevelFromEnv) {\n  // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n  if (isAzureLogLevel(logLevelFromEnv)) {\n    setLogLevel(logLevelFromEnv);\n  } else {\n    console.error(\n      `AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\n        \", \"\n      )}.`\n    );\n  }\n}\n\n/**\n * Immediately enables logging at the specified log level.\n * @param level The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel) {\n  if (level && !isAzureLogLevel(level)) {\n    throw new Error(\n      `Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`\n    );\n  }\n  azureLogLevel = level;\n\n  const enabledNamespaces = [];\n  for (const logger of registeredLoggers) {\n    if (shouldEnable(logger)) {\n      enabledNamespaces.push(logger.namespace);\n    }\n  }\n\n  debug.enable(enabledNamespaces.join(\",\"));\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel() {\n  return azureLogLevel;\n}\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100\n};\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed trbouleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace The name of the SDK package.\n * @ignore\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  const clientRootLogger: AzureClientLogger = AzureLogger.extend(namespace);\n  patchLogMethod(AzureLogger, clientRootLogger);\n  return {\n    error: createLogger(clientRootLogger, \"error\"),\n    warning: createLogger(clientRootLogger, \"warning\"),\n    info: createLogger(clientRootLogger, \"info\"),\n    verbose: createLogger(clientRootLogger, \"verbose\")\n  };\n}\n\nfunction patchLogMethod(parent: AzureClientLogger, child: AzureClientLogger | AzureDebugger): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction createLogger(parent: AzureClientLogger, level: AzureLogLevel): AzureDebugger {\n  const logger: AzureDebugger = Object.assign(parent.extend(level), {\n    level\n  });\n\n  patchLogMethod(parent, logger);\n\n  if (shouldEnable(logger)) {\n    const enabledNamespaces = debug.disable();\n    debug.enable(enabledNamespaces + \",\" + logger.namespace);\n  }\n\n  registeredLoggers.add(logger);\n\n  return logger;\n}\n\nfunction shouldEnable(logger: AzureDebugger) {\n  if (azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction isAzureLogLevel(logLevel: string): logLevel is AzureLogLevel {\n  return AZURE_LOG_LEVELS.includes(logLevel as any);\n}\n","import { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-http\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResource } from \"../webResource\";\nimport { URLBuilder, URLQuery } from \"../url\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { Debugger } from \"@azure/logger\";\nimport { logger as coreLogger, logger } from \"../log\";\n\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  allowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  allowedQueryParameters?: string[];\n}\n\n/**\n * Options to configure request/response logging.\n */\nexport interface LoggingOptions {\n  /**\n   * The Debugger (logger) instance to use for writing pipeline logs.\n   */\n  logger?: Debugger,\n\n  /**\n   * Options to pass to the logPolicy factory.\n   */\n  logPolicyOptions?: LogPolicyOptions\n}\n\nconst RedactedString = \"REDACTED\";\n\nconst defaultAllowedHeaderNames = [\n  \"x-ms-client-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"traceparent\",\n\n  \"Accept\",\n  \"Cache-Control\",\n  \"Connection\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"ETag\",\n  \"Expires\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"Last-Modified\",\n  \"Pragma\",\n  \"Request-Id\",\n  \"Retry-After\",\n  \"Server\",\n  \"Transfer-Encoding\",\n  \"User-Agent\"\n];\n\nconst defaultAllowedQueryParameters: string[] = [\n  \"api-version\"\n];\n\nexport const DefaultLoggingOptions: LoggingOptions = {\n  logger: undefined,\n  logPolicyOptions: {\n    allowedHeaderNames: [],      // These are empty lists because they are additive to\n    allowedQueryParameters: []   // the real defaultAllowed[HeaderNames|QueryParameters].\n  }\n}\n\nexport function logPolicy(\n  logger: any = coreLogger.info.bind(coreLogger),\n  logOptions: LogPolicyOptions = {}\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new LogPolicy(nextPolicy, options, logger, logOptions);\n    }\n  };\n}\n\nexport class LogPolicy extends BaseRequestPolicy {\n  logger?: any;\n\n  public allowedHeaderNames: Set<string>;\n  public allowedQueryParameters: Set<string>;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    logger: any = console.log,\n    { allowedHeaderNames = [], allowedQueryParameters = [] }: LogPolicyOptions = {}\n  ) {\n    super(nextPolicy, options);\n    this.logger = logger;\n\n    allowedHeaderNames =\n      allowedHeaderNames && allowedHeaderNames instanceof Array\n        ? defaultAllowedHeaderNames.concat(allowedHeaderNames)\n        : defaultAllowedHeaderNames;\n\n    allowedQueryParameters =\n      allowedQueryParameters && allowedQueryParameters instanceof Array\n        ? defaultAllowedQueryParameters.concat(allowedQueryParameters)\n        : defaultAllowedQueryParameters;\n\n    this.allowedHeaderNames = new Set(allowedHeaderNames);\n    this.allowedQueryParameters = new Set(allowedQueryParameters);\n  }\n\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (!logger.info.enabled) return this._nextPolicy.sendRequest(request);\n\n    this.logRequest(request);\n    return this._nextPolicy.sendRequest(request).then((response) => this.logResponse(response));\n  }\n\n  private logRequest(request: WebResource) {\n    this.logger(`Request: ${JSON.stringify(request, this.sanitize.bind(this), 2)}`);\n  }\n\n  private sanitize(key: string, value: unknown) {\n    if (key === \"_headersMap\") {\n      return this.sanitizeHeaders(key, value as {});\n    } else if (key === \"url\") {\n      return this.sanitizeUrl(value as string);\n    } else if (key === \"query\") {\n      return this.sanitizeQuery(value as {});\n    } else if (key === \"body\") {\n      // Don't log the request body\n      return undefined;\n    } else if (key === \"response\") {\n      // Don't log response again\n      return undefined;\n    } else if (key === \"operationSpec\") {\n      // When using sendOperationRequest, the request carries a massive\n      // field with the autorest spec. No need to log it.\n      return undefined;\n    }\n\n    return value;\n  }\n\n  private sanitizeHeaders(_: string, value: { [s: string]: any }) {\n    return this.sanitizeObject(value, this.allowedHeaderNames, (v, k) => v[k].value);\n  }\n\n  private sanitizeQuery(value: { [s: string]: string }) {\n    return this.sanitizeObject(value, this.allowedQueryParameters, (v, k) => v[k]);\n  }\n\n  private sanitizeObject(\n    value: { [s: string]: any },\n    allowedKeys: Set<string>,\n    accessor: (value: any, key: string) => any\n  ) {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized: { [s: string]: string } = {};\n\n    for (const k of Object.keys(value)) {\n      if (allowedKeys.has(k)) {\n        sanitized[k] = accessor(value, k);\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n\n  private sanitizeUrl(value: string): string {\n    if (typeof value !== \"string\" || value === null) {\n      return value;\n    }\n\n    const urlBuilder = URLBuilder.parse(value);\n    const queryString = urlBuilder.getQuery();\n\n    if (!queryString) {\n      return value;\n    }\n\n    const query = URLQuery.parse(queryString);\n    for (const k of query.keys()) {\n      if (!this.allowedQueryParameters.has(k)) {\n        query.set(k, RedactedString);\n      }\n    }\n\n    urlBuilder.setQuery(query.toString());\n    return urlBuilder.toString();\n  }\n\n  private logResponse(response: HttpOperationResponse): HttpOperationResponse {\n    this.logger(`Response status code: ${response.status}`);\n    this.logger(`Headers: ${JSON.stringify(response.headers, this.sanitize.bind(this), 2)}`);\n    return response;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { Mapper } from \"./serializer\";\n\nexport type ParameterPath = string | string[] | { [propertyName: string]: ParameterPath };\n\n/**\n * A common interface that all Operation parameter's extend.\n */\nexport interface OperationParameter {\n  /**\n   * The path to this parameter's value in OperationArguments or the object that contains paths for\n   * each property's value in OperationArguments.\n   */\n  parameterPath: ParameterPath;\n\n  /**\n   * The mapper that defines how to validate and serialize this parameter's value.\n   */\n  mapper: Mapper;\n}\n\n/**\n * A parameter for an operation that will be substituted into the operation's request URL.\n */\nexport interface OperationURLParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the URL parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n}\n\n/**\n * A parameter for an operation that will be added as a query parameter to the operation's HTTP\n * request.\n */\nexport interface OperationQueryParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the query parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n\n  /**\n   * If this query parameter's value is a collection, what type of format should the value be\n   * converted to.\n   */\n  collectionFormat?: QueryCollectionFormat;\n}\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter: OperationParameter): string {\n  return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\n\nexport function getPathStringFromParameterPath(\n  parameterPath: ParameterPath,\n  mapper: Mapper\n): string {\n  let result: string;\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName!;\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  OperationParameter,\n  OperationQueryParameter,\n  OperationURLParameter\n} from \"./operationParameter\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { MapperType, Serializer } from \"./serializer\";\nimport { HttpMethods } from \"./webResource\";\n\n/**\n * A specification that defines an operation.\n */\nexport interface OperationSpec {\n  /**\n   * The serializer to use in this operation.\n   */\n  readonly serializer: Serializer;\n\n  /**\n   * The HTTP method that should be used by requests for this operation.\n   */\n  readonly httpMethod: HttpMethods;\n\n  /**\n   * The URL that was provided in the service's specification. This will still have all of the URL\n   * template variables in it. If this is not provided when the OperationSpec is created, then it\n   * will be populated by a \"baseUri\" property on the ServiceClient.\n   */\n  readonly baseUrl?: string;\n\n  /**\n   * The fixed path for this operation's URL. This will still have all of the URL template variables\n   * in it.\n   */\n  readonly path?: string;\n\n  /**\n   * The content type of the request body. This value will be used as the \"Content-Type\" header if\n   * it is provided.\n   */\n  readonly contentType?: string;\n\n  /**\n   * The parameter that will be used to construct the HTTP request's body.\n   */\n  readonly requestBody?: OperationParameter;\n\n  /**\n   * Whether or not this operation uses XML request and response bodies.\n   */\n  readonly isXML?: boolean;\n\n  /**\n   * The parameters to the operation method that will be substituted into the constructed URL.\n   */\n  readonly urlParameters?: ReadonlyArray<OperationURLParameter>;\n\n  /**\n   * The parameters to the operation method that will be added to the constructed URL's query.\n   */\n  readonly queryParameters?: ReadonlyArray<OperationQueryParameter>;\n\n  /**\n   * The parameters to the operation method that will be converted to headers on the operation's\n   * HTTP request.\n   */\n  readonly headerParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The parameters to the operation method that will be used to create a formdata body for the\n   * operation's HTTP request.\n   */\n  readonly formDataParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The different types of responses that this operation can return based on what status code is\n   * returned.\n   */\n  readonly responses: { [responseCode: string]: OperationResponse };\n}\n\nexport function isStreamOperation(operationSpec: OperationSpec): boolean {\n  let result = false;\n  for (const statusCode in operationSpec.responses) {\n    const operationResponse: OperationResponse = operationSpec.responses[statusCode];\n    if (\n      operationResponse.bodyMapper &&\n      operationResponse.bodyMapper.type.name === MapperType.Stream\n    ) {\n      result = true;\n      break;\n    }\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// tslint:disable-next-line:no-null-keyword\nconst doc = document.implementation.createDocument(null, null, null);\n\nconst parser = new DOMParser();\nexport function parseXML(str: string, opts?: { includeRoot?: boolean }): Promise<any> {\n  try {\n    const dom = parser.parseFromString(str, \"application/xml\");\n    throwIfError(dom);\n\n    let obj;\n    if (opts && opts.includeRoot) {\n      obj = domToObject(dom);\n    } else {\n      obj = domToObject(dom.childNodes[0]);\n    }\n\n    return Promise.resolve(obj);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nlet errorNS = \"\";\ntry {\n  errorNS = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n    .namespaceURI!;\n} catch (ignored) {\n  // Most browsers will return a document containing <parsererror>, but IE will throw.\n}\n\nfunction throwIfError(dom: Document) {\n  if (errorNS) {\n    const parserErrors = dom.getElementsByTagNameNS(errorNS, \"parsererror\");\n    if (parserErrors.length) {\n      throw new Error(parserErrors.item(0)!.innerHTML);\n    }\n  }\n}\n\nfunction isElement(node: Node): node is Element {\n  return !!(node as Element).attributes;\n}\n\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node: Node): Element | undefined {\n  return isElement(node) && node.hasAttributes() ? node : undefined;\n}\n\nfunction domToObject(node: Node): any {\n  let result: any = {};\n\n  const childNodeCount: number = node.childNodes.length;\n\n  const firstChildNode: Node = node.childNodes[0];\n  const onlyChildTextValue: string | undefined =\n    (firstChildNode &&\n      childNodeCount === 1 &&\n      firstChildNode.nodeType === Node.TEXT_NODE &&\n      firstChildNode.nodeValue) ||\n    undefined;\n\n  const elementWithAttributes: Element | undefined = asElementWithAttributes(node);\n  if (elementWithAttributes) {\n    result[\"$\"] = {};\n\n    for (let i = 0; i < elementWithAttributes.attributes.length; i++) {\n      const attr = elementWithAttributes.attributes[i];\n      result[\"$\"][attr.nodeName] = attr.nodeValue;\n    }\n\n    if (onlyChildTextValue) {\n      result[\"_\"] = onlyChildTextValue;\n    }\n  } else if (childNodeCount === 0) {\n    result = \"\";\n  } else if (onlyChildTextValue) {\n    result = onlyChildTextValue;\n  }\n\n  if (!onlyChildTextValue) {\n    for (let i = 0; i < childNodeCount; i++) {\n      const child = node.childNodes[i];\n      // Ignore leading/trailing whitespace nodes\n      if (child.nodeType !== Node.TEXT_NODE) {\n        const childObject: any = domToObject(child);\n        if (!result[child.nodeName]) {\n          result[child.nodeName] = childObject;\n        } else if (Array.isArray(result[child.nodeName])) {\n          result[child.nodeName].push(childObject);\n        } else {\n          result[child.nodeName] = [result[child.nodeName], childObject];\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nconst serializer = new XMLSerializer();\n\nexport function stringifyXML(content: any, opts?: { rootName?: string }): string {\n  const rootName = (opts && opts.rootName) || \"root\";\n  const dom = buildNode(content, rootName)[0];\n  return (\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom)\n  );\n}\n\nfunction buildAttributes(attrs: { [key: string]: { toString(): string } }): Attr[] {\n  const result = [];\n  for (const key of Object.keys(attrs)) {\n    const attr = doc.createAttribute(key);\n    attr.value = attrs[key].toString();\n    result.push(attr);\n  }\n  return result;\n}\n\nfunction buildNode(obj: any, elementName: string): Node[] {\n  if (\n    obj == undefined ||\n    typeof obj === \"string\" ||\n    typeof obj === \"number\" ||\n    typeof obj === \"boolean\"\n  ) {\n    const elem = doc.createElement(elementName);\n    elem.textContent = obj == undefined ? \"\" : obj.toString();\n    return [elem];\n  } else if (Array.isArray(obj)) {\n    const result = [];\n    for (const arrayElem of obj) {\n      for (const child of buildNode(arrayElem, elementName)) {\n        result.push(child);\n      }\n    }\n    return result;\n  } else if (typeof obj === \"object\") {\n    const elem = doc.createElement(elementName);\n    for (const key of Object.keys(obj)) {\n      if (key === \"$\") {\n        for (const attr of buildAttributes(obj[key])) {\n          elem.attributes.setNamedItem(attr);\n        }\n      } else if (key === \"_\") {\n        elem.textContent = obj[key].toString();\n      } else {\n        for (const child of buildNode(obj[key], key)) {\n          elem.appendChild(child);\n        }\n      }\n    }\n    return [elem];\n  } else {\n    throw new Error(`Illegal value passed to buildObject: ${obj}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { OperationResponse } from \"../operationResponse\";\nimport { OperationSpec, isStreamOperation } from \"../operationSpec\";\nimport { RestError } from \"../restError\";\nimport { Mapper, MapperType } from \"../serializer\";\nimport * as utils from \"../util/utils\";\nimport { parseXML } from \"../util/xml\";\nimport { WebResource } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\n/**\n * Options to configure API response deserialization.\n */\nexport interface DeserializationOptions {\n  /**\n   * Configures the expected content types for the deserialization of\n   * JSON and XML response bodies.\n   */\n  expectedContentTypes: DeserializationContentTypes;\n}\n\n/**\n * The content-types that will indicate that an operation response should be deserialized in a\n * particular way.\n */\nexport interface DeserializationContentTypes {\n  /**\n   * The content-types that indicate that an operation response should be deserialized as JSON.\n   * Defaults to [ \"application/json\", \"text/json\" ].\n   */\n  json?: string[];\n\n  /**\n   * The content-types that indicate that an operation response should be deserialized as XML.\n   * Defaults to [ \"application/xml\", \"application/atom+xml\" ].\n   */\n  xml?: string[];\n}\n\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nexport function deserializationPolicy(\n  deserializationContentTypes?: DeserializationContentTypes\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new DeserializationPolicy(nextPolicy, deserializationContentTypes, options);\n    }\n  };\n}\n\nexport const defaultJsonContentTypes = [\"application/json\", \"text/json\", \"text/plain\"];\nexport const defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n\nexport const DefaultDeserializationOptions: DeserializationOptions = {\n  expectedContentTypes: {\n    json: defaultJsonContentTypes,\n    xml: defaultXmlContentTypes\n  }\n};\n\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nexport class DeserializationPolicy extends BaseRequestPolicy {\n  public readonly jsonContentTypes: string[];\n  public readonly xmlContentTypes: string[];\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    deserializationContentTypes: DeserializationContentTypes | undefined,\n    options: RequestPolicyOptions\n  ) {\n    super(nextPolicy, options);\n\n    this.jsonContentTypes =\n      (deserializationContentTypes && deserializationContentTypes.json) || defaultJsonContentTypes;\n    this.xmlContentTypes =\n      (deserializationContentTypes && deserializationContentTypes.xml) || defaultXmlContentTypes;\n  }\n\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request)\n      .then((response: HttpOperationResponse) =>\n        deserializeResponseBody(this.jsonContentTypes, this.xmlContentTypes, response)\n      );\n  }\n}\n\nfunction getOperationResponse(\n  parsedResponse: HttpOperationResponse\n): undefined | OperationResponse {\n  let result: OperationResponse | undefined;\n  const request: WebResource = parsedResponse.request;\n  const operationSpec: OperationSpec | undefined = request.operationSpec;\n  if (operationSpec) {\n    const operationResponseGetter:\n      | undefined\n      | ((\n          operationSpec: OperationSpec,\n          response: HttpOperationResponse\n        ) => undefined | OperationResponse) = request.operationResponseGetter;\n    if (!operationResponseGetter) {\n      result = operationSpec.responses[parsedResponse.status];\n    } else {\n      result = operationResponseGetter(operationSpec, parsedResponse);\n    }\n  }\n  return result;\n}\n\nfunction shouldDeserializeResponse(parsedResponse: HttpOperationResponse): boolean {\n  const shouldDeserialize: undefined | boolean | ((response: HttpOperationResponse) => boolean) =\n    parsedResponse.request.shouldDeserialize;\n  let result: boolean;\n  if (shouldDeserialize === undefined) {\n    result = true;\n  } else if (typeof shouldDeserialize === \"boolean\") {\n    result = shouldDeserialize;\n  } else {\n    result = shouldDeserialize(parsedResponse);\n  }\n  return result;\n}\n\nexport function deserializeResponseBody(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  response: HttpOperationResponse\n): Promise<HttpOperationResponse> {\n  return parse(jsonContentTypes, xmlContentTypes, response).then((parsedResponse) => {\n    const shouldDeserialize: boolean = shouldDeserializeResponse(parsedResponse);\n    if (shouldDeserialize) {\n      const operationSpec: OperationSpec | undefined = parsedResponse.request.operationSpec;\n      if (operationSpec && operationSpec.responses) {\n        const statusCode: number = parsedResponse.status;\n\n        const expectedStatusCodes: string[] = Object.keys(operationSpec.responses);\n\n        const hasNoExpectedStatusCodes: boolean =\n          expectedStatusCodes.length === 0 ||\n          (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\");\n\n        const responseSpec: OperationResponse | undefined = getOperationResponse(parsedResponse);\n\n        const isExpectedStatusCode: boolean = hasNoExpectedStatusCodes\n          ? 200 <= statusCode && statusCode < 300\n          : !!responseSpec;\n        if (!isExpectedStatusCode) {\n          const defaultResponseSpec: OperationResponse = operationSpec.responses.default;\n          if (defaultResponseSpec) {\n            const initialErrorMessage: string = isStreamOperation(operationSpec)\n              ? `Unexpected status code: ${statusCode}`\n              : (parsedResponse.bodyAsText as string);\n\n            const error = new RestError(initialErrorMessage);\n            error.statusCode = statusCode;\n            error.request = utils.stripRequest(parsedResponse.request);\n            error.response = utils.stripResponse(parsedResponse);\n\n            let parsedErrorResponse: { [key: string]: any } = parsedResponse.parsedBody;\n            try {\n              if (parsedErrorResponse) {\n                const defaultResponseBodyMapper: Mapper | undefined =\n                  defaultResponseSpec.bodyMapper;\n                if (\n                  defaultResponseBodyMapper &&\n                  defaultResponseBodyMapper.serializedName === \"CloudError\"\n                ) {\n                  if (parsedErrorResponse.error) {\n                    parsedErrorResponse = parsedErrorResponse.error;\n                  }\n                  if (parsedErrorResponse.code) {\n                    error.code = parsedErrorResponse.code;\n                  }\n                  if (parsedErrorResponse.message) {\n                    error.message = parsedErrorResponse.message;\n                  }\n                } else {\n                  let internalError: any = parsedErrorResponse;\n                  if (parsedErrorResponse.error) {\n                    internalError = parsedErrorResponse.error;\n                  }\n\n                  error.code = internalError.code;\n                  if (internalError.message) {\n                    error.message = internalError.message;\n                  }\n                }\n\n                if (defaultResponseBodyMapper) {\n                  let valueToDeserialize: any = parsedErrorResponse;\n                  if (\n                    operationSpec.isXML &&\n                    defaultResponseBodyMapper.type.name === MapperType.Sequence\n                  ) {\n                    valueToDeserialize =\n                      typeof parsedErrorResponse === \"object\"\n                        ? parsedErrorResponse[defaultResponseBodyMapper.xmlElementName!]\n                        : [];\n                  }\n                  error.response!.parsedBody = operationSpec.serializer.deserialize(\n                    defaultResponseBodyMapper,\n                    valueToDeserialize,\n                    \"error.response.parsedBody\"\n                  );\n                }\n              }\n\n              if (parsedResponse.headers && defaultResponseSpec.headersMapper) {\n                error.response!.parsedHeaders = operationSpec.serializer.deserialize(\n                  defaultResponseSpec.headersMapper,\n                  parsedResponse.headers.rawHeaders(),\n                  \"operationRes.parsedHeaders\"\n                );\n              }\n            } catch (defaultError) {\n              error.message = `Error \\\"${defaultError.message}\\\" occurred in deserializing the responseBody - \\\"${parsedResponse.bodyAsText}\\\" for the default response.`;\n            }\n            return Promise.reject(error);\n          }\n        } else if (responseSpec) {\n          if (responseSpec.bodyMapper) {\n            let valueToDeserialize: any = parsedResponse.parsedBody;\n            if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperType.Sequence) {\n              valueToDeserialize =\n                typeof valueToDeserialize === \"object\"\n                  ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName!]\n                  : [];\n            }\n            try {\n              parsedResponse.parsedBody = operationSpec.serializer.deserialize(\n                responseSpec.bodyMapper,\n                valueToDeserialize,\n                \"operationRes.parsedBody\"\n              );\n            } catch (error) {\n              const restError = new RestError(\n                `Error ${error} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`\n              );\n              restError.request = utils.stripRequest(parsedResponse.request);\n              restError.response = utils.stripResponse(parsedResponse);\n              return Promise.reject(restError);\n            }\n          } else if (operationSpec.httpMethod === \"HEAD\") {\n            // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n            parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n          }\n\n          if (responseSpec.headersMapper) {\n            parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(\n              responseSpec.headersMapper,\n              parsedResponse.headers.rawHeaders(),\n              \"operationRes.parsedHeaders\"\n            );\n          }\n        }\n      }\n    }\n    return Promise.resolve(parsedResponse);\n  });\n}\n\nfunction parse(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  operationResponse: HttpOperationResponse\n): Promise<HttpOperationResponse> {\n  const errorHandler = (err: Error & { code: string }) => {\n    const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n    const errCode = err.code || RestError.PARSE_ERROR;\n    const e = new RestError(\n      msg,\n      errCode,\n      operationResponse.status,\n      operationResponse.request,\n      operationResponse\n    );\n    return Promise.reject(e);\n  };\n\n  if (!operationResponse.request.streamResponseBody && operationResponse.bodyAsText) {\n    const text = operationResponse.bodyAsText;\n    const contentType: string = operationResponse.headers.get(\"Content-Type\") || \"\";\n    const contentComponents: string[] = !contentType\n      ? []\n      : contentType.split(\";\").map((component) => component.toLowerCase());\n    if (\n      contentComponents.length === 0 ||\n      contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)\n    ) {\n      return new Promise<HttpOperationResponse>((resolve) => {\n        operationResponse.parsedBody = JSON.parse(text);\n        resolve(operationResponse);\n      }).catch(errorHandler);\n    } else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n      return parseXML(text)\n        .then((body) => {\n          operationResponse.parsedBody = body;\n          return operationResponse;\n        })\n        .catch(errorHandler);\n    }\n  }\n\n  return Promise.resolve(operationResponse);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResource } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { RestError } from \"../restError\";\nimport { logger } from \"../log\";\n\nexport interface RetryData {\n  retryCount: number;\n  retryInterval: number;\n  error?: RetryError;\n}\n\nexport interface RetryError extends Error {\n  message: string;\n  code?: string;\n  innerError?: RetryError;\n}\n\nexport function exponentialRetryPolicy(\n  retryCount?: number,\n  retryInterval?: number,\n  maxRetryInterval?: number\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new ExponentialRetryPolicy(\n        nextPolicy,\n        options,\n        retryCount,\n        retryInterval,\n        maxRetryInterval\n      );\n    }\n  };\n}\n\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nconst DEFAULT_CLIENT_RETRY_COUNT = 3;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\n\n/**\n * Describes the Retry Mode type. Currently supporting only Exponential.\n * @enum RetryMode\n */\nexport enum RetryMode {\n  Exponential\n}\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface RetryOptions {\n  /**\n   * The maximum number of retry attempts.  Defaults to 3.\n   */\n  maxRetries?: number;\n\n  /**\n   * The amount of delay in milliseconds between retry attempts. Defaults to 30000\n   * (30 seconds). The delay increases exponentially with each retry up to a maximum\n   * specified by maxRetryDelayInMs.\n   */\n  retryDelayInMs?: number;\n\n  /**\n   * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n   * to 90000 (90 seconds).\n   */\n  maxRetryDelayInMs?: number;\n\n  /**\n   * Currently supporting only Exponential mode.\n   */\n  mode?: RetryMode;\n}\n\nexport const DefaultRetryOptions: RetryOptions = {\n  maxRetries: DEFAULT_CLIENT_RETRY_COUNT,\n  retryDelayInMs: DEFAULT_CLIENT_RETRY_INTERVAL,\n  maxRetryDelayInMs: DEFAULT_CLIENT_MAX_RETRY_INTERVAL\n}\n\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nexport class ExponentialRetryPolicy extends BaseRequestPolicy {\n  /**\n   * The client retry count.\n   */\n  retryCount: number;\n  /**\n   * The client retry interval in milliseconds.\n   */\n  retryInterval: number;\n  /**\n   * The maximum retry interval in milliseconds.\n   */\n  maxRetryInterval: number;\n\n  /**\n   * @constructor\n   * @param {RequestPolicy} nextPolicy The next RequestPolicy in the pipeline chain.\n   * @param {RequestPolicyOptions} options The options for this RequestPolicy.\n   * @param {number} [retryCount]        The client retry count.\n   * @param {number} [retryInterval]     The client retry interval, in milliseconds.\n   * @param {number} [minRetryInterval]  The minimum retry interval, in milliseconds.\n   * @param {number} [maxRetryInterval]  The maximum retry interval, in milliseconds.\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryCount?: number,\n    retryInterval?: number,\n    maxRetryInterval?: number\n  ) {\n    super(nextPolicy, options);\n    function isNumber(n: any): n is number {\n      return typeof n === \"number\";\n    }\n    this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n    this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n    this.maxRetryInterval = isNumber(maxRetryInterval)\n      ? maxRetryInterval\n      : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n  }\n\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .then((response) => retry(this, request, response))\n      .catch((error) => retry(this, request, error.response, undefined, error));\n  }\n}\n\n/**\n * Determines if the operation should be retried and how long to wait until the next retry.\n *\n * @param {ExponentialRetryPolicy} policy The ExponentialRetryPolicy that this function is being called against.\n * @param {number} statusCode The HTTP status code.\n * @param {RetryData} retryData  The retry data.\n * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n */\nfunction shouldRetry(\n  policy: ExponentialRetryPolicy,\n  statusCode: number | undefined,\n  retryData: RetryData\n): boolean {\n  if (\n    statusCode == undefined ||\n    (statusCode < 500 && statusCode !== 408) ||\n    statusCode === 501 ||\n    statusCode === 505\n  ) {\n    return false;\n  }\n\n  let currentCount: number;\n  if (!retryData) {\n    throw new Error(\"retryData for the ExponentialRetryPolicyFilter cannot be null.\");\n  } else {\n    currentCount = retryData && retryData.retryCount;\n  }\n\n  return currentCount < policy.retryCount;\n}\n\n/**\n * Updates the retry data for the next attempt.\n *\n * @param {ExponentialRetryPolicy} policy The ExponentialRetryPolicy that this function is being called against.\n * @param {RetryData} retryData  The retry data.\n * @param {RetryError} [err] The operation\"s error, if any.\n */\nfunction updateRetryData(\n  policy: ExponentialRetryPolicy,\n  retryData?: RetryData,\n  err?: RetryError\n): RetryData {\n  if (!retryData) {\n    retryData = {\n      retryCount: 0,\n      retryInterval: 0\n    };\n  }\n\n  if (err) {\n    if (retryData.error) {\n      err.innerError = retryData.error;\n    }\n\n    retryData.error = err;\n  }\n\n  // Adjust retry count\n  retryData.retryCount++;\n\n  // Adjust retry interval\n  let incrementDelta = Math.pow(2, retryData.retryCount) - 1;\n  const boundedRandDelta =\n    policy.retryInterval * 0.8 +\n    Math.floor(Math.random() * (policy.retryInterval * 1.2 - policy.retryInterval * 0.8));\n  incrementDelta *= boundedRandDelta;\n\n  retryData.retryInterval = Math.min(\n    incrementDelta,\n    policy.maxRetryInterval\n  );\n\n  return retryData;\n}\n\nfunction retry(\n  policy: ExponentialRetryPolicy,\n  request: WebResource,\n  response?: HttpOperationResponse,\n  retryData?: RetryData,\n  requestError?: RetryError\n): Promise<HttpOperationResponse> {\n  retryData = updateRetryData(policy, retryData, requestError);\n  const isAborted: boolean | undefined = request.abortSignal && request.abortSignal.aborted;\n  if (!isAborted && shouldRetry(policy, response && response.status, retryData)) {\n    logger.info(`Retrying request in ${retryData.retryInterval}`);\n    return utils\n      .delay(retryData.retryInterval)\n      .then(() => policy._nextPolicy.sendRequest(request.clone()))\n      .then((res) => retry(policy, request, res, retryData, undefined))\n      .catch((err) => retry(policy, request, response, retryData, err));\n  } else if (isAborted || requestError || !response) {\n    // If the operation failed in the end, return all errors instead of just the last one\n    const err =\n      retryData.error ||\n      new RestError(\n        \"Failed to send the request.\",\n        RestError.REQUEST_SEND_ERROR,\n        response && response.status,\n        response && response.request,\n        response\n      );\n    return Promise.reject(err);\n  } else {\n    return Promise.resolve(response);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResource } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function generateClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\"\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    }\n  };\n}\n\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private _requestIdHeaderName: string\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, utils.generateUuid());\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n * and \"plugins\" section in webpack.testconfig.ts.\n */\n\nimport { TelemetryInfo } from \"./userAgentPolicy\";\n\ninterface NavigatorEx extends Navigator {\n  // oscpu is not yet standards-compliant, but can not be undefined in TypeScript 3.6.2\n  readonly oscpu: string;\n}\n\nexport function getDefaultUserAgentKey(): string {\n  return \"x-ms-command-name\";\n}\n\nexport function getPlatformSpecificData(): TelemetryInfo[] {\n  const navigator = window.navigator as NavigatorEx;\n  const osInfo = {\n    key: \"OS\",\n    value: (navigator.oscpu || navigator.platform).replace(\" \", \"\")\n  };\n\n  return [osInfo];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { Constants } from \"../util/constants\";\nimport { WebResource } from \"../webResource\";\nimport { getDefaultUserAgentKey, getPlatformSpecificData } from \"./msRestUserAgentPolicy\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport type TelemetryInfo = { key?: string; value?: string };\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentOptions {\n  /*\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\nfunction getRuntimeInfo(): TelemetryInfo[] {\n  const msRestRuntime = {\n    key: \"core-http\",\n    value: Constants.coreHttpVersion\n  };\n\n  return [msRestRuntime];\n}\n\nfunction getUserAgentString(\n  telemetryInfo: TelemetryInfo[],\n  keySeparator = \" \",\n  valueSeparator = \"/\"\n): string {\n  return telemetryInfo\n    .map((info) => {\n      const value = info.value ? `${valueSeparator}${info.value}` : \"\";\n      return `${info.key}${value}`;\n    })\n    .join(keySeparator);\n}\n\nexport const getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\n\nexport function getDefaultUserAgentValue(): string {\n  const runtimeInfo = getRuntimeInfo();\n  const platformSpecificData = getPlatformSpecificData();\n  const userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n  return userAgent;\n}\n\nexport function userAgentPolicy(userAgentData?: TelemetryInfo): RequestPolicyFactory {\n  const key: string =\n    !userAgentData || userAgentData.key == undefined ? getDefaultUserAgentKey() : userAgentData.key;\n  const value: string =\n    !userAgentData || userAgentData.value == undefined\n      ? getDefaultUserAgentValue()\n      : userAgentData.value;\n\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new UserAgentPolicy(nextPolicy, options, key, value);\n    }\n  };\n}\n\nexport class UserAgentPolicy extends BaseRequestPolicy {\n  constructor(\n    readonly _nextPolicy: RequestPolicy,\n    readonly _options: RequestPolicyOptions,\n    protected headerKey: string,\n    protected headerValue: string\n  ) {\n    super(_nextPolicy, _options);\n  }\n\n  sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    this.addUserAgentHeader(request);\n    return this._nextPolicy.sendRequest(request);\n  }\n\n  addUserAgentHeader(request: WebResource): void {\n    if (!request.headers) {\n      request.headers = new HttpHeaders();\n    }\n\n    if (!request.headers.get(this.headerKey) && this.headerValue) {\n      request.headers.set(this.headerKey, this.headerValue);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { URLBuilder } from \"../url\";\nimport { WebResource } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectOptions {\n  /*\n   * When true, redirect responses are followed.  Defaults to true.\n   */\n  handleRedirects: boolean;\n\n  /*\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\nexport const DefaultRedirectOptions: RedirectOptions = {\n  handleRedirects: true,\n  maxRetries: 20\n}\n\nexport function redirectPolicy(maximumRetries = 20): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new RedirectPolicy(nextPolicy, options, maximumRetries);\n    }\n  };\n}\n\nexport class RedirectPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, readonly maxRetries = 20) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request)\n      .then((response) => handleRedirect(this, response, 0));\n  }\n}\n\nfunction handleRedirect(\n  policy: RedirectPolicy,\n  response: HttpOperationResponse,\n  currentRetries: number\n): Promise<HttpOperationResponse> {\n  const { request, status } = response;\n  const locationHeader = response.headers.get(\"location\");\n  if (\n    locationHeader &&\n    (status === 300 || status === 307 || (status === 303 && request.method === \"POST\")) &&\n    (!policy.maxRetries || currentRetries < policy.maxRetries)\n  ) {\n    const builder = URLBuilder.parse(request.url);\n    builder.setPath(locationHeader);\n    request.url = builder.toString();\n\n    // POST request with Status code 303 should be converted into a\n    // redirected GET request if the redirect url is present in the location header\n    if (status === 303) {\n      request.method = \"GET\";\n    }\n\n    return policy._nextPolicy\n      .sendRequest(request)\n      .then((res) => handleRedirect(policy, res, currentRetries + 1));\n  }\n\n  return Promise.resolve(response);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResource } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function rpRegistrationPolicy(retryTimeout = 30): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n    }\n  };\n}\n\nexport class RPRegistrationPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    readonly _retryTimeout = 30\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .then((response) => registerIfNeeded(this, request, response));\n  }\n}\n\nfunction registerIfNeeded(\n  policy: RPRegistrationPolicy,\n  request: WebResource,\n  response: HttpOperationResponse\n): Promise<HttpOperationResponse> {\n  if (response.status === 409) {\n    const rpName = checkRPNotRegisteredError(response.bodyAsText as string);\n    if (rpName) {\n      const urlPrefix = extractSubscriptionUrl(request.url);\n      return (\n        registerRP(policy, urlPrefix, rpName, request)\n          // Autoregistration of ${provider} failed for some reason. We will not return this error\n          // instead will return the initial response with 409 status code back to the user.\n          // do nothing here as we are returning the original response at the end of this method.\n          .catch(() => false)\n          .then((registrationStatus) => {\n            if (registrationStatus) {\n              // Retry the original request. We have to change the x-ms-client-request-id\n              // otherwise Azure endpoint will return the initial 409 (cached) response.\n              request.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n              return policy._nextPolicy.sendRequest(request.clone());\n            }\n            return response;\n          })\n      );\n    }\n  }\n\n  return Promise.resolve(response);\n}\n\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param {WebResource} originalRequest The original request\n * @param {boolean} reuseUrlToo Should the url from the original request be reused as well. Default false.\n * @returns {object} A new request object with desired headers.\n */\nfunction getRequestEssentials(originalRequest: WebResource, reuseUrlToo = false): WebResource {\n  const reqOptions: WebResource = originalRequest.clone();\n  if (reuseUrlToo) {\n    reqOptions.url = originalRequest.url;\n  }\n\n  // We have to change the x-ms-client-request-id otherwise Azure endpoint\n  // will return the initial 409 (cached) response.\n  reqOptions.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n\n  // Set content-type to application/json\n  reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n\n  return reqOptions;\n}\n\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param {string} body The response body received after making the original request.\n * @returns {string} The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body: string): string {\n  let result, responseBody;\n  if (body) {\n    try {\n      responseBody = JSON.parse(body);\n    } catch (err) {\n      // do nothing;\n    }\n    if (\n      responseBody &&\n      responseBody.error &&\n      responseBody.error.message &&\n      responseBody.error.code &&\n      responseBody.error.code === \"MissingSubscriptionRegistration\"\n    ) {\n      const matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n      if (matchRes) {\n        result = matchRes.pop();\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} url The original request url\n * @returns {string} The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url: string): string {\n  let result;\n  const matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//gi);\n  if (matchRes && matchRes[0]) {\n    result = matchRes[0];\n  } else {\n    throw new Error(`Unable to extract subscriptionId from the given url - ${url}.`);\n  }\n  return result;\n}\n\n/**\n * Registers the given provider.\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} urlPrefix https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} provider The provider name to be registered.\n * @param {WebResource} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @param {registrationCallback} callback The callback that handles the RP registration\n */\nfunction registerRP(\n  policy: RPRegistrationPolicy,\n  urlPrefix: string,\n  provider: string,\n  originalRequest: WebResource\n): Promise<boolean> {\n  const postUrl = `${urlPrefix}providers/${provider}/register?api-version=2016-02-01`;\n  const getUrl = `${urlPrefix}providers/${provider}?api-version=2016-02-01`;\n  const reqOptions = getRequestEssentials(originalRequest);\n  reqOptions.method = \"POST\";\n  reqOptions.url = postUrl;\n\n  return policy._nextPolicy.sendRequest(reqOptions).then((response) => {\n    if (response.status !== 200) {\n      throw new Error(`Autoregistration of ${provider} failed. Please try registering manually.`);\n    }\n    return getRegistrationStatus(policy, getUrl, originalRequest);\n  });\n}\n\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} url The request url for polling\n * @param {WebResource} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns {Promise<boolean>} True if RP Registration is successful.\n */\nfunction getRegistrationStatus(\n  policy: RPRegistrationPolicy,\n  url: string,\n  originalRequest: WebResource\n): Promise<boolean> {\n  const reqOptions: any = getRequestEssentials(originalRequest);\n  reqOptions.url = url;\n  reqOptions.method = \"GET\";\n\n  return policy._nextPolicy.sendRequest(reqOptions).then((res) => {\n    const obj = res.parsedBody as any;\n    if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n      return true;\n    } else {\n      return utils\n        .delay(policy._retryTimeout * 1000)\n        .then(() => getRegistrationStatus(policy, url, originalRequest));\n    }\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AccessToken } from \"@azure/core-auth\";\n\n/**\n * Defines the default token refresh buffer duration.\n */\nexport const TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes\n\n/**\n * Provides a cache for an AccessToken that was that\n * was returned from a TokenCredential.\n */\nexport interface AccessTokenCache {\n  /**\n   * Sets the cached token.\n   *\n   * @param The {@link AccessToken} to be cached or null to\n   *        clear the cached token.\n   */\n  setCachedToken(accessToken: AccessToken | undefined): void;\n\n  /**\n   * Returns the cached {@link AccessToken} or undefined if nothing is cached.\n   */\n  getCachedToken(): AccessToken | undefined;\n}\n\n/**\n * Provides an {@link AccessTokenCache} implementation which clears\n * the cached {@link AccessToken}'s after the expiresOnTimestamp has\n * passed.\n */\nexport class ExpiringAccessTokenCache implements AccessTokenCache {\n  private tokenRefreshBufferMs: number;\n  private cachedToken?: AccessToken = undefined;\n\n  /**\n   * Constructs an instance of {@link ExpiringAccessTokenCache} with\n   * an optional expiration buffer time.\n   */\n  constructor(tokenRefreshBufferMs: number = TokenRefreshBufferMs) {\n    this.tokenRefreshBufferMs = tokenRefreshBufferMs;\n  }\n\n  setCachedToken(accessToken: AccessToken | undefined): void {\n    this.cachedToken = accessToken;\n  }\n\n  getCachedToken(): AccessToken | undefined {\n    if (\n      this.cachedToken &&\n      Date.now() + this.tokenRefreshBufferMs >= this.cachedToken.expiresOnTimestamp\n    ) {\n      this.cachedToken = undefined;\n    }\n\n    return this.cachedToken;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { TokenCredential, GetTokenOptions } from \"@azure/core-auth\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"../policies/requestPolicy\";\nimport { Constants } from \"../util/constants\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { WebResource } from \"../webResource\";\nimport { AccessTokenCache, ExpiringAccessTokenCache } from \"../credentials/accessTokenCache\";\n\n/**\n * Creates a new BearerTokenAuthenticationPolicy factory.\n *\n * @param credential The TokenCredential implementation that can supply the bearer token.\n * @param scopes The scopes for which the bearer token applies.\n */\nexport function bearerTokenAuthenticationPolicy(\n  credential: TokenCredential,\n  scopes: string | string[]\n): RequestPolicyFactory {\n  const tokenCache: AccessTokenCache = new ExpiringAccessTokenCache();\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new BearerTokenAuthenticationPolicy(\n        nextPolicy,\n        options,\n        credential,\n        scopes,\n        tokenCache\n      );\n    }\n  };\n}\n\n/**\n *\n * Provides a RequestPolicy that can request a token from a TokenCredential\n * implementation and then apply it to the Authorization header of a request\n * as a Bearer token.\n *\n */\nexport class BearerTokenAuthenticationPolicy extends BaseRequestPolicy {\n  /**\n   * Creates a new BearerTokenAuthenticationPolicy object.\n   *\n   * @param nextPolicy The next RequestPolicy in the request pipeline.\n   * @param options Options for this RequestPolicy.\n   * @param credential The TokenCredential implementation that can supply the bearer token.\n   * @param scopes The scopes for which the bearer token applies.\n   * @param tokenCache The cache for the most recent AccessToken returned from the TokenCredential.\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private credential: TokenCredential,\n    private scopes: string | string[],\n    private tokenCache: AccessTokenCache\n  ) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Applies the Bearer token to the request through the Authorization header.\n   * @param webResource\n   */\n  public async sendRequest(webResource: WebResource): Promise<HttpOperationResponse> {\n    if (!webResource.headers) webResource.headers = new HttpHeaders();\n    const token = await this.getToken({\n      abortSignal: webResource.abortSignal,\n      spanOptions: webResource.spanOptions\n    });\n    webResource.headers.set(Constants.HeaderConstants.AUTHORIZATION, `Bearer ${token}`);\n    return this._nextPolicy.sendRequest(webResource);\n  }\n\n  private async getToken(options: GetTokenOptions): Promise<string | undefined> {\n    let accessToken = this.tokenCache.getCachedToken();\n    if (accessToken === undefined) {\n      accessToken = (await this.credential.getToken(this.scopes, options)) || undefined;\n      this.tokenCache.setCachedToken(accessToken);\n    }\n\n    return accessToken ? accessToken.token : undefined;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResource } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport interface RetryData {\n  retryCount: number;\n  retryInterval: number;\n  error?: RetryError;\n}\n\nexport interface RetryError extends Error {\n  message: string;\n  code?: string;\n  innerError?: RetryError;\n}\n\nexport function systemErrorRetryPolicy(\n  retryCount?: number,\n  retryInterval?: number,\n  minRetryInterval?: number,\n  maxRetryInterval?: number\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SystemErrorRetryPolicy(\n        nextPolicy,\n        options,\n        retryCount,\n        retryInterval,\n        minRetryInterval,\n        maxRetryInterval\n      );\n    }\n  };\n}\n\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n *\n * @constructor\n * @param {number} retryCount        The client retry count.\n * @param {number} retryInterval     The client retry interval, in milliseconds.\n * @param {number} minRetryInterval  The minimum retry interval, in milliseconds.\n * @param {number} maxRetryInterval  The maximum retry interval, in milliseconds.\n */\nexport class SystemErrorRetryPolicy extends BaseRequestPolicy {\n  retryCount: number;\n  retryInterval: number;\n  minRetryInterval: number;\n  maxRetryInterval: number;\n  DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\n  DEFAULT_CLIENT_RETRY_COUNT = 3;\n  DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\n  DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryCount?: number,\n    retryInterval?: number,\n    minRetryInterval?: number,\n    maxRetryInterval?: number\n  ) {\n    super(nextPolicy, options);\n    this.retryCount = typeof retryCount === \"number\" ? retryCount : this.DEFAULT_CLIENT_RETRY_COUNT;\n    this.retryInterval =\n      typeof retryInterval === \"number\" ? retryInterval : this.DEFAULT_CLIENT_RETRY_INTERVAL;\n    this.minRetryInterval =\n      typeof minRetryInterval === \"number\"\n        ? minRetryInterval\n        : this.DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n    this.maxRetryInterval =\n      typeof maxRetryInterval === \"number\"\n        ? maxRetryInterval\n        : this.DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n  }\n\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .then((response) => retry(this, request, response));\n  }\n}\n\n/**\n * Determines if the operation should be retried and how long to wait until the next retry.\n *\n * @param {number} statusCode The HTTP status code.\n * @param {RetryData} retryData  The retry data.\n * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n */\nfunction shouldRetry(policy: SystemErrorRetryPolicy, retryData: RetryData): boolean {\n  let currentCount;\n  if (!retryData) {\n    throw new Error(\"retryData for the SystemErrorRetryPolicyFilter cannot be null.\");\n  } else {\n    currentCount = retryData && retryData.retryCount;\n  }\n  return currentCount < policy.retryCount;\n}\n\n/**\n * Updates the retry data for the next attempt.\n *\n * @param {RetryData} retryData  The retry data.\n * @param {object} err        The operation\"s error, if any.\n */\nfunction updateRetryData(\n  policy: SystemErrorRetryPolicy,\n  retryData?: RetryData,\n  err?: RetryError\n): RetryData {\n  if (!retryData) {\n    retryData = {\n      retryCount: 0,\n      retryInterval: 0\n    };\n  }\n\n  if (err) {\n    if (retryData.error) {\n      err.innerError = retryData.error;\n    }\n\n    retryData.error = err;\n  }\n\n  // Adjust retry count\n  retryData.retryCount++;\n\n  // Adjust retry interval\n  let incrementDelta = Math.pow(2, retryData.retryCount) - 1;\n  const boundedRandDelta =\n    policy.retryInterval * 0.8 +\n    Math.floor(Math.random() * (policy.retryInterval * 1.2 - policy.retryInterval * 0.8));\n  incrementDelta *= boundedRandDelta;\n\n  retryData.retryInterval = Math.min(\n    policy.minRetryInterval + incrementDelta,\n    policy.maxRetryInterval\n  );\n\n  return retryData;\n}\n\nfunction retry(\n  policy: SystemErrorRetryPolicy,\n  request: WebResource,\n  operationResponse: HttpOperationResponse,\n  retryData?: RetryData,\n  err?: RetryError\n): Promise<HttpOperationResponse> {\n  retryData = updateRetryData(policy, retryData, err);\n  if (\n    err &&\n    err.code &&\n    shouldRetry(policy, retryData) &&\n    (err.code === \"ETIMEDOUT\" ||\n      err.code === \"ESOCKETTIMEDOUT\" ||\n      err.code === \"ECONNREFUSED\" ||\n      err.code === \"ECONNRESET\" ||\n      err.code === \"ENOENT\")\n  ) {\n    // If previous operation ended with an error and the policy allows a retry, do that\n    return utils\n      .delay(retryData.retryInterval)\n      .then(() => policy._nextPolicy.sendRequest(request.clone()))\n      .then((res) => retry(policy, request, res, retryData, err))\n      .catch((err) => retry(policy, request, operationResponse, retryData, err));\n  } else {\n    if (err != undefined) {\n      // If the operation failed in the end, return all errors instead of just the last one\n      err = retryData.error;\n      return Promise.reject(err);\n    }\n    return Promise.resolve(operationResponse);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport enum QueryCollectionFormat {\n  Csv = \",\",\n  Ssv = \" \",\n  Tsv = \"\\t\",\n  Pipes = \"|\",\n  Multi = \"Multi\"\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { ProxySettings } from \"../serviceClient\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResource } from \"../webResource\";\n\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\n\nexport function getDefaultProxySettings(_proxyUrl?: string): ProxySettings | undefined {\n  return undefined;\n}\n\nexport function proxyPolicy(_proxySettings?: ProxySettings): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\n\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n  }\n\n  public sendRequest(_request: WebResource): Promise<HttpOperationResponse> {\n    throw proxyNotSupportedInBrowser;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResource } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { Constants } from \"../util/constants\";\nimport { delay } from \"../util/utils\";\n\ntype ResponseHandler = (\n  httpRequest: WebResource,\n  response: HttpOperationResponse\n) => Promise<HttpOperationResponse>;\nconst StatusCodes = Constants.HttpConstants.StatusCodes;\n\nexport function throttlingRetryPolicy(): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new ThrottlingRetryPolicy(nextPolicy, options);\n    }\n  };\n}\n\n/**\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nexport class ThrottlingRetryPolicy extends BaseRequestPolicy {\n  private _handleResponse: ResponseHandler;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    _handleResponse?: ResponseHandler\n  ) {\n    super(nextPolicy, options);\n    this._handleResponse = _handleResponse || this._defaultResponseHandler;\n  }\n\n  public async sendRequest(httpRequest: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(httpRequest.clone()).then((response) => {\n      if (response.status !== StatusCodes.TooManyRequests) {\n        return response;\n      } else {\n        return this._handleResponse(httpRequest, response);\n      }\n    });\n  }\n\n  private async _defaultResponseHandler(\n    httpRequest: WebResource,\n    httpResponse: HttpOperationResponse\n  ): Promise<HttpOperationResponse> {\n    const retryAfterHeader: string | undefined = httpResponse.headers.get(\n      Constants.HeaderConstants.RETRY_AFTER\n    );\n\n    if (retryAfterHeader) {\n      const delayInMs: number | undefined = ThrottlingRetryPolicy.parseRetryAfterHeader(\n        retryAfterHeader\n      );\n      if (delayInMs) {\n        return delay(delayInMs).then((_: any) => this._nextPolicy.sendRequest(httpRequest));\n      }\n    }\n\n    return httpResponse;\n  }\n\n  public static parseRetryAfterHeader(headerValue: string): number | undefined {\n    const retryAfterInSeconds = Number(headerValue);\n    if (Number.isNaN(retryAfterInSeconds)) {\n      return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n    } else {\n      return retryAfterInSeconds * 1000;\n    }\n  }\n\n  public static parseDateRetryAfterHeader(headerValue: string): number | undefined {\n    try {\n      const now: number = Date.now();\n      const date: number = Date.parse(headerValue);\n      const diff = date - now;\n\n      return Number.isNaN(diff) ? undefined : diff;\n    } catch (error) {\n      return undefined;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { ServiceClientCredentials } from \"../credentials/serviceClientCredentials\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResource } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function signingPolicy(\n  authenticationProvider: ServiceClientCredentials\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    }\n  };\n}\n\nexport class SigningPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    public authenticationProvider: ServiceClientCredentials\n  ) {\n    super(nextPolicy, options);\n  }\n\n  signRequest(request: WebResource): Promise<WebResource> {\n    return this.authenticationProvider.signRequest(request);\n  }\n\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.signRequest(request).then((nextRequest) =>\n      this._nextPolicy.sendRequest(nextRequest)\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { getTracer, getTraceParentHeader } from \"@azure/core-tracing\";\nimport {\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n  BaseRequestPolicy\n} from \"./requestPolicy\";\nimport { WebResource } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\n\nexport function tracingPolicy(): RequestPolicyFactory {\n  return {\n    create(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n      return new TracingPolicy(nextPolicy, options);\n    }\n  };\n}\n\nexport class TracingPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (!request.spanOptions || !request.spanOptions.parent) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    // create a new span\n    const tracer = getTracer();\n    const span = tracer.startSpan(\"core-http\", request.spanOptions);\n\n    try {\n      // set headers\n      const spanContext = span.context();\n      const traceParentHeader = getTraceParentHeader(spanContext);\n      if (traceParentHeader) {\n        request.headers.set(\"traceparent\", traceParentHeader);\n        const traceState = spanContext.traceState && spanContext.traceState.serialize();\n        // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent\n        if (traceState) {\n          request.headers.set(\"tracestate\", traceState);\n        }\n      }\n\n      const response = await this._nextPolicy.sendRequest(request);\n      span.end();\n      return response;\n    } catch (err) {\n      span.end();\n      throw err;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { DefaultHttpClient } from \"./defaultHttpClient\";\nimport { HttpClient } from \"./httpClient\";\nimport { HttpOperationResponse, RestResponse } from \"./httpOperationResponse\";\nimport { HttpPipelineLogger } from \"./httpPipelineLogger\";\nimport { logPolicy, DefaultLoggingOptions } from \"./policies/logPolicy\";\nimport { OperationArguments } from \"./operationArguments\";\nimport {\n  getPathStringFromParameter,\n  getPathStringFromParameterPath,\n  OperationParameter,\n  ParameterPath\n} from \"./operationParameter\";\nimport { isStreamOperation, OperationSpec } from \"./operationSpec\";\nimport {\n  deserializationPolicy,\n  DeserializationContentTypes,\n  DefaultDeserializationOptions\n} from \"./policies/deserializationPolicy\";\nimport { exponentialRetryPolicy, DefaultRetryOptions } from \"./policies/exponentialRetryPolicy\";\nimport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nimport {\n  userAgentPolicy,\n  getDefaultUserAgentHeaderName,\n  getDefaultUserAgentValue,\n} from \"./policies/userAgentPolicy\";\nimport { redirectPolicy, DefaultRedirectOptions } from \"./policies/redirectPolicy\";\nimport {\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./policies/requestPolicy\";\nimport { rpRegistrationPolicy } from \"./policies/rpRegistrationPolicy\";\nimport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nimport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { CompositeMapper, DictionaryMapper, Mapper, MapperType, Serializer } from \"./serializer\";\nimport { URLBuilder } from \"./url\";\nimport * as utils from \"./util/utils\";\nimport { stringifyXML } from \"./util/xml\";\nimport { RequestOptionsBase, RequestPrepareOptions, WebResource } from \"./webResource\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { ServiceCallback, isNode } from \"./util/utils\";\nimport { proxyPolicy, getDefaultProxySettings } from \"./policies/proxyPolicy\";\nimport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nimport { ServiceClientCredentials } from \"./credentials/serviceClientCredentials\";\nimport { signingPolicy } from \"./policies/signingPolicy\";\nimport { logger } from \"./log\";\nimport { InternalPipelineOptions } from './pipelineOptions';\nimport { DefaultKeepAliveOptions, keepAlivePolicy } from './policies/keepAlivePolicy';\nimport { tracingPolicy } from './policies/tracingPolicy';\n\n/**\n * Options to configure a proxy for outgoing requests (Node.js only).\n */\nexport interface ProxySettings {\n  /*\n   * The proxy's host address.\n   */\n  host: string;\n\n  /*\n   * The proxy host's port.\n   */\n  port: number;\n\n  /**\n   * The user name to authenticate with the proxy, if required.\n   */\n  username?: string;\n\n  /**\n   * The password to authenticate with the proxy, if required.\n   */\n  password?: string;\n}\n\nexport type ProxyOptions = ProxySettings; // Alias ProxySettings as ProxyOptions for future use.\n\n/**\n * Options to be provided while creating the client.\n */\nexport interface ServiceClientOptions {\n  /**\n   * An array of factories which get called to create the RequestPolicy pipeline used to send a HTTP\n   * request on the wire, or a function that takes in the defaultRequestPolicyFactories and returns\n   * the requestPolicyFactories that will be used.\n   */\n  requestPolicyFactories?:\n    | RequestPolicyFactory[]\n    | ((defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | RequestPolicyFactory[]);\n  /**\n   * The HttpClient that will be used to send HTTP requests.\n   */\n  httpClient?: HttpClient;\n  /**\n   * The HttpPipelineLogger that can be used to debug RequestPolicies within the HTTP pipeline.\n   */\n  httpPipelineLogger?: HttpPipelineLogger;\n  /**\n   * If set to true, turn off the default retry policy.\n   */\n  noRetryPolicy?: boolean;\n  /**\n   * Gets or sets the retry timeout in seconds for AutomaticRPRegistration. Default value is 30.\n   */\n  rpRegistrationRetryTimeout?: number;\n  /**\n   * Whether or not to generate a client request ID header for each HTTP request.\n   */\n  generateClientRequestIdHeader?: boolean;\n  /**\n   * Whether to include credentials in CORS requests in the browser.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials for more information.\n   */\n  withCredentials?: boolean;\n  /**\n   * If specified, a GenerateRequestIdPolicy will be added to the HTTP pipeline that will add a\n   * header to all outgoing requests with this header name and a random UUID as the request ID.\n   */\n  clientRequestIdHeaderName?: string;\n  /**\n   * The content-types that will be associated with JSON or XML serialization.\n   */\n  deserializationContentTypes?: DeserializationContentTypes;\n  /**\n   * The header name to use for the telemetry header while sending the request. If this is not\n   * specified, then \"User-Agent\" will be used when running on Node.js and \"x-ms-command-name\" will\n   * be used when running in a browser.\n   */\n  userAgentHeaderName?: string | ((defaultUserAgentHeaderName: string) => string);\n  /**\n   * The string to be set to the telemetry header while sending the request, or a function that\n   * takes in the default user-agent string and returns the user-agent string that will be used.\n   */\n  userAgent?: string | ((defaultUserAgent: string) => string);\n  /**\n   * Proxy settings which will be used for every HTTP request (Node.js only).\n   */\n  proxySettings?: ProxySettings;\n}\n\n/**\n * @class\n * Initializes a new instance of the ServiceClient.\n */\nexport class ServiceClient {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   */\n  protected baseUri?: string;\n\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  protected requestContentType?: string;\n\n  /**\n   * The HTTP client that will be used to send requests.\n   */\n  private readonly _httpClient: HttpClient;\n  private readonly _requestPolicyOptions: RequestPolicyOptions;\n\n  private readonly _requestPolicyFactories: RequestPolicyFactory[];\n  private readonly _withCredentials: boolean;\n\n  /**\n   * The ServiceClient constructor\n   * @constructor\n   * @param credentials The credentials used for authentication with the service.\n   * @param options The service client options that govern the behavior of the client.\n   */\n  constructor(\n    credentials?: TokenCredential | ServiceClientCredentials,\n    options?: ServiceClientOptions\n  ) {\n    if (!options) {\n      options = {};\n    }\n\n    this._withCredentials = options.withCredentials || false;\n    this._httpClient = options.httpClient || new DefaultHttpClient();\n    this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n\n    let requestPolicyFactories: RequestPolicyFactory[];\n    if (Array.isArray(options.requestPolicyFactories)) {\n      logger.info(\"ServiceClient: using custom request policies\");\n      requestPolicyFactories = options.requestPolicyFactories;\n    } else {\n      let authPolicyFactory: RequestPolicyFactory | undefined = undefined;\n      if (isTokenCredential(credentials)) {\n        logger.info(\n          \"ServiceClient: creating bearer token authentication policy from provided credentials\"\n        );\n        // Create a wrapped RequestPolicyFactory here so that we can provide the\n        // correct scope to the BearerTokenAuthenticationPolicy at the first time\n        // one is requested.  This is needed because generated ServiceClient\n        // implementations do not set baseUri until after ServiceClient's constructor\n        // is finished, leaving baseUri empty at the time when it is needed to\n        // build the correct scope name.\n        const wrappedPolicyFactory: () => RequestPolicyFactory = () => {\n          let bearerTokenPolicyFactory: RequestPolicyFactory | undefined = undefined;\n          let serviceClient = this;\n          return {\n            create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): RequestPolicy {\n              if (bearerTokenPolicyFactory === undefined) {\n                bearerTokenPolicyFactory = bearerTokenAuthenticationPolicy(\n                  credentials,\n                  `${serviceClient.baseUri || \"\"}/.default`\n                );\n              }\n\n              return bearerTokenPolicyFactory.create(nextPolicy, options);\n            }\n          };\n        };\n\n        authPolicyFactory = wrappedPolicyFactory();\n      } else if (credentials && typeof credentials.signRequest === \"function\") {\n        logger.info(\"ServiceClient: creating signing policy from provided credentials\");\n        authPolicyFactory = signingPolicy(credentials);\n      } else if (credentials !== undefined) {\n        throw new Error(\"The credentials argument must implement the TokenCredential interface\");\n      }\n\n      logger.info(\"ServiceClient: using default request policies\");\n      requestPolicyFactories = createDefaultRequestPolicyFactories(authPolicyFactory, options);\n      if (options.requestPolicyFactories) {\n        // options.requestPolicyFactories can also be a function that manipulates\n        // the default requestPolicyFactories array\n        const newRequestPolicyFactories:\n          | void\n          | RequestPolicyFactory[] = options.requestPolicyFactories(requestPolicyFactories);\n        if (newRequestPolicyFactories) {\n          requestPolicyFactories = newRequestPolicyFactories;\n        }\n      }\n    }\n    this._requestPolicyFactories = requestPolicyFactories;\n  }\n\n  /**\n   * Send the provided httpRequest.\n   */\n  sendRequest(options: RequestPrepareOptions | WebResource): Promise<HttpOperationResponse> {\n    if (options === null || options === undefined || typeof options !== \"object\") {\n      throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n    }\n\n    let httpRequest: WebResource;\n    try {\n      if (options instanceof WebResource) {\n        options.validateRequestProperties();\n        httpRequest = options;\n      } else {\n        httpRequest = new WebResource();\n        httpRequest = httpRequest.prepare(options);\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    let httpPipeline: RequestPolicy = this._httpClient;\n    if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n      for (let i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n        httpPipeline = this._requestPolicyFactories[i].create(\n          httpPipeline,\n          this._requestPolicyOptions\n        );\n      }\n    }\n    return httpPipeline.sendRequest(httpRequest);\n  }\n\n  /**\n   * Send an HTTP request that is populated using the provided OperationSpec.\n   * @param {OperationArguments} operationArguments The arguments that the HTTP request's templated values will be populated from.\n   * @param {OperationSpec} operationSpec The OperationSpec to use to populate the httpRequest.\n   * @param {ServiceCallback} callback The callback to call when the response is received.\n   */\n  async sendOperationRequest(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n    callback?: ServiceCallback<any>\n  ): Promise<RestResponse> {\n    if (typeof operationArguments.options === \"function\") {\n      callback = operationArguments.options;\n      operationArguments.options = undefined;\n    }\n\n    const httpRequest = new WebResource();\n\n    let result: Promise<RestResponse>;\n    try {\n      const baseUri: string | undefined = operationSpec.baseUrl || this.baseUri;\n      if (!baseUri) {\n        throw new Error(\n          \"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\"\n        );\n      }\n\n      httpRequest.method = operationSpec.httpMethod;\n      httpRequest.operationSpec = operationSpec;\n\n      const requestUrl: URLBuilder = URLBuilder.parse(baseUri);\n      if (operationSpec.path) {\n        requestUrl.appendPath(operationSpec.path);\n      }\n      if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n        for (const urlParameter of operationSpec.urlParameters) {\n          let urlParameterValue: string = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            urlParameter,\n            operationSpec.serializer\n          );\n          urlParameterValue = operationSpec.serializer.serialize(\n            urlParameter.mapper,\n            urlParameterValue,\n            getPathStringFromParameter(urlParameter)\n          );\n          if (!urlParameter.skipEncoding) {\n            urlParameterValue = encodeURIComponent(urlParameterValue);\n          }\n          requestUrl.replaceAll(\n            `{${urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)}}`,\n            urlParameterValue\n          );\n        }\n      }\n      if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n        for (const queryParameter of operationSpec.queryParameters) {\n          let queryParameterValue: any = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            queryParameter,\n            operationSpec.serializer\n          );\n          if (queryParameterValue != undefined) {\n            queryParameterValue = operationSpec.serializer.serialize(\n              queryParameter.mapper,\n              queryParameterValue,\n              getPathStringFromParameter(queryParameter)\n            );\n            if (queryParameter.collectionFormat != undefined) {\n              if (queryParameter.collectionFormat === QueryCollectionFormat.Multi) {\n                if (queryParameterValue.length === 0) {\n                  queryParameterValue = \"\";\n                } else {\n                  for (const index in queryParameterValue) {\n                    const item = queryParameterValue[index];\n                    queryParameterValue[index] = item == undefined ? \"\" : item.toString();\n                  }\n                }\n              } else {\n                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n              }\n            }\n            if (!queryParameter.skipEncoding) {\n              if (Array.isArray(queryParameterValue)) {\n                for (const index in queryParameterValue) {\n                  queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                }\n              } else {\n                queryParameterValue = encodeURIComponent(queryParameterValue);\n              }\n            }\n            requestUrl.setQueryParameter(\n              queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter),\n              queryParameterValue\n            );\n          }\n        }\n      }\n      httpRequest.url = requestUrl.toString();\n\n      const contentType = operationSpec.contentType || this.requestContentType;\n      if (contentType) {\n        httpRequest.headers.set(\"Content-Type\", contentType);\n      }\n\n      if (operationSpec.headerParameters) {\n        for (const headerParameter of operationSpec.headerParameters) {\n          let headerValue: any = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            headerParameter,\n            operationSpec.serializer\n          );\n          if (headerValue != undefined) {\n            headerValue = operationSpec.serializer.serialize(\n              headerParameter.mapper,\n              headerValue,\n              getPathStringFromParameter(headerParameter)\n            );\n            const headerCollectionPrefix = (headerParameter.mapper as DictionaryMapper)\n              .headerCollectionPrefix;\n            if (headerCollectionPrefix) {\n              for (const key of Object.keys(headerValue)) {\n                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n              }\n            } else {\n              httpRequest.headers.set(\n                headerParameter.mapper.serializedName ||\n                  getPathStringFromParameter(headerParameter),\n                headerValue\n              );\n            }\n          }\n        }\n      }\n\n      const options: RequestOptionsBase | undefined = operationArguments.options;\n      if (options) {\n        if (options.customHeaders) {\n          for (const customHeaderName in options.customHeaders) {\n            httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n          }\n        }\n\n        if (options.abortSignal) {\n          httpRequest.abortSignal = options.abortSignal;\n        }\n\n        if (options.timeout) {\n          httpRequest.timeout = options.timeout;\n        }\n\n        if (options.onUploadProgress) {\n          httpRequest.onUploadProgress = options.onUploadProgress;\n        }\n\n        if (options.onDownloadProgress) {\n          httpRequest.onDownloadProgress = options.onDownloadProgress;\n        }\n\n        if (options.spanOptions) {\n          httpRequest.spanOptions = options.spanOptions;\n        }\n      }\n\n      httpRequest.withCredentials = this._withCredentials;\n\n      serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n\n      if (httpRequest.streamResponseBody == undefined) {\n        httpRequest.streamResponseBody = isStreamOperation(operationSpec);\n      }\n\n      let rawResponse: HttpOperationResponse;\n      let sendRequestError;\n      try {\n        rawResponse = await this.sendRequest(httpRequest);\n      } catch (error) {\n        sendRequestError = error;\n      }\n      if (sendRequestError) {\n        if (sendRequestError.response){\n          sendRequestError.details = flattenResponse(\n            sendRequestError.response,\n            operationSpec.responses[sendRequestError.statusCode] ||\n              operationSpec.responses[\"default\"]\n          );\n        }\n        result = Promise.reject(\n          sendRequestError\n        );\n      } else {\n        result = Promise.resolve(\n          flattenResponse(rawResponse!, operationSpec.responses[rawResponse!.status])\n        );\n      }\n    } catch (error) {\n      result = Promise.reject(error);\n    }\n\n    const cb = callback;\n    if (cb) {\n      result\n        // tslint:disable-next-line:no-null-keyword\n        .then((res) => cb(null, res._response.parsedBody, res._response.request, res._response))\n        .catch((err) => cb(err));\n    }\n\n    return result;\n  }\n}\n\nexport function serializeRequestBody(\n  serviceClient: ServiceClient,\n  httpRequest: WebResource,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec\n): void {\n  if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n    httpRequest.body = getOperationArgumentValueFromParameter(\n      serviceClient,\n      operationArguments,\n      operationSpec.requestBody,\n      operationSpec.serializer\n    );\n\n    const bodyMapper = operationSpec.requestBody.mapper;\n    const { required, xmlName, xmlElementName, serializedName } = bodyMapper;\n    const typeName = bodyMapper.type.name;\n    try {\n      if (httpRequest.body != undefined || required) {\n        const requestBodyParameterPathString: string = getPathStringFromParameter(\n          operationSpec.requestBody\n        );\n        httpRequest.body = operationSpec.serializer.serialize(\n          bodyMapper,\n          httpRequest.body,\n          requestBodyParameterPathString\n        );\n        const isStream = typeName === MapperType.Stream;\n        if (operationSpec.isXML) {\n          if (typeName === MapperType.Sequence) {\n            httpRequest.body = stringifyXML(\n              utils.prepareXMLRootList(\n                httpRequest.body,\n                xmlElementName || xmlName || serializedName!\n              ),\n              { rootName: xmlName || serializedName }\n            );\n          } else if (!isStream) {\n            httpRequest.body = stringifyXML(httpRequest.body, {\n              rootName: xmlName || serializedName\n            });\n          }\n        } else if (!isStream) {\n          httpRequest.body = JSON.stringify(httpRequest.body);\n        }\n      }\n    } catch (error) {\n      throw new Error(\n        `Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(\n          serializedName,\n          undefined,\n          \"  \"\n        )}.`\n      );\n    }\n  } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n    httpRequest.formData = {};\n    for (const formDataParameter of operationSpec.formDataParameters) {\n      const formDataParameterValue: any = getOperationArgumentValueFromParameter(\n        serviceClient,\n        operationArguments,\n        formDataParameter,\n        operationSpec.serializer\n      );\n      if (formDataParameterValue != undefined) {\n        const formDataParameterPropertyName: string =\n          formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n        httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(\n          formDataParameter.mapper,\n          formDataParameterValue,\n          getPathStringFromParameter(formDataParameter)\n        );\n      }\n    }\n  }\n}\n\nfunction getValueOrFunctionResult(\n  value: undefined | string | ((defaultValue: string) => string),\n  defaultValueCreator: () => string\n): string {\n  let result: string;\n  if (typeof value === \"string\") {\n    result = value;\n  } else {\n    result = defaultValueCreator();\n    if (typeof value === \"function\") {\n      result = value(result);\n    }\n  }\n  return result;\n}\n\nfunction createDefaultRequestPolicyFactories(\n  authPolicyFactory: RequestPolicyFactory | undefined,\n  options: ServiceClientOptions\n): RequestPolicyFactory[] {\n  const factories: RequestPolicyFactory[] = [];\n\n  if (options.generateClientRequestIdHeader) {\n    factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n  }\n\n  if (authPolicyFactory) {\n    factories.push(authPolicyFactory);\n  }\n\n  const userAgentHeaderName: string = getValueOrFunctionResult(\n    options.userAgentHeaderName,\n    getDefaultUserAgentHeaderName\n  );\n  const userAgentHeaderValue: string = getValueOrFunctionResult(\n    options.userAgent,\n    getDefaultUserAgentValue\n  );\n  if (userAgentHeaderName && userAgentHeaderValue) {\n    factories.push(userAgentPolicy({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n  }\n  factories.push(redirectPolicy());\n  factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n\n  if (!options.noRetryPolicy) {\n    factories.push(exponentialRetryPolicy());\n    factories.push(systemErrorRetryPolicy());\n    factories.push(throttlingRetryPolicy());\n  }\n\n  factories.push(deserializationPolicy(options.deserializationContentTypes));\n\n  const proxySettings = options.proxySettings || getDefaultProxySettings();\n  if (proxySettings) {\n    factories.push(proxyPolicy(proxySettings));\n  }\n\n  factories.push(logPolicy(logger.info, {}));\n\n  return factories;\n}\n\nexport function createPipelineFromOptions(\n  pipelineOptions: InternalPipelineOptions,\n  authPolicyFactory?: RequestPolicyFactory\n) : ServiceClientOptions {\n  let requestPolicyFactories: RequestPolicyFactory[] = [];\n\n  let userAgentValue = undefined;\n  if (pipelineOptions.userAgentOptions && pipelineOptions.userAgentOptions.userAgentPrefix) {\n    const userAgentInfo: string[] = [];\n    userAgentInfo.push(pipelineOptions.userAgentOptions.userAgentPrefix);\n\n    // Add the default user agent value if it isn't already specified\n    // by the userAgentPrefix option.\n    const defaultUserAgentInfo = getDefaultUserAgentValue();\n    if (userAgentInfo.indexOf(defaultUserAgentInfo) === -1) {\n      userAgentInfo.push(defaultUserAgentInfo);\n    }\n\n    userAgentValue = userAgentInfo.join(\" \");\n  }\n\n  const keepAliveOptions = {\n    ...DefaultKeepAliveOptions,\n    ...pipelineOptions.keepAliveOptions\n  };\n\n  const retryOptions = {\n    ...DefaultRetryOptions,\n    ...pipelineOptions.retryOptions\n  };\n\n  const redirectOptions = {\n    ...DefaultRedirectOptions,\n    ...pipelineOptions.redirectOptions\n  };\n\n  const proxySettings = pipelineOptions.proxyOptions || getDefaultProxySettings();\n  if (isNode && proxySettings) {\n    requestPolicyFactories.push(\n      proxyPolicy(proxySettings)\n    )\n  }\n\n  const deserializationOptions = {\n    ...DefaultDeserializationOptions,\n    ...pipelineOptions.deserializationOptions\n  };\n\n  const loggingOptions = {\n    ...DefaultLoggingOptions,\n    ...pipelineOptions.loggingOptions\n  };\n\n  requestPolicyFactories.push(\n    tracingPolicy(),\n    keepAlivePolicy(keepAliveOptions),\n    userAgentPolicy({ value: userAgentValue }),\n    generateClientRequestIdPolicy(),\n    deserializationPolicy(deserializationOptions.expectedContentTypes),\n    throttlingRetryPolicy(),\n    systemErrorRetryPolicy(),\n    exponentialRetryPolicy(\n      retryOptions.maxRetries,\n      retryOptions.retryDelayInMs,\n      retryOptions.maxRetryDelayInMs\n    )\n  )\n\n  if (redirectOptions.handleRedirects) {\n    requestPolicyFactories.push(\n      redirectPolicy(redirectOptions.maxRetries)\n    );\n  }\n\n  if (authPolicyFactory) {\n    requestPolicyFactories.push(authPolicyFactory);\n  }\n\n  requestPolicyFactories.push(\n    logPolicy(\n      loggingOptions.logger,\n      loggingOptions.logPolicyOptions\n    )\n  );\n\n  if (pipelineOptions.updatePipelinePolicies) {\n    // If the update function throws an exception, let it bubble up.\n    requestPolicyFactories = pipelineOptions.updatePipelinePolicies(requestPolicyFactories);\n  }\n\n  return {\n    httpClient: pipelineOptions.httpClient,\n    requestPolicyFactories\n  };\n}\n\n\nexport type PropertyParent = { [propertyName: string]: any };\n\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nexport function getPropertyParent(parent: PropertyParent, propertyPath: string[]): PropertyParent {\n  if (parent && propertyPath) {\n    const propertyPathLength: number = propertyPath.length;\n    for (let i = 0; i < propertyPathLength - 1; ++i) {\n      const propertyName: string = propertyPath[i];\n      if (!parent[propertyName]) {\n        parent[propertyName] = {};\n      }\n      parent = parent[propertyName];\n    }\n  }\n  return parent;\n}\n\nfunction getOperationArgumentValueFromParameter(\n  serviceClient: ServiceClient,\n  operationArguments: OperationArguments,\n  parameter: OperationParameter,\n  serializer: Serializer\n): any {\n  return getOperationArgumentValueFromParameterPath(\n    serviceClient,\n    operationArguments,\n    parameter.parameterPath,\n    parameter.mapper,\n    serializer\n  );\n}\n\nexport function getOperationArgumentValueFromParameterPath(\n  serviceClient: ServiceClient,\n  operationArguments: OperationArguments,\n  parameterPath: ParameterPath,\n  parameterMapper: Mapper,\n  serializer: Serializer\n): any {\n  let value: any;\n  if (typeof parameterPath === \"string\") {\n    parameterPath = [parameterPath];\n  }\n  if (Array.isArray(parameterPath)) {\n    if (parameterPath.length > 0) {\n      if (parameterMapper.isConstant) {\n        value = parameterMapper.defaultValue;\n      } else {\n        let propertySearchResult: PropertySearchResult = getPropertyFromParameterPath(\n          operationArguments,\n          parameterPath\n        );\n        if (!propertySearchResult.propertyFound) {\n          propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n        }\n\n        let useDefaultValue = false;\n        if (!propertySearchResult.propertyFound) {\n          useDefaultValue =\n            parameterMapper.required ||\n            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n        }\n        value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n      }\n\n      // Serialize just for validation purposes.\n      const parameterPathString: string = getPathStringFromParameterPath(\n        parameterPath,\n        parameterMapper\n      );\n      serializer.serialize(parameterMapper, value, parameterPathString);\n    }\n  } else {\n    if (parameterMapper.required) {\n      value = {};\n    }\n\n    for (const propertyName in parameterPath) {\n      const propertyMapper: Mapper = (parameterMapper as CompositeMapper).type.modelProperties![\n        propertyName\n      ];\n      const propertyPath: ParameterPath = parameterPath[propertyName];\n      const propertyValue: any = getOperationArgumentValueFromParameterPath(\n        serviceClient,\n        operationArguments,\n        propertyPath,\n        propertyMapper,\n        serializer\n      );\n      // Serialize just for validation purposes.\n      const propertyPathString: string = getPathStringFromParameterPath(\n        propertyPath,\n        propertyMapper\n      );\n      serializer.serialize(propertyMapper, propertyValue, propertyPathString);\n      if (propertyValue !== undefined) {\n        if (!value) {\n          value = {};\n        }\n        value[propertyName] = propertyValue;\n      }\n    }\n  }\n  return value;\n}\n\ninterface PropertySearchResult {\n  propertyValue?: any;\n  propertyFound: boolean;\n}\n\nfunction getPropertyFromParameterPath(\n  parent: { [parameterName: string]: any },\n  parameterPath: string[]\n): PropertySearchResult {\n  const result: PropertySearchResult = { propertyFound: false };\n  let i = 0;\n  for (; i < parameterPath.length; ++i) {\n    const parameterPathPart: string = parameterPath[i];\n    // Make sure to check inherited properties too, so don't use hasOwnProperty().\n    if (parent != undefined && parameterPathPart in parent) {\n      parent = parent[parameterPathPart];\n    } else {\n      break;\n    }\n  }\n  if (i === parameterPath.length) {\n    result.propertyValue = parent;\n    result.propertyFound = true;\n  }\n  return result;\n}\n\nexport function flattenResponse(\n  _response: HttpOperationResponse,\n  responseSpec: OperationResponse | undefined\n): RestResponse {\n  const parsedHeaders = _response.parsedHeaders;\n  const bodyMapper = responseSpec && responseSpec.bodyMapper;\n\n  const addOperationResponse = (obj: {}) =>\n    Object.defineProperty(obj, \"_response\", {\n      value: _response\n    });\n\n  if (bodyMapper) {\n    const typeName = bodyMapper.type.name;\n    if (typeName === \"Stream\") {\n      return addOperationResponse({\n        ...parsedHeaders,\n        blobBody: _response.blobBody,\n        readableStreamBody: _response.readableStreamBody\n      });\n    }\n\n    const modelProperties =\n      (typeName === \"Composite\" && (bodyMapper as CompositeMapper).type.modelProperties) || {};\n    const isPageableResponse = Object.keys(modelProperties).some(\n      (k) => modelProperties[k].serializedName === \"\"\n    );\n    if (typeName === \"Sequence\" || isPageableResponse) {\n      const arrayResponse = [...(_response.parsedBody || [])] as RestResponse & any[];\n\n      for (const key of Object.keys(modelProperties)) {\n        if (modelProperties[key].serializedName) {\n          arrayResponse[key] = _response.parsedBody[key];\n        }\n      }\n\n      if (parsedHeaders) {\n        for (const key of Object.keys(parsedHeaders)) {\n          arrayResponse[key] = parsedHeaders[key];\n        }\n      }\n      addOperationResponse(arrayResponse);\n      return arrayResponse;\n    }\n\n    if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n      return addOperationResponse({\n        ...parsedHeaders,\n        ..._response.parsedBody\n      });\n    }\n  }\n\n  if (\n    bodyMapper ||\n    _response.request.method === \"HEAD\" ||\n    utils.isPrimitiveType(_response.parsedBody)\n  ) {\n    // primitive body types and HEAD booleans\n    return addOperationResponse({\n      ...parsedHeaders,\n      body: _response.parsedBody\n    });\n  }\n\n  return addOperationResponse({\n    ...parsedHeaders,\n    ..._response.parsedBody\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The AzureLogger used for all clients within the identity package\n */\nexport const logger = createClientLogger(\"identity\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport qs from \"qs\";\nimport {\n  AccessToken,\n  ServiceClient,\n  ServiceClientOptions,\n  WebResource,\n  RequestPrepareOptions,\n  GetTokenOptions,\n  tracingPolicy,\n  RequestPolicyFactory\n} from \"@azure/core-http\";\nimport { CanonicalCode } from \"@azure/core-tracing\";\nimport { AuthenticationError, AuthenticationErrorName } from \"./errors\";\nimport { createSpan } from \"../util/tracing\";\nimport { logger } from '../util/logging';\n\n\nconst DefaultAuthorityHost = \"https://login.microsoftonline.com\";\n\n/**\n * An internal type used to communicate details of a token request's\n * response that should not be sent back as part of the AccessToken.\n */\nexport interface TokenResponse {\n  /**\n   * The AccessToken to be returned from getToken.\n   */\n  accessToken: AccessToken;\n\n  /**\n   * The refresh token if the 'offline_access' scope was used.\n   */\n  refreshToken?: string;\n}\n\nexport class IdentityClient extends ServiceClient {\n  public authorityHost: string;\n\n  constructor(options?: IdentityClientOptions) {\n    options = options || IdentityClient.getDefaultOptions();\n    super(undefined, options);\n\n    this.baseUri = this.authorityHost = options.authorityHost || DefaultAuthorityHost;\n\n    if (!this.baseUri.startsWith(\"https:\")) {\n      throw new Error(\"The authorityHost address must use the 'https' protocol.\");\n    }\n  }\n\n  createWebResource(requestOptions: RequestPrepareOptions): WebResource {\n    const webResource = new WebResource();\n    webResource.prepare(requestOptions);\n    return webResource;\n  }\n\n  async sendTokenRequest(\n    webResource: WebResource,\n    expiresOnParser?: (responseBody: any) => number\n  ): Promise<TokenResponse | null> {\n    logger.info(`IdentityClient: sending token request to [${webResource.url}]`);\n    const response = await this.sendRequest(webResource);\n\n    expiresOnParser =\n      expiresOnParser ||\n      ((responseBody: any) => {\n        return Date.now() + responseBody.expires_in * 1000;\n      });\n\n    if (response.status === 200 || response.status === 201) {\n      const token = {\n        accessToken: {\n          token: response.parsedBody.access_token,\n          expiresOnTimestamp: expiresOnParser(response.parsedBody)\n        },\n        refreshToken: response.parsedBody.refresh_token\n      };\n\n      logger.info(`IdentityClient: [${webResource.url}] token acquired, expires on ${token.accessToken.expiresOnTimestamp}`);\n      return token;\n    } else {\n      const error = new AuthenticationError(response.status, response.parsedBody || response.bodyAsText);\n      logger.warning(`IdentityClient: authentication error. HTTP status: ${response.status}, ${error.errorResponse.errorDescription}`);\n      throw error;\n    }\n  }\n\n  async refreshAccessToken(\n    tenantId: string,\n    clientId: string,\n    scopes: string,\n    refreshToken: string | undefined,\n    clientSecret: string | undefined,\n    expiresOnParser?: (responseBody: any) => number,\n    options?: GetTokenOptions\n  ): Promise<TokenResponse | null> {\n    if (refreshToken === undefined) {\n      return null;\n    }\n    logger.info(`IdentityClient: refreshing access token with client ID: ${clientId}, scopes: ${scopes} started`);\n\n    const { span, options: newOptions } = createSpan(\"IdentityClient-refreshAccessToken\", options);\n\n    const refreshParams = {\n      grant_type: \"refresh_token\",\n      client_id: clientId,\n      refresh_token: refreshToken,\n      scope: scopes\n    };\n\n    if (clientSecret !== undefined) {\n      (refreshParams as any).client_secret = clientSecret;\n    }\n\n    try {\n      const webResource = this.createWebResource({\n        url: `${this.authorityHost}/${tenantId}/oauth2/v2.0/token`,\n        method: \"POST\",\n        disableJsonStringifyOnBody: true,\n        deserializationMapper: undefined,\n        body: qs.stringify(refreshParams),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        spanOptions: newOptions.spanOptions,\n        abortSignal: options && options.abortSignal\n      });\n\n      const response = await this.sendTokenRequest(webResource, expiresOnParser);\n      logger.info(`IdentityClient: refreshed token for client ID: ${clientId}`);\n      return response;\n    } catch (err) {\n      if (\n        err.name === AuthenticationErrorName &&\n        err.errorResponse.error === \"interaction_required\"\n      ) {\n        // It's likely that the refresh token has expired, so\n        // return null so that the credential implementation will\n        // initiate the authentication flow again.\n        logger.info(`IdentityClient: interaction required for client ID: ${clientId}`);\n        span.setStatus({\n          code: CanonicalCode.UNAUTHENTICATED,\n          message: err.message\n        });\n\n        return null;\n      } else {\n        logger.warning(`IdentityClient: failed refreshing token for client ID: ${clientId}: ${err}`);\n      span.setStatus({\n          code: CanonicalCode.UNKNOWN,\n          message: err.message\n        });\n        throw err;\n      }\n    } finally {\n      span.end();\n    }\n  }\n\n  static getDefaultOptions(): IdentityClientOptions {\n    return {\n      authorityHost: DefaultAuthorityHost,\n      requestPolicyFactories: (factories: RequestPolicyFactory[]) => {\n        return [tracingPolicy(), ...factories];\n      }\n    };\n  }\n}\n\n/**\n * Provides options to configure how the Identity library makes authentication\n * requests to Azure Active Directory.\n */\nexport interface IdentityClientOptions extends ServiceClientOptions {\n  /**\n   * The authority host to use for authentication requests.  The default is\n   * \"https://login.microsoftonline.com\".\n   */\n  authorityHost?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport qs from \"qs\";\nimport { TokenCredential, GetTokenOptions, AccessToken } from \"@azure/core-http\";\nimport { IdentityClientOptions, IdentityClient } from \"../client/identityClient\";\nimport { createSpan } from \"../util/tracing\";\nimport { AuthenticationErrorName } from \"../client/errors\";\nimport { CanonicalCode } from \"@azure/core-tracing\";\n\n/**\n * Enables authentication to Azure Active Directory using a client secret\n * that was generated for an App Registration.  More information on how\n * to configure a client secret can be found here:\n *\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-configure-app-access-web-apis#add-credentials-to-your-web-application\n *\n */\nexport class ClientSecretCredential implements TokenCredential {\n  private identityClient: IdentityClient;\n  private tenantId: string;\n  private clientId: string;\n  private clientSecret: string;\n\n  /**\n   * Creates an instance of the ClientSecretCredential with the details\n   * needed to authenticate against Azure Active Directory with a client\n   * secret.\n   *\n   * @param tenantId The Azure Active Directory tenant (directory) ID.\n   * @param clientId The client (application) ID of an App Registration in the tenant.\n   * @param clientSecret A client secret that was generated for the App Registration.\n   * @param options Options for configuring the client which makes the authentication request.\n   */\n  constructor(\n    tenantId: string,\n    clientId: string,\n    clientSecret: string,\n    options?: IdentityClientOptions\n  ) {\n    this.identityClient = new IdentityClient(options);\n    this.tenantId = tenantId;\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n  }\n\n  /**\n   * Authenticates with Azure Active Directory and returns an {@link AccessToken} if\n   * successful.  If authentication cannot be performed at this time, this method may\n   * return null.  If an error occurs during authentication, an {@link AuthenticationError}\n   * containing failure details will be thrown.\n   *\n   * @param scopes The list of scopes for which the token will have access.\n   * @param options The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  public async getToken(\n    scopes: string | string[],\n    options?: GetTokenOptions\n  ): Promise<AccessToken | null> {\n    const { span, options: newOptions } = createSpan(\"ClientSecretCredential-getToken\", options);\n    try {\n      const webResource = this.identityClient.createWebResource({\n        url: `${this.identityClient.authorityHost}/${this.tenantId}/oauth2/v2.0/token`,\n        method: \"POST\",\n        disableJsonStringifyOnBody: true,\n        deserializationMapper: undefined,\n        body: qs.stringify({\n          response_type: \"token\",\n          grant_type: \"client_credentials\",\n          client_id: this.clientId,\n          client_secret: this.clientSecret,\n          scope: typeof scopes === \"string\" ? scopes : scopes.join(\" \")\n        }),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        abortSignal: options && options.abortSignal,\n        spanOptions: newOptions.spanOptions\n      });\n\n      const tokenResponse = await this.identityClient.sendTokenRequest(webResource);\n      return (tokenResponse && tokenResponse.accessToken) || null;\n    } catch (err) {\n      const code =\n        err.name === AuthenticationErrorName\n          ? CanonicalCode.UNAUTHENTICATED\n          : CanonicalCode.UNKNOWN;\n      span.setStatus({\n        code,\n        message: err.message\n      });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { TokenCredential, GetTokenOptions, AccessToken } from \"@azure/core-http\";\nimport { IdentityClientOptions } from \"../client/identityClient\";\n\nconst BrowserNotSupportedError = new Error(\n  \"ClientCertificateCredential is not supported in the browser.\"\n);\n\nexport class ClientCertificateCredential implements TokenCredential {\n  constructor(\n    tenantId: string,\n    clientId: string,\n    certificatePath: string,\n    options?: IdentityClientOptions\n  ) {\n    throw BrowserNotSupportedError;\n  }\n\n  public getToken(\n    scopes: string | string[],\n    options?: GetTokenOptions\n  ): Promise<AccessToken | null> {\n    throw BrowserNotSupportedError;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class CryptoUtils {\r\n\r\n    /**\r\n     * Creates a new random GUID - used to populate state?\r\n     * @returns string (GUID)\r\n     */\r\n    static createNewGuid(): string {\r\n        // RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n        // pseudo-random numbers.\r\n        // The algorithm is as follows:\r\n        //     Set the two most significant bits (bits 6 and 7) of the\r\n        //        clock_seq_hi_and_reserved to zero and one, respectively.\r\n        //     Set the four most significant bits (bits 12 through 15) of the\r\n        //        time_hi_and_version field to the 4-bit version number from\r\n        //        Section 4.1.3. Version4\r\n        //     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n        //     values.\r\n        // UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n        // time-low               = 4hexOctet\r\n        // time-mid               = 2hexOctet\r\n        // time-high-and-version  = 2hexOctet\r\n        // clock-seq-and-reserved = hexOctet:\r\n        // clock-seq-low          = hexOctet\r\n        // node                   = 6hexOctet\r\n        // Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n        // y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n        // y values are 8, 9, A, B\r\n\r\n        const cryptoObj: Crypto = window.crypto; // for IE 11\r\n        if (cryptoObj && cryptoObj.getRandomValues) {\r\n        const buffer: Uint8Array = new Uint8Array(16);\r\n        cryptoObj.getRandomValues(buffer);\r\n\r\n        //buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n        buffer[6] |= 0x40; //buffer[6] | 01000000 will set the 6 bit to 1.\r\n        buffer[6] &= 0x4f; //buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n\r\n        //buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n        buffer[8] |= 0x80; //buffer[8] | 10000000 will set the 7 bit to 1.\r\n        buffer[8] &= 0xbf; //buffer[8] & 10111111 will set the 6 bit to 0.\r\n\r\n        return CryptoUtils.decimalToHex(buffer[0]) + CryptoUtils.decimalToHex(buffer[1])\r\n            + CryptoUtils.decimalToHex(buffer[2]) + CryptoUtils.decimalToHex(buffer[3])\r\n            + \"-\" + CryptoUtils.decimalToHex(buffer[4]) + CryptoUtils.decimalToHex(buffer[5])\r\n            + \"-\" + CryptoUtils.decimalToHex(buffer[6]) + CryptoUtils.decimalToHex(buffer[7])\r\n            + \"-\" + CryptoUtils.decimalToHex(buffer[8]) + CryptoUtils.decimalToHex(buffer[9])\r\n            + \"-\" + CryptoUtils.decimalToHex(buffer[10]) + CryptoUtils.decimalToHex(buffer[11])\r\n            + CryptoUtils.decimalToHex(buffer[12]) + CryptoUtils.decimalToHex(buffer[13])\r\n            + CryptoUtils.decimalToHex(buffer[14]) + CryptoUtils.decimalToHex(buffer[15]);\r\n        }\r\n        else {\r\n        const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n        const hex: string = \"0123456789abcdef\";\r\n        let r: number = 0;\r\n        let guidResponse: string = \"\";\r\n        for (let i: number = 0; i < 36; i++) {\r\n            if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n            // each x and y needs to be random\r\n            r = Math.random()  * 16 | 0;\r\n            }\r\n            if (guidHolder[i] === \"x\") {\r\n            guidResponse += hex[r];\r\n            } else if (guidHolder[i] === \"y\") {\r\n            // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n            r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n            r |= 0x8; // set pos 3 to 1 as 1???\r\n            guidResponse += hex[r];\r\n            } else {\r\n            guidResponse += guidHolder[i];\r\n            }\r\n        }\r\n        return guidResponse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    static decimalToHex(num: number): string {\r\n        var hex: string = num.toString(16);\r\n        while (hex.length < 2) {\r\n        hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    }\r\n\r\n    \r\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_4_%E2%80%93_escaping_the_string_before_encoding_it\r\n\r\n    /**\r\n     * encoding string to base64 - platform specific check\r\n     *\r\n     * @param input\r\n     */\r\n    static base64Encode(input: string): string {\r\n        return btoa(encodeURIComponent(input).replace(/%([0-9A-F]{2})/g,\r\n            function toSolidBytes(match, p1) {\r\n                return String.fromCharCode(Number(\"0x\" + p1));\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * decoding base64 token - platform specific check\r\n     *\r\n     * @param base64IdToken\r\n     */\r\n    static base64Decode(input: string): string {\r\n        return decodeURIComponent(atob(input).split(\"\").map(function(c) {\r\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(\"\"));\r\n    }\r\n\r\n    /**\r\n     * deserialize a string\r\n     *\r\n     * @param query\r\n     */\r\n    static deserialize(query: string): any {\r\n        let match: Array<string>; // Regex for replacing addition symbol with a space\r\n        const pl = /\\+/g;\r\n        const search = /([^&=]+)=([^&]*)/g;\r\n        const decode = (s: string) => decodeURIComponent(s.replace(pl, \" \"));\r\n        const obj: {} = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n        obj[decode(match[1])] = decode(match[2]);\r\n        match = search.exec(query);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n}\r\n","import { CacheLocation } from \"../Configuration\";\r\n\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * @hidden\r\n * Constants\r\n */\r\nexport class Constants {\r\n  static get errorDescription(): string { return \"error_description\"; }\r\n  static get error(): string { return \"error\"; }\r\n\r\n  static get scope(): string { return \"scope\"; }\r\n  static get clientInfo(): string { return \"client_info\"; }\r\n  static get clientId(): string { return \"clientId\"; }\r\n\r\n  static get idToken(): string { return \"id_token\"; }\r\n  static get adalIdToken(): string { return \"adal.idtoken\"; }\r\n  static get accessToken(): string { return \"access_token\"; }\r\n  static get expiresIn(): string { return \"expires_in\"; }\r\n  static get sessionState(): string { return \"session_state\"; }\r\n  static get claims(): string { return \"claims\"; }\r\n\r\n  static get msalClientInfo(): string { return \"msal.client.info\"; }\r\n  static get msalError(): string { return \"msal.error\"; }\r\n  static get msalErrorDescription(): string { return \"msal.error.description\"; }\r\n\r\n  static get msalSessionState(): string { return \"msal.session.state\"; }\r\n  static get tokenKeys(): string { return \"msal.token.keys\"; }\r\n  static get accessTokenKey(): string { return \"msal.access.token.key\"; }\r\n  static get expirationKey(): string { return \"msal.expiration.key\"; }\r\n  static get stateLogin(): string { return \"msal.state.login\"; }\r\n  static get stateAcquireToken(): string { return \"msal.state.acquireToken\"; }\r\n  static get stateRenew(): string { return \"msal.state.renew\"; }\r\n  static get nonceIdToken(): string { return \"msal.nonce.idtoken\"; }\r\n  static get userName(): string { return \"msal.username\"; }\r\n  static get idTokenKey(): string { return \"msal.idtoken\"; }\r\n  static get loginRequest(): string { return \"msal.login.request\"; }\r\n  static get loginError(): string { return \"msal.login.error\"; }\r\n  static get renewStatus(): string { return \"msal.token.renew.status\"; }\r\n  static get urlHash(): string { return \"msal.urlHash\"; }\r\n  static get angularLoginRequest(): string { return \"msal.angular.login.request\"; }\r\n  static get msal(): string { return \"msal\"; }\r\n\r\n  static get no_account(): string { return \"NO_ACCOUNT\"; }\r\n  static get consumersUtid(): string { return \"9188040d-6c67-4c5b-b112-36a304b66dad\"; }\r\n  static get upn(): string { return \"upn\"; }\r\n\r\n  static get prompt_select_account(): string { return \"&prompt=select_account\"; }\r\n  static get prompt_none(): string { return \"&prompt=none\"; }\r\n  static get prompt(): string { return \"prompt\"; }\r\n\r\n  static get response_mode_fragment(): string { return \"&response_mode=fragment\"; }\r\n  static get resourceDelimiter(): string { return \"|\"; }\r\n\r\n  static get tokenRenewStatusCancelled(): string { return \"Canceled\"; }\r\n  static get tokenRenewStatusCompleted(): string { return \"Completed\"; }\r\n  static get tokenRenewStatusInProgress(): string { return \"In Progress\"; }\r\n\r\n  private static _popUpWidth: number = 483;\r\n  static get popUpWidth(): number { return this._popUpWidth; }\r\n  static set popUpWidth(width: number) {\r\n    this._popUpWidth = width;\r\n  }\r\n  private static _popUpHeight: number = 600;\r\n  static get popUpHeight(): number { return this._popUpHeight; }\r\n  static set popUpHeight(height: number) {\r\n    this._popUpHeight = height;\r\n  }\r\n\r\n  static get login(): string { return \"LOGIN\"; }\r\n  static get renewToken(): string { return \"RENEW_TOKEN\"; }\r\n  static get unknown(): string { return \"UNKNOWN\"; }\r\n\r\n  static get homeAccountIdentifier(): string { return \"homeAccountIdentifier\"; }\r\n\r\n  static get common(): string { return \"common\"; }\r\n  static get openidScope(): string { return \"openid\"; }\r\n  static get profileScope(): string { return \"profile\"; }\r\n\r\n  static get cacheLocationLocal(): CacheLocation { return \"localStorage\"; }\r\n  static get cacheLocationSession(): CacheLocation { return \"sessionStorage\"; }\r\n\r\n  static get interactionTypeRedirect(): InteractionType { return \"redirectInteraction\"; }\r\n  static get interactionTypePopup(): InteractionType { return \"popupInteraction\"; }\r\n}\r\n\r\n/**\r\n * @hidden\r\n * CacheKeys for 'authority' and 'account'\r\n */\r\nexport const CacheKeys = {\r\n    AUTHORITY: \"msal.authority\",\r\n    ACQUIRE_TOKEN_ACCOUNT: \"msal.acquireTokenAccount\"\r\n};\r\n\r\nexport const AADTrustedHostList =  {\r\n  \"login.windows.net\": \"login.windows.net\",\r\n  \"login.chinacloudapi.cn\": \"login.chinacloudapi.cn\",\r\n  \"login.cloudgovapi.us\": \"login.cloudgovapi.us\",\r\n  \"login.microsoftonline.com\": \"login.microsoftonline.com\",\r\n  \"login.microsoftonline.de\": \"login.microsoftonline.de\",\r\n  \"login.microsoftonline.us\": \"login.microsoftonline.us\"\r\n};\r\n\r\n/**\r\n * @hidden\r\n * SSO Types - generated to populate hints\r\n */\r\nexport const SSOTypes = {\r\n    ACCOUNT: \"account\",\r\n    SID: \"sid\",\r\n    LOGIN_HINT: \"login_hint\",\r\n    ID_TOKEN: \"id_token\",\r\n    DOMAIN_HINT: \"domain_hint\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\",\r\n    ACCOUNT_ID: \"accountIdentifier\",\r\n    HOMEACCOUNT_ID: \"homeAccountIdentifier\",\r\n    LOGIN_REQ: \"login_req\",\r\n    DOMAIN_REQ: \"domain_req\"\r\n};\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport const BlacklistedEQParams = [\r\n  SSOTypes.SID,\r\n  SSOTypes.LOGIN_HINT\r\n];\r\n\r\nexport type InteractionType = \"redirectInteraction\" | \"popupInteraction\";\r\n\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n * @hidden\r\n */\r\nexport const PromptState = {\r\n\tLOGIN: \"login\",\r\n\tSELECT_ACCOUNT: \"select_account\",\r\n\tCONSENT: \"consent\",\r\n\tNONE: \"none\",\r\n};\r\n\r\n/**\r\n * MSAL JS Library Version\r\n */\r\nexport function libraryVersion(): string {\r\n  return \"1.1.3\";\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport class ScopeSet {\r\n\r\n    /**\r\n   * Check if there are dup scopes in a given request\r\n   *\r\n   * @param cachedScopes\r\n   * @param scopes\r\n   */\r\n  // TODO: Rename this, intersecting scopes isn't a great name for duplicate checker\r\n  static isIntersectingScopes(cachedScopes: Array<string>, scopes: Array<string>): boolean {\r\n    cachedScopes = this.convertToLowerCase(cachedScopes);\r\n    for (let i = 0; i < scopes.length; i++) {\r\n      if (cachedScopes.indexOf(scopes[i].toLowerCase()) > -1) {\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check if a given scope is present in the request\r\n   *\r\n   * @param cachedScopes\r\n   * @param scopes\r\n   */\r\n  static containsScope(cachedScopes: Array<string>, scopes: Array<string>): boolean {\r\n    cachedScopes = this.convertToLowerCase(cachedScopes);\r\n    return scopes.every((value: any): boolean => cachedScopes.indexOf(value.toString().toLowerCase()) >= 0);\r\n  }\r\n\r\n  /**\r\n   * toLower\r\n   *\r\n   * @param scopes\r\n   */\r\n  // TODO: Rename this, too generic name for a function that only deals with scopes\r\n  static convertToLowerCase(scopes: Array<string>): Array<string> {\r\n    return scopes.map(scope => scope.toLowerCase());\r\n  }\r\n\r\n  /**\r\n   * remove one element from a scope array\r\n   *\r\n   * @param scopes\r\n   * @param scope\r\n   */\r\n  // TODO: Rename this, too generic name for a function that only deals with scopes\r\n  static removeElement(scopes: Array<string>, scope: string): Array<string> {\r\n    return scopes.filter(value => value !== scope);\r\n  }\r\n\r\n  /**\r\n   * Parse the scopes into a formatted scopeList\r\n   * @param scopes\r\n   */\r\n  static parseScope(scopes: Array<string>): string {\r\n    let scopeList: string = \"\";\r\n    if (scopes) {\r\n        for (let i: number = 0; i < scopes.length; ++i) {\r\n        scopeList += (i !== scopes.length - 1) ? scopes[i] + \" \" : scopes[i];\r\n      }\r\n    }\r\n\r\n    return scopeList;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class StringUtils {\r\n    /**\r\n     * Check if a string is empty\r\n     *\r\n     * @param str\r\n     */\r\n    static isEmpty(str: string): boolean {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    }\r\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { IUri } from \"../IUri\";\r\nimport { Constants, SSOTypes } from \"./Constants\";\r\nimport { ServerRequestParameters } from \"../ServerRequestParameters\";\r\nimport { ScopeSet } from \"../ScopeSet\";\r\nimport { StringUtils } from './StringUtils';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class UrlUtils {\r\n\r\n  /**\r\n   * generates the URL with QueryString Parameters\r\n   * @param scopes\r\n   */\r\n  static createNavigateUrl(serverRequestParams: ServerRequestParameters): string {\r\n    const str = this.createNavigationUrlString(serverRequestParams);\r\n    let authEndpoint: string = serverRequestParams.authorityInstance.AuthorizationEndpoint;\r\n    // if the endpoint already has queryparams, lets add to it, otherwise add the first one\r\n    if (authEndpoint.indexOf(\"?\") < 0) {\r\n      authEndpoint += \"?\";\r\n    } else {\r\n      authEndpoint += \"&\";\r\n    }\r\n\r\n    const requestUrl: string = `${authEndpoint}${str.join(\"&\")}`;\r\n    return requestUrl;\r\n  }\r\n\r\n  /**\r\n   * Generate the array of all QueryStringParams to be sent to the server\r\n   * @param scopes\r\n   */\r\n  static createNavigationUrlString(serverRequestParams: ServerRequestParameters): Array<string> {\r\n    let scopes = serverRequestParams.scopes;\r\n\r\n    if (scopes.indexOf(serverRequestParams.clientId) === -1) {\r\n      scopes.push(serverRequestParams.clientId);\r\n    }\r\n    const str: Array<string> = [];\r\n    str.push(\"response_type=\" + serverRequestParams.responseType);\r\n\r\n    this.translateclientIdUsedInScope(scopes, serverRequestParams.clientId);\r\n    str.push(\"scope=\" + encodeURIComponent(ScopeSet.parseScope(scopes)));\r\n    str.push(\"client_id=\" + encodeURIComponent(serverRequestParams.clientId));\r\n    str.push(\"redirect_uri=\" + encodeURIComponent(serverRequestParams.redirectUri));\r\n\r\n    str.push(\"state=\" + encodeURIComponent(serverRequestParams.state));\r\n    str.push(\"nonce=\" + encodeURIComponent(serverRequestParams.nonce));\r\n\r\n    str.push(\"client_info=1\");\r\n    str.push(`x-client-SKU=${serverRequestParams.xClientSku}`);\r\n    str.push(`x-client-Ver=${serverRequestParams.xClientVer}`);\r\n    if (serverRequestParams.promptValue) {\r\n      str.push(\"prompt=\" + encodeURIComponent(serverRequestParams.promptValue));\r\n    }\r\n\r\n    if (serverRequestParams.claimsValue) {\r\n      str.push(\"claims=\" + encodeURIComponent(serverRequestParams.claimsValue));\r\n    }\r\n\r\n    if (serverRequestParams.queryParameters) {\r\n      str.push(serverRequestParams.queryParameters);\r\n    }\r\n\r\n    if (serverRequestParams.extraQueryParameters) {\r\n      str.push(serverRequestParams.extraQueryParameters);\r\n    }\r\n\r\n    str.push(\"client-request-id=\" + encodeURIComponent(serverRequestParams.correlationId));\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * append the required scopes: https://openid.net/specs/openid-connect-basic-1_0.html#Scopes\r\n   * @param scopes\r\n   */\r\n  private static translateclientIdUsedInScope(scopes: Array<string>, clientId: string): void {\r\n    const clientIdIndex: number = scopes.indexOf(clientId);\r\n    if (clientIdIndex >= 0) {\r\n      scopes.splice(clientIdIndex, 1);\r\n      if (scopes.indexOf(\"openid\") === -1) {\r\n        scopes.push(\"openid\");\r\n      }\r\n      if (scopes.indexOf(\"profile\") === -1) {\r\n        scopes.push(\"profile\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns current window URL as redirect uri\r\n   */\r\n  static getDefaultRedirectUri(): string {\r\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n  }\r\n\r\n  /**\r\n   * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n   * @param href The url\r\n   * @param tenantId The tenant id to replace\r\n   */\r\n  static replaceTenantPath(url: string, tenantId: string): string {\r\n    url = url.toLowerCase();\r\n    var urlObject = this.GetUrlComponents(url);\r\n    var pathArray = urlObject.PathSegments;\r\n    if (tenantId && (pathArray.length !== 0 && (pathArray[0] === Constants.common || pathArray[0] === SSOTypes.ORGANIZATIONS))) {\r\n      pathArray[0] = tenantId;\r\n    }\r\n    return this.constructAuthorityUriFromObject(urlObject, pathArray);\r\n  }\r\n\r\n  static constructAuthorityUriFromObject(urlObject: IUri, pathArray: string[]) {\r\n    return this.CanonicalizeUri(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + pathArray.join(\"/\"));\r\n  }\r\n\r\n  /**\r\n   * Parses out the components from a url string.\r\n   * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n   */\r\n  static GetUrlComponents(url: string): IUri {\r\n    if (!url) {\r\n      throw \"Url required\";\r\n    }\r\n\r\n    // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n    var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n\r\n    var match = url.match(regEx);\r\n\r\n    if (!match || match.length < 6) {\r\n      throw \"Valid url required\";\r\n    }\r\n\r\n    let urlComponents = <IUri>{\r\n      Protocol: match[1],\r\n      HostNameAndPort: match[4],\r\n      AbsolutePath: match[5]\r\n    };\r\n\r\n    let pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n    pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\r\n    urlComponents.PathSegments = pathSegments;\r\n    return urlComponents;\r\n  }\r\n\r\n  /**\r\n   * Given a url or path, append a trailing slash if one doesnt exist\r\n   *\r\n   * @param url\r\n   */\r\n  static CanonicalizeUri(url: string): string {\r\n    if (url) {\r\n      url = url.toLowerCase();\r\n    }\r\n\r\n    if (url && !UrlUtils.endsWith(url, \"/\")) {\r\n      url += \"/\";\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  /**\r\n   * Checks to see if the url ends with the suffix\r\n   * Required because we are compiling for es5 instead of es6\r\n   * @param url\r\n   * @param str\r\n   */\r\n  // TODO: Rename this, not clear what it is supposed to do\r\n  static endsWith(url: string, suffix: string): boolean {\r\n    if (!url || !suffix) {\r\n      return false;\r\n    }\r\n\r\n    return url.indexOf(suffix, url.length - suffix.length) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Utils function to remove the login_hint and domain_hint from the i/p extraQueryParameters\r\n   * @param url\r\n   * @param name\r\n   */\r\n  static urlRemoveQueryStringParameter(url: string, name: string): string {\r\n    if (StringUtils.isEmpty(url)) {\r\n      return url;\r\n    }\r\n\r\n    var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n    url = url.replace(regex, \"\");\r\n    // name=value&\r\n    regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n    url = url.replace(regex, \"\");\r\n    // name=value\r\n    regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n    url = url.replace(regex, \"\");\r\n    return url;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * Returns the anchor part(#) of the URL\r\n   */\r\n  static getHashFromUrl(urlStringOrFragment: string): string {\r\n    const hashIndex1 = urlStringOrFragment.indexOf(\"#\");\r\n    const hashIndex2 = urlStringOrFragment.indexOf(\"#/\");\r\n    if (hashIndex2 > -1) {\r\n      return urlStringOrFragment.substring(hashIndex2 + 2);\r\n    } else if (hashIndex1 > -1) {\r\n      return urlStringOrFragment.substring(hashIndex1 + 1);\r\n    }\r\n    return urlStringOrFragment;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class AccessTokenKey {\r\n\r\n  authority: string;\r\n  clientId: string;\r\n  scopes: string;\r\n  homeAccountIdentifier: string;\r\n\r\n  constructor(authority: string, clientId: string, scopes: string, uid: string, utid: string) {\r\n    this.authority = UrlUtils.CanonicalizeUri(authority);\r\n    this.clientId = clientId;\r\n    this.scopes = scopes;\r\n    this.homeAccountIdentifier = CryptoUtils.base64Encode(uid) + \".\" + CryptoUtils.base64Encode(utid);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class AccessTokenValue {\r\n\r\n  accessToken: string;\r\n  idToken: string;\r\n  expiresIn: string;\r\n  homeAccountIdentifier: string;\r\n\r\n  constructor(accessToken: string, idToken: string, expiresIn: string, homeAccountIdentifier: string) {\r\n    this.accessToken = accessToken;\r\n    this.idToken = idToken;\r\n    this.expiresIn = expiresIn;\r\n    this.homeAccountIdentifier = homeAccountIdentifier;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport const AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n\r\n/**\r\n* General error class thrown by the MSAL.js library.\r\n*/\r\nexport class AuthError extends Error {\r\n\r\n    errorCode: string;\r\n    errorMessage: string;\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorMessage);\r\n        Object.setPrototypeOf(this, AuthError.prototype);\r\n\r\n        this.errorCode = errorCode;\r\n        this.errorMessage = errorMessage;\r\n        this.name = \"AuthError\";\r\n    }\r\n\r\n    static createUnexpectedError(errDesc: string) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { AuthError } from \"./AuthError\";\r\nimport { IdToken } from \"../IdToken\";\r\nimport { StringUtils } from \"../utils/StringUtils\";\r\n\r\nexport const ClientAuthErrorMessage = {\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements like authority.\"\r\n    },\r\n    multipleCacheAuthorities: {\r\n        code: \"multiple_authorities\",\r\n        desc: \"Multiple authorities found in the cache. Pass authority in the API overload.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    tokenRenewalError: {\r\n        code: \"token_renewal_error\",\r\n        desc: \"Token renewal operation failed due to timeout.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state_error\",\r\n        desc: \"Invalid state.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch_error\",\r\n        desc: \"Nonce is not matching, Nonce received: \"\r\n    },\r\n    loginProgressError: {\r\n        code: \"login_progress_error\",\r\n        desc: \"Login_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    acquireTokenProgressError: {\r\n        code: \"acquiretoken_progress_error\",\r\n        desc: \"AcquireToken_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    callbackError: {\r\n        code: \"callback_error\",\r\n        desc: \"Error occurred in token received callback function.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required.\"\r\n    },\r\n    userDoesNotExistError: {\r\n        code: \"user_non_existent\",\r\n        desc: \"User object does not exist. Please call a login API.\"\r\n    },\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoNotPopulatedError: {\r\n        code: \"client_info_not_populated_error\",\r\n        desc: \"The service did not populate client_info in the response, Please verify with the service team\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenNotParsed: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    tokenEncodingError: {\r\n        code: \"token_encoding_error\",\r\n        desc: \"The token to be decoded is not encoded correctly.\"\r\n    },\r\n    invalidInteractionType: {\r\n        code: \"invalid_interaction_type\",\r\n        desc: \"The interaction type passed to the handler was incorrect or unknown\"\r\n    }\r\n};\r\n\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nexport class ClientAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"ClientAuthError\";\r\n\r\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\r\n    }\r\n\r\n    static createEndpointResolutionError(errDetail?: string): ClientAuthError {\r\n        let errorMessage = ClientAuthErrorMessage.endpointResolutionError.desc;\r\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\r\n            errorMessage += ` Details: ${errDetail}`;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, errorMessage);\r\n    }\r\n\r\n    static createMultipleMatchingTokensInCacheError(scope: string): ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code,\r\n            `Cache error for scope ${scope}: ${ClientAuthErrorMessage.multipleMatchingTokens.desc}.`);\r\n    }\r\n\r\n    static createMultipleAuthoritiesInCacheError(scope: string): ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleCacheAuthorities.code,\r\n            `Cache error for scope ${scope}: ${ClientAuthErrorMessage.multipleCacheAuthorities.desc}.`);\r\n    }\r\n\r\n    static createPopupWindowError(errDetail?: string): ClientAuthError {\r\n        var errorMessage = ClientAuthErrorMessage.popUpWindowError.desc;\r\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\r\n            errorMessage += ` Details: ${errDetail}`;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    }\r\n\r\n    static createTokenRenewalTimeoutError(): ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRenewalError.code,\r\n            ClientAuthErrorMessage.tokenRenewalError.desc);\r\n    }\r\n\r\n    static createInvalidIdTokenError(idToken: IdToken) : ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code,\r\n            `${ClientAuthErrorMessage.invalidIdToken.desc} Given token: ${idToken}`);\r\n    }\r\n\r\n    //TODO: Is this not a security flaw to send the user the state expected??\r\n    static createInvalidStateError(invalidState: string, actualState: string): ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code,\r\n            `${ClientAuthErrorMessage.invalidStateError.desc} ${invalidState}, state expected : ${actualState}.`);\r\n    }\r\n\r\n    //TODO: Is this not a security flaw to send the user the Nonce expected??\r\n    static createNonceMismatchError(invalidNonce: string, actualNonce: string): ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code,\r\n            `${ClientAuthErrorMessage.nonceMismatchError.desc} ${invalidNonce}, nonce expected : ${actualNonce}.`);\r\n    }\r\n\r\n    static createLoginInProgressError(): ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.loginProgressError.code,\r\n            ClientAuthErrorMessage.loginProgressError.desc);\r\n    }\r\n\r\n    static createAcquireTokenInProgressError(): ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.acquireTokenProgressError.code,\r\n            ClientAuthErrorMessage.acquireTokenProgressError.desc);\r\n    }\r\n\r\n    static createUserCancelledError(): ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userCancelledError.code,\r\n            ClientAuthErrorMessage.userCancelledError.desc);\r\n    }\r\n\r\n    static createErrorInCallbackFunction(errorDesc: string): ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.callbackError.code,\r\n            `${ClientAuthErrorMessage.callbackError.desc} ${errorDesc}.`);\r\n    }\r\n\r\n    static createUserLoginRequiredError() : ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code,\r\n            ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    }\r\n\r\n    static createUserDoesNotExistError() : ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userDoesNotExistError.code,\r\n            ClientAuthErrorMessage.userDoesNotExistError.desc);\r\n    }\r\n\r\n    static createClientInfoDecodingError(caughtError: string) : ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code,\r\n            `${ClientAuthErrorMessage.clientInfoDecodingError.desc} Failed with error: ${caughtError}`);\r\n    }\r\n\r\n    static createClientInfoNotPopulatedError(caughtError: string) : ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoNotPopulatedError.code,\r\n            `${ClientAuthErrorMessage.clientInfoNotPopulatedError.desc} Failed with error: ${caughtError}`);\r\n    }\r\n\r\n    static createIdTokenNullOrEmptyError(invalidRawTokenString: string) : ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code,\r\n            `${ClientAuthErrorMessage.nullOrEmptyIdToken.desc} Raw ID Token Value: ${invalidRawTokenString}`);\r\n    }\r\n\r\n    static createIdTokenParsingError(caughtParsingError: string) : ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenNotParsed.code,\r\n            `${ClientAuthErrorMessage.idTokenNotParsed.desc} Failed with error: ${caughtParsingError}`);\r\n    }\r\n\r\n    static createTokenEncodingError(incorrectlyEncodedToken: string) : ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenEncodingError.code,\r\n            `${ClientAuthErrorMessage.tokenEncodingError.desc} Attempted to decode: ${incorrectlyEncodedToken}`);\r\n    }\r\n\r\n    static createInvalidInteractionTypeError() : ClientAuthError {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidInteractionType.code,\r\n            ClientAuthErrorMessage.invalidInteractionType.desc);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Constants } from \"../utils/Constants\";\r\nimport { ClientAuthError } from \"./ClientAuthError\";\r\nimport { TelemetryOptions } from \"../Configuration\";\r\n\r\nexport const ClientConfigurationErrorMessage = {\r\n    configurationNotSet: {\r\n        code: \"no_config_set\",\r\n        desc: \"Configuration has not been set. Please call the UserAgentApplication constructor with a valid Configuration object.\"\r\n    },\r\n    invalidCacheLocation: {\r\n        code: \"invalid_cache_location\",\r\n        desc: \"The cache location provided is not valid.\"\r\n    },\r\n    noStorageSupported: {\r\n        code: \"browser_storage_not_supported\",\r\n        desc: \"localStorage and sessionStorage are not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    scopesRequired: {\r\n        code: \"scopes_required\",\r\n        desc: \"Scopes are required to obtain an access token.\"\r\n    },\r\n    emptyScopes: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as empty array.\"\r\n    },\r\n    nonArrayScopes: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientScope: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'\",\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please see here for valid authorities: <insert URL here>.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.\"\r\n    },\r\n    authorityUriInvalidPath: {\r\n        code: \"authority_uri_invalid_path\",\r\n        desc: \"Given authority URI is invalid.\"\r\n    },\r\n    unsupportedAuthorityValidation: {\r\n        code: \"unsupported_authority_validation\",\r\n        desc: \"The authority validation is not supported for this authority type.\"\r\n    },\r\n    b2cAuthorityUriInvalidPath: {\r\n        code: \"b2c_authority_uri_invalid_path\",\r\n        desc: \"The given URI for the B2C authority is invalid.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    emptyRequestError: {\r\n        code: \"empty_request_error\",\r\n        desc: \"Request object is required.\"\r\n    },\r\n    telemetryConfigError: {\r\n        code: \"telemetry_config_error\",\r\n        desc: \"Telemetry config is not configured with required values\"\r\n    }\r\n};\r\n\r\n/**\r\n * Error thrown when there is an error in configuration of the .js library.\r\n */\r\nexport class ClientConfigurationError extends ClientAuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\r\n    }\r\n\r\n    static createNoSetConfigurationError(): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.configurationNotSet.code,\r\n            `${ClientConfigurationErrorMessage.configurationNotSet.desc}`);\r\n    }\r\n\r\n    static createInvalidCacheLocationConfigError(givenCacheLocation: string): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCacheLocation.code,\r\n            `${ClientConfigurationErrorMessage.invalidCacheLocation.desc} Provided value: ${givenCacheLocation}. Possible values are: ${Constants.cacheLocationLocal}, ${Constants.cacheLocationSession}.`);\r\n    }\r\n\r\n    static createNoStorageSupportedError() : ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.noStorageSupported.code,\r\n            ClientConfigurationErrorMessage.noStorageSupported.desc);\r\n    }\r\n\r\n    static createRedirectCallbacksNotSetError(): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.noRedirectCallbacksSet.code, ClientConfigurationErrorMessage.noRedirectCallbacksSet.desc);\r\n    }\r\n\r\n    static createInvalidCallbackObjectError(callbackObject: object): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCallbackObject.code,\r\n            `${ClientConfigurationErrorMessage.invalidCallbackObject.desc} Given value for callback function: ${callbackObject}`);\r\n    }\r\n\r\n    static createEmptyScopesArrayError(scopesValue: string): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopes.code,\r\n            `${ClientConfigurationErrorMessage.emptyScopes.desc} Given value: ${scopesValue}.`);\r\n    }\r\n\r\n    static createScopesNonArrayError(scopesValue: string): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopes.code,\r\n            `${ClientConfigurationErrorMessage.nonArrayScopes.desc} Given value: ${scopesValue}.`);\r\n    }\r\n\r\n    static createClientIdSingleScopeError(scopesValue: string): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientScope.code,\r\n            `${ClientConfigurationErrorMessage.clientScope.desc} Given value: ${scopesValue}.`);\r\n    }\r\n\r\n    static createScopesRequiredError(scopesValue: any): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.scopesRequired.code,\r\n            `${ClientConfigurationErrorMessage.scopesRequired.desc} Given value: ${scopesValue}`);\r\n    }\r\n\r\n    static createInvalidPromptError(promptValue: any): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code,\r\n            `${ClientConfigurationErrorMessage.invalidPrompt.desc} Given value: ${promptValue}`);\r\n    }\r\n\r\n    static createClaimsRequestParsingError(claimsRequestParseError: string): ClientConfigurationError {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code,\r\n            `${ClientConfigurationErrorMessage.claimsRequestParsingError.desc} Given value: ${claimsRequestParseError}`);\r\n    }\r\n\r\n    static createEmptyRequestError(): ClientConfigurationError {\r\n        const { code, desc } = ClientConfigurationErrorMessage.emptyRequestError;\r\n        return new ClientConfigurationError(code, desc);\r\n    }\r\n\r\n    static createTelemetryConfigError(config: TelemetryOptions): ClientConfigurationError {\r\n        const { code, desc } = ClientConfigurationErrorMessage.telemetryConfigError;\r\n        const requiredKeys = {\r\n            applicationName: \"string\",\r\n            applicationVersion: \"string\",\r\n            telemetryEmitter: \"function\"\r\n        };\r\n\r\n        const missingKeys = Object.keys(requiredKeys)\r\n            .reduce((keys, key) => {\r\n                return config[key] ? keys : keys.concat([ `${key} (${requiredKeys[key]})` ]);\r\n            }, []);\r\n\r\n        return new ClientConfigurationError(code, `${desc} mising values: ${missingKeys.join(\",\")}`);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Account } from \"./Account\";\r\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\r\nimport { StringDict } from \"./MsalTypes\";\r\n\r\n/**\r\n * @link AuthenticationParameters}AuthenticationParameters\r\n */\r\nexport type AuthenticationParameters = {\r\n    scopes?: Array<string>;\r\n    extraScopesToConsent?: Array<string>;\r\n    prompt?: string;\r\n    extraQueryParameters?: StringDict;\r\n    claimsRequest?: string;\r\n    authority?: string;\r\n    state?: string;\r\n    correlationId?: string;\r\n    account?: Account;\r\n    sid?: string;\r\n    loginHint?: string;\r\n    forceRefresh?: boolean;\r\n};\r\n\r\nexport function validateClaimsRequest(request: AuthenticationParameters) {\r\n    if (!request.claimsRequest) {\r\n        return;\r\n    }\r\n    let claims;\r\n    try {\r\n        claims = JSON.parse(request.claimsRequest);\r\n    } catch (e) {\r\n        throw ClientConfigurationError.createClaimsRequestParsingError(e);\r\n    }\r\n\r\n    // TODO: More validation will be added when the server team tells us how they have actually implemented claims\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Authority } from \"./Authority\";\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { AuthenticationParameters, validateClaimsRequest } from \"./AuthenticationParameters\";\r\nimport { StringDict } from \"./MsalTypes\"\r\nimport { Account } from \"./Account\";\r\nimport { SSOTypes, Constants, PromptState, BlacklistedEQParams, libraryVersion } from \"./utils/Constants\";\r\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n\r\n/**\r\n * Nonce: OIDC Nonce definition: https://openid.net/specs/openid-connect-core-1_0.html#IDToken\r\n * State: OAuth Spec: https://tools.ietf.org/html/rfc6749#section-10.12\r\n * @hidden\r\n */\r\nexport class ServerRequestParameters {\r\n\r\n  authorityInstance: Authority;\r\n  clientId: string;\r\n  scopes: Array<string>;\r\n\r\n  nonce: string;\r\n  state: string;\r\n\r\n  // telemetry information\r\n  xClientVer: string;\r\n  xClientSku: string;\r\n  correlationId: string;\r\n\r\n  responseType: string;\r\n  redirectUri: string;\r\n\r\n  promptValue: string;\r\n  claimsValue: string;\r\n\r\n  queryParameters: string;\r\n  extraQueryParameters: string;\r\n\r\n  public get authority(): string {\r\n    return this.authorityInstance ? this.authorityInstance.CanonicalAuthority : null;\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param authority\r\n   * @param clientId\r\n   * @param scope\r\n   * @param responseType\r\n   * @param redirectUri\r\n   * @param state\r\n   */\r\n  constructor (authority: Authority, clientId: string, scope: Array<string>, responseType: string, redirectUri: string, state: string) {\r\n    this.authorityInstance = authority;\r\n    this.clientId = clientId;\r\n    if (!scope) {\r\n      this.scopes = [clientId];\r\n    } else {\r\n      this.scopes = [ ...scope ];\r\n    }\r\n\r\n    this.nonce = CryptoUtils.createNewGuid();\r\n    this.state = state && !StringUtils.isEmpty(state) ?  CryptoUtils.createNewGuid() + \"|\" + state   : CryptoUtils.createNewGuid();\r\n\r\n    // TODO: Change this to user passed vs generated with the new PR\r\n    this.correlationId = CryptoUtils.createNewGuid();\r\n\r\n    // telemetry information\r\n    this.xClientSku = \"MSAL.JS\";\r\n    this.xClientVer = libraryVersion();\r\n\r\n    this.responseType = responseType;\r\n    this.redirectUri = redirectUri;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * Utility to populate QueryParameters and ExtraQueryParameters to ServerRequestParamerers\r\n   * @param request\r\n   * @param serverAuthenticationRequest\r\n   */\r\n  populateQueryParams(account: Account, request: AuthenticationParameters, adalIdTokenObject?: any): void {\r\n    let queryParameters: StringDict = {};\r\n\r\n    if (request) {\r\n      // add the prompt parameter to serverRequestParameters if passed\r\n      if (request.prompt) {\r\n        this.validatePromptParameter(request.prompt);\r\n        this.promptValue = request.prompt;\r\n      }\r\n\r\n      // Add claims challenge to serverRequestParameters if passed\r\n      if (request.claimsRequest) {\r\n        validateClaimsRequest(request);\r\n        this.claimsValue = request.claimsRequest;\r\n      }\r\n\r\n      // if the developer provides one of these, give preference to developer choice\r\n      if (ServerRequestParameters.isSSOParam(request)) {\r\n        queryParameters = this.constructUnifiedCacheQueryParameter(request, null);\r\n      }\r\n    }\r\n\r\n    if (adalIdTokenObject) {\r\n      queryParameters = this.constructUnifiedCacheQueryParameter(null, adalIdTokenObject);\r\n    }\r\n\r\n    // adds sid/login_hint if not populated; populates domain_req, login_req and domain_hint\r\n    // this.logger.verbose(\"Calling addHint parameters\");\r\n    queryParameters = this.addHintParameters(account, queryParameters);\r\n\r\n    // sanity check for developer passed extraQueryParameters\r\n    let eQParams: StringDict;\r\n    if (request) {\r\n      eQParams = this.sanitizeEQParams(request);\r\n    }\r\n\r\n    // Populate the extraQueryParameters to be sent to the server\r\n    this.queryParameters = ServerRequestParameters.generateQueryParametersString(queryParameters);\r\n    this.extraQueryParameters = ServerRequestParameters.generateQueryParametersString(eQParams);\r\n  }\r\n\r\n  //#region QueryParam helpers\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * Utility to test if valid prompt value is passed in the request\r\n   * @param request\r\n   */\r\n  private validatePromptParameter (prompt: string) {\r\n    if (!([PromptState.LOGIN, PromptState.SELECT_ACCOUNT, PromptState.CONSENT, PromptState.NONE].indexOf(prompt) >= 0)) {\r\n        throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Constructs extraQueryParameters to be sent to the server for the AuthenticationParameters set by the developer\r\n   * in any login() or acquireToken() calls\r\n   * @param idTokenObject\r\n   * @param extraQueryParameters\r\n   * @param sid\r\n   * @param loginHint\r\n   */\r\n  //TODO: check how this behaves when domain_hint only is sent in extraparameters and idToken has no upn.\r\n  private constructUnifiedCacheQueryParameter(request: AuthenticationParameters, idTokenObject: any): StringDict {\r\n\r\n    // preference order: account > sid > login_hint\r\n    let ssoType;\r\n    let ssoData;\r\n    let serverReqParam: StringDict = {};\r\n    // if account info is passed, account.sid > account.login_hint\r\n    if (request) {\r\n      if (request.account) {\r\n        const account: Account = request.account;\r\n        if (account.sid) {\r\n          ssoType = SSOTypes.SID;\r\n          ssoData = account.sid;\r\n        }\r\n        else if (account.userName) {\r\n          ssoType = SSOTypes.LOGIN_HINT;\r\n          ssoData = account.userName;\r\n        }\r\n      }\r\n      // sid from request\r\n      else if (request.sid) {\r\n        ssoType = SSOTypes.SID;\r\n        ssoData = request.sid;\r\n      }\r\n      // loginHint from request\r\n      else if (request.loginHint) {\r\n        ssoType = SSOTypes.LOGIN_HINT;\r\n        ssoData = request.loginHint;\r\n      }\r\n    }\r\n    // adalIdToken retrieved from cache\r\n    else if (idTokenObject) {\r\n      if (idTokenObject.hasOwnProperty(Constants.upn)) {\r\n        ssoType = SSOTypes.ID_TOKEN;\r\n        ssoData = idTokenObject.upn;\r\n      }\r\n      else {\r\n        ssoType = SSOTypes.ORGANIZATIONS;\r\n        ssoData = null;\r\n      }\r\n    }\r\n\r\n    serverReqParam = this.addSSOParameter(ssoType, ssoData);\r\n\r\n    // add the HomeAccountIdentifier info/ domain_hint\r\n    if (request && request.account && request.account.homeAccountIdentifier) {\r\n        serverReqParam = this.addSSOParameter(SSOTypes.HOMEACCOUNT_ID, request.account.homeAccountIdentifier, serverReqParam);\r\n    }\r\n\r\n    return serverReqParam;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\r\n   * domain_hint can be one of users/organizations which when added skips the email based discovery process of the user\r\n   * domain_req utid received as part of the clientInfo\r\n   * login_req uid received as part of clientInfo\r\n   * Also does a sanity check for extraQueryParameters passed by the user to ensure no repeat queryParameters\r\n   *\r\n   * @param {@link Account} account - Account for which the token is requested\r\n   * @param queryparams\r\n   * @param {@link ServerRequestParameters}\r\n   * @ignore\r\n   */\r\n  private addHintParameters(account: Account, qParams: StringDict): StringDict {\r\n    // This is a final check for all queryParams added so far; preference order: sid > login_hint\r\n    // sid cannot be passed along with login_hint or domain_hint, hence we check both are not populated yet in queryParameters\r\n    if (account && !qParams[SSOTypes.SID]) {\r\n      // sid - populate only if login_hint is not already populated and the account has sid\r\n      const populateSID = !qParams[SSOTypes.LOGIN_HINT] && account.sid && this.promptValue === PromptState.NONE;\r\n      if (populateSID) {\r\n          qParams = this.addSSOParameter(SSOTypes.SID, account.sid, qParams);\r\n      }\r\n      // login_hint - account.userName\r\n      else {\r\n        const populateLoginHint = !qParams[SSOTypes.LOGIN_HINT] && account.userName && !StringUtils.isEmpty(account.userName);\r\n        if (populateLoginHint) {\r\n          qParams = this.addSSOParameter(SSOTypes.LOGIN_HINT, account.userName, qParams);\r\n        }\r\n      }\r\n\r\n      const populateReqParams = !qParams[SSOTypes.DOMAIN_REQ] && !qParams[SSOTypes.LOGIN_REQ];\r\n      if (populateReqParams) {\r\n        qParams = this.addSSOParameter(SSOTypes.HOMEACCOUNT_ID, account.homeAccountIdentifier, qParams);\r\n      }\r\n    }\r\n\r\n    return qParams;\r\n  }\r\n\r\n  /**\r\n   * Add SID to extraQueryParameters\r\n   * @param sid\r\n   */\r\n  private addSSOParameter(ssoType: string, ssoData: string, ssoParam?: StringDict): StringDict {\r\n    if (!ssoParam) {\r\n      ssoParam = {};\r\n    }\r\n\r\n    if (!ssoData) {\r\n        return ssoParam;\r\n    }\r\n\r\n    switch (ssoType) {\r\n      case SSOTypes.SID: {\r\n        ssoParam[SSOTypes.SID] = ssoData;\r\n        break;\r\n      }\r\n      case SSOTypes.ID_TOKEN: {\r\n        ssoParam[SSOTypes.LOGIN_HINT] = ssoData;\r\n        ssoParam[SSOTypes.DOMAIN_HINT] = SSOTypes.ORGANIZATIONS;\r\n        break;\r\n      }\r\n      case SSOTypes.LOGIN_HINT: {\r\n        ssoParam[SSOTypes.LOGIN_HINT] = ssoData;\r\n        break;\r\n      }\r\n      case SSOTypes.ORGANIZATIONS: {\r\n        ssoParam[SSOTypes.DOMAIN_HINT] = SSOTypes.ORGANIZATIONS;\r\n        break;\r\n      }\r\n      case SSOTypes.CONSUMERS: {\r\n        ssoParam[SSOTypes.DOMAIN_HINT] = SSOTypes.CONSUMERS;\r\n        break;\r\n      }\r\n      case SSOTypes.HOMEACCOUNT_ID: {\r\n        let homeAccountId = ssoData.split(\".\");\r\n        const uid = CryptoUtils.base64Decode(homeAccountId[0]);\r\n        const utid = CryptoUtils.base64Decode(homeAccountId[1]);\r\n\r\n        // TODO: domain_req and login_req are not needed according to eSTS team\r\n        ssoParam[SSOTypes.LOGIN_REQ] = uid;\r\n        ssoParam[SSOTypes.DOMAIN_REQ] = utid;\r\n\r\n        if (utid === Constants.consumersUtid) {\r\n            ssoParam[SSOTypes.DOMAIN_HINT] = SSOTypes.CONSUMERS;\r\n        }\r\n        else {\r\n            ssoParam[SSOTypes.DOMAIN_HINT] = SSOTypes.ORGANIZATIONS;\r\n        }\r\n        break;\r\n      }\r\n      case SSOTypes.LOGIN_REQ: {\r\n        ssoParam[SSOTypes.LOGIN_REQ] = ssoData;\r\n        break;\r\n      }\r\n      case SSOTypes.DOMAIN_REQ: {\r\n        ssoParam[SSOTypes.DOMAIN_REQ] = ssoData;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return ssoParam;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n   * @param request\r\n   */\r\n  private sanitizeEQParams(request: AuthenticationParameters) : StringDict {\r\n    let eQParams : StringDict = request.extraQueryParameters;\r\n    if (!eQParams) {\r\n      return null;\r\n    }\r\n    if (request.claimsRequest) {\r\n      // this.logger.warning(\"Removed duplicate claims from extraQueryParameters. Please use either the claimsRequest field OR pass as extraQueryParameter - not both.\");\r\n      delete eQParams[Constants.claims];\r\n    }\r\n    BlacklistedEQParams.forEach(param => {\r\n      if (eQParams[param]) {\r\n        // this.logger.warning(\"Removed duplicate \" + param + \" from extraQueryParameters. Please use the \" + param + \" field in request object.\");\r\n        delete eQParams[param];\r\n      }\r\n    });\r\n    return eQParams;\r\n  }\r\n\r\n  /**\r\n   * Utility to generate a QueryParameterString from a Key-Value mapping of extraQueryParameters passed\r\n   * @param extraQueryParameters\r\n   */\r\n  static generateQueryParametersString(queryParameters: StringDict): string {\r\n    let paramsString: string = null;\r\n\r\n    if (queryParameters) {\r\n      Object.keys(queryParameters).forEach((key: string) => {\r\n        if (paramsString == null) {\r\n          paramsString = `${key}=${encodeURIComponent(queryParameters[key])}`;\r\n        }\r\n        else {\r\n          paramsString += `&${key}=${encodeURIComponent(queryParameters[key])}`;\r\n        }\r\n     });\r\n    }\r\n\r\n    return paramsString;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  /**\r\n   * Check to see if there are SSO params set in the Request\r\n   * @param request\r\n   */\r\n  static isSSOParam(request: AuthenticationParameters) {\r\n      return request && (request.account || request.sid || request.loginHint);\r\n  }\r\n}\r\n","﻿// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { ClientAuthError } from \"./error/ClientAuthError\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class ClientInfo {\r\n\r\n  private _uid: string;\r\n  get uid(): string {\r\n    return this._uid ? this._uid : \"\";\r\n  }\r\n\r\n  set uid(uid: string) {\r\n    this._uid = uid;\r\n  }\r\n\r\n  private _utid: string;\r\n  get utid(): string {\r\n    return this._utid ? this._utid : \"\";\r\n  }\r\n\r\n  set utid(utid: string) {\r\n    this._utid = utid;\r\n  }\r\n\r\n  constructor(rawClientInfo: string) {\r\n    if (!rawClientInfo || StringUtils.isEmpty(rawClientInfo)) {\r\n      this.uid = \"\";\r\n      this.utid = \"\";\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedClientInfo: string = CryptoUtils.base64Decode(rawClientInfo);\r\n      const clientInfo: ClientInfo = <ClientInfo>JSON.parse(decodedClientInfo);\r\n      if (clientInfo) {\r\n        if (clientInfo.hasOwnProperty(\"uid\")) {\r\n          this.uid = clientInfo.uid;\r\n        }\r\n\r\n        if (clientInfo.hasOwnProperty(\"utid\")) {\r\n          this.utid = clientInfo.utid;\r\n        }\r\n      }\r\n    } catch (e) {\r\n      throw ClientAuthError.createClientInfoDecodingError(e);\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { CryptoUtils } from \"./CryptoUtils\";\r\nimport { StringUtils } from './StringUtils';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class TokenUtils {\r\n\r\n  /**\r\n   * decode a JWT\r\n   *\r\n   * @param jwtToken\r\n   */\r\n  static decodeJwt(jwtToken: string): any {\r\n    if (StringUtils.isEmpty(jwtToken)) {\r\n      return null;\r\n    }\r\n    const idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n    const matches = idTokenPartsRegex.exec(jwtToken);\r\n    if (!matches || matches.length < 4) {\r\n      //this._requestContext.logger.warn(\"The returned id_token is not parseable.\");\r\n      return null;\r\n    }\r\n    const crackedToken = {\r\n      header: matches[1],\r\n      JWSPayload: matches[2],\r\n      JWSSig: matches[3]\r\n    };\r\n    return crackedToken;\r\n  }\r\n\r\n  /**\r\n   * Extract IdToken by decoding the RAWIdToken\r\n   *\r\n   * @param encodedIdToken\r\n   */\r\n  static extractIdToken(encodedIdToken: string): any {\r\n    // id token will be decoded to get the username\r\n    const decodedToken = this.decodeJwt(encodedIdToken);\r\n    if (!decodedToken) {\r\n      return null;\r\n    }\r\n    try {\r\n      const base64IdToken = decodedToken.JWSPayload;\r\n      const base64Decoded = CryptoUtils.base64Decode(base64IdToken);\r\n      if (!base64Decoded) {\r\n        //this._requestContext.logger.info(\"The returned id_token could not be base64 url safe decoded.\");\r\n        return null;\r\n      }\r\n      // ECMA script has JSON built-in support\r\n      return JSON.parse(base64Decoded);\r\n    } catch (err) {\r\n      //this._requestContext.logger.error(\"The returned id_token could not be decoded\" + err);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ClientAuthError } from \"./error/ClientAuthError\";\r\nimport { TokenUtils } from \"./utils/TokenUtils\";\r\nimport { StringDict } from \"./MsalTypes\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class IdToken {\r\n\r\n  issuer: string;\r\n  objectId: string;\r\n  subject: string;\r\n  tenantId: string;\r\n  version: string;\r\n  preferredName: string;\r\n  name: string;\r\n  homeObjectId: string;\r\n  nonce: string;\r\n  expiration: string;\r\n  rawIdToken: string;\r\n  claims: StringDict;\r\n  sid: string;\r\n  /* tslint:disable:no-string-literal */\r\n  constructor(rawIdToken: string) {\r\n    if (StringUtils.isEmpty(rawIdToken)) {\r\n      throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n    }\r\n    try {\r\n      this.rawIdToken = rawIdToken;\r\n      this.claims = TokenUtils.extractIdToken(rawIdToken);\r\n      if (this.claims) {\r\n        if (this.claims.hasOwnProperty(\"iss\")) {\r\n          this.issuer = this.claims[\"iss\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"oid\")) {\r\n            this.objectId = this.claims[\"oid\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"sub\")) {\r\n          this.subject = this.claims[\"sub\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"tid\")) {\r\n          this.tenantId = this.claims[\"tid\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"ver\")) {\r\n          this.version = this.claims[\"ver\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"preferred_username\")) {\r\n          this.preferredName = this.claims[\"preferred_username\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"name\")) {\r\n          this.name = this.claims[\"name\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"nonce\")) {\r\n          this.nonce = this.claims[\"nonce\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"exp\")) {\r\n          this.expiration = this.claims[\"exp\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"home_oid\")) {\r\n            this.homeObjectId = this.claims[\"home_oid\"];\r\n        }\r\n\r\n        if (this.claims.hasOwnProperty(\"sid\")) {\r\n            this.sid = this.claims[\"sid\"];\r\n        }\r\n      /* tslint:enable:no-string-literal */\r\n      }\r\n    } catch (e) {\r\n      // TODO: This error here won't really every be thrown, since extractIdToken() returns null if the decodeJwt() fails.\r\n      // Need to add better error handling here to account for being unable to decode jwts.\r\n      throw ClientAuthError.createIdTokenParsingError(e);\r\n    }\r\n  }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { AccessTokenKey } from \"./AccessTokenKey\";\r\nimport { AccessTokenValue } from \"./AccessTokenValue\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class AccessTokenCacheItem {\r\n\r\n  key: AccessTokenKey;\r\n  value: AccessTokenValue;\r\n\r\n  constructor(key: AccessTokenKey, value: AccessTokenValue) {\r\n    this.key = key;\r\n    this.value = value;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Constants, CacheKeys } from \"./utils/Constants\";\r\nimport { AccessTokenCacheItem } from \"./AccessTokenCacheItem\";\r\nimport { CacheLocation } from \"./Configuration\";\r\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class Storage {// Singleton\r\n\r\n  private static instance: Storage;\r\n  private localStorageSupported: boolean;\r\n  private sessionStorageSupported: boolean;\r\n  private cacheLocation: CacheLocation;\r\n\r\n  constructor(cacheLocation: CacheLocation) {\r\n    if (Storage.instance) {\r\n      return Storage.instance;\r\n    }\r\n\r\n    this.cacheLocation = cacheLocation;\r\n    this.localStorageSupported = typeof window[this.cacheLocation] !== \"undefined\" && window[this.cacheLocation] != null;\r\n    this.sessionStorageSupported = typeof window[cacheLocation] !== \"undefined\" && window[cacheLocation] != null;\r\n    Storage.instance = this;\r\n    if (!this.localStorageSupported && !this.sessionStorageSupported) {\r\n      throw ClientConfigurationError.createNoStorageSupportedError();\r\n    }\r\n\r\n    return Storage.instance;\r\n  }\r\n\r\n    // add value to storage\r\n    setItem(key: string, value: string, enableCookieStorage?: boolean): void {\r\n        if (window[this.cacheLocation]) {\r\n            window[this.cacheLocation].setItem(key, value);\r\n        }\r\n        if (enableCookieStorage) {\r\n            this.setItemCookie(key, value);\r\n        }\r\n    }\r\n\r\n    // get one item by key from storage\r\n    getItem(key: string, enableCookieStorage?: boolean): string {\r\n        if (enableCookieStorage && this.getItemCookie(key)) {\r\n            return this.getItemCookie(key);\r\n        }\r\n        if (window[this.cacheLocation]) {\r\n            return window[this.cacheLocation].getItem(key);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // remove value from storage\r\n    removeItem(key: string): void {\r\n        if (window[this.cacheLocation]) {\r\n            return window[this.cacheLocation].removeItem(key);\r\n        }\r\n    }\r\n\r\n    // clear storage (remove all items from it)\r\n    clear(): void {\r\n        if (window[this.cacheLocation]) {\r\n            return window[this.cacheLocation].clear();\r\n        }\r\n    }\r\n\r\n    getAllAccessTokens(clientId: string, homeAccountIdentifier: string): Array<AccessTokenCacheItem> {\r\n        const results: Array<AccessTokenCacheItem> = [];\r\n        let accessTokenCacheItem: AccessTokenCacheItem;\r\n        const storage = window[this.cacheLocation];\r\n        if (storage) {\r\n            let key: string;\r\n            for (key in storage) {\r\n                if (storage.hasOwnProperty(key)) {\r\n                    if (key.match(clientId) && key.match(homeAccountIdentifier)) {\r\n                        const value = this.getItem(key);\r\n                        if (value) {\r\n                            accessTokenCacheItem = new AccessTokenCacheItem(JSON.parse(key), JSON.parse(value));\r\n                            results.push(accessTokenCacheItem);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    removeAcquireTokenEntries(state?: string): void {\r\n        const storage = window[this.cacheLocation];\r\n        if (storage) {\r\n            let key: string;\r\n            for (key in storage) {\r\n                if (storage.hasOwnProperty(key)) {\r\n                    if ((key.indexOf(CacheKeys.AUTHORITY) !== -1 || key.indexOf(CacheKeys.ACQUIRE_TOKEN_ACCOUNT) !== 1) && (!state || key.indexOf(state) !== -1)) {\r\n                        const splitKey = key.split(Constants.resourceDelimiter);\r\n                        let state;\r\n                        if (splitKey.length > 1) {\r\n                            state = splitKey[1];\r\n                        }\r\n                        if (state && !this.tokenRenewalInProgress(state)) {\r\n                            this.removeItem(key);\r\n                            this.removeItem(Constants.renewStatus + state);\r\n                            this.removeItem(Constants.stateLogin);\r\n                            this.removeItem(Constants.stateAcquireToken);\r\n                            this.setItemCookie(key, \"\", -1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.clearCookie();\r\n    }\r\n\r\n    private tokenRenewalInProgress(stateValue: string): boolean {\r\n        const storage = window[this.cacheLocation];\r\n        const renewStatus = storage[Constants.renewStatus + stateValue];\r\n        return !(!renewStatus || renewStatus !== Constants.tokenRenewStatusInProgress);\r\n    }\r\n\r\n    resetCacheItems(): void {\r\n        const storage = window[this.cacheLocation];\r\n        if (storage) {\r\n            let key: string;\r\n            for (key in storage) {\r\n                if (storage.hasOwnProperty(key)) {\r\n                    if (key.indexOf(Constants.msal) !== -1) {\r\n                        this.removeItem(key);\r\n                    }\r\n                }\r\n            }\r\n            this.removeAcquireTokenEntries();\r\n        }\r\n    }\r\n\r\n    setItemCookie(cName: string, cValue: string, expires?: number): void {\r\n        let cookieStr = cName + \"=\" + cValue + \";\";\r\n        if (expires) {\r\n            const expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += \"expires=\" + expireTime + \";\";\r\n        }\r\n\r\n        document.cookie = cookieStr;\r\n    }\r\n\r\n    getItemCookie(cName: string): string {\r\n        const name = cName + \"=\";\r\n        const ca = document.cookie.split(\";\");\r\n        for (let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) === \" \") {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getCookieExpirationTime(cookieLifeDays: number): string {\r\n        const today = new Date();\r\n        const expr = new Date(today.getTime() + cookieLifeDays * 24 * 60 * 60 * 1000);\r\n        return expr.toUTCString();\r\n    }\r\n\r\n    clearCookie(): void {\r\n        this.setItemCookie(Constants.nonceIdToken, \"\", -1);\r\n        this.setItemCookie(Constants.stateLogin, \"\", -1);\r\n        this.setItemCookie(Constants.loginRequest, \"\", -1);\r\n        this.setItemCookie(Constants.stateAcquireToken, \"\", -1);\r\n    }\r\n\r\n    /**\r\n     * Create acquireTokenAccountKey to cache account object\r\n     * @param accountId\r\n     * @param state\r\n     */\r\n    static generateAcquireTokenAccountKey(accountId: any, state: string): string {\r\n        return CacheKeys.ACQUIRE_TOKEN_ACCOUNT + Constants.resourceDelimiter +\r\n            `${accountId}` + Constants.resourceDelimiter  + `${state}`;\r\n    }\r\n\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    static generateAuthorityKey(state: string): string {\r\n        return CacheKeys.AUTHORITY + Constants.resourceDelimiter + `${state}`;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ClientInfo } from \"./ClientInfo\";\r\nimport { IdToken } from \"./IdToken\";\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\nimport { StringDict } from \"./MsalTypes\";\r\n\r\n/**\r\n * accountIdentifier       combination of idToken.uid and idToken.utid\r\n * homeAccountIdentifier   combination of clientInfo.uid and clientInfo.utid\r\n * userName                idToken.preferred_username\r\n * name                    idToken.name\r\n * idToken                 idToken\r\n * sid                     idToken.sid - session identifier\r\n * environment             idtoken.issuer (the authority that issues the token)\r\n */\r\nexport class Account {\r\n\r\n    accountIdentifier: string;\r\n    homeAccountIdentifier: string;\r\n    userName: string;\r\n    name: string;\r\n    idToken: StringDict; // will be deprecated soon\r\n    idTokenClaims: StringDict;\r\n    sid: string;\r\n    environment: string;\r\n\r\n    /**\r\n     * Creates an Account Object\r\n     * @praram accountIdentifier\r\n     * @param homeAccountIdentifier\r\n     * @param userName\r\n     * @param name\r\n     * @param idToken\r\n     * @param sid\r\n     * @param environment\r\n     */\r\n    constructor(accountIdentifier: string, homeAccountIdentifier: string, userName: string, name: string, idTokenClaims: StringDict, sid: string,  environment: string) {\r\n      this.accountIdentifier = accountIdentifier;\r\n      this.homeAccountIdentifier = homeAccountIdentifier;\r\n      this.userName = userName;\r\n      this.name = name;\r\n      // will be deprecated soon\r\n      this.idToken = idTokenClaims;\r\n      this.idTokenClaims = idTokenClaims;\r\n      this.sid = sid;\r\n      this.environment = environment;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * @param idToken\r\n     * @param clientInfo\r\n     */\r\n    static createAccount(idToken: IdToken, clientInfo: ClientInfo): Account {\r\n\r\n        // create accountIdentifier\r\n        const accountIdentifier: string = idToken.objectId ||  idToken.subject;\r\n\r\n        // create homeAccountIdentifier\r\n        const uid: string = clientInfo ? clientInfo.uid : \"\";\r\n        const utid: string = clientInfo ? clientInfo.utid : \"\";\r\n\r\n        let homeAccountIdentifier: string;\r\n        if (!StringUtils.isEmpty(uid) && !StringUtils.isEmpty(utid)) {\r\n            homeAccountIdentifier = CryptoUtils.base64Encode(uid) + \".\" + CryptoUtils.base64Encode(utid);\r\n        }\r\n        return new Account(accountIdentifier, homeAccountIdentifier, idToken.preferredName, idToken.name, idToken.claims, idToken.sid, idToken.issuer);\r\n    }\r\n\r\n    /**\r\n     * Utils function to compare two Account objects - used to check if the same user account is logged in\r\n     *\r\n     * @param a1: Account object\r\n     * @param a2: Account object\r\n     */\r\n    static compareAccounts(a1: Account, a2: Account): boolean {\r\n        if (!a1 || !a2) {\r\n            return false;\r\n        }\r\n        if (a1.homeAccountIdentifier && a2.homeAccountIdentifier) {\r\n        if (a1.homeAccountIdentifier === a2.homeAccountIdentifier) {\r\n            return true;\r\n        }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class TimeUtils {\r\n    /**\r\n     * Returns time in seconds for expiration based on string value passed in.\r\n     *\r\n     * @param expiresIn\r\n     */\r\n    static parseExpiresIn(expiresIn: string): number {\r\n        // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\r\n        if (!expiresIn) {\r\n        expiresIn = \"3599\";\r\n        }\r\n        return parseInt(expiresIn, 10);\r\n    }\r\n\r\n    /**\r\n     * return the current time in Unix time. Date.getTime() returns in milliseconds.\r\n     */\r\n    static now(): number {\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    }\r\n}\r\n","import { AuthResponse } from \"../AuthResponse\";\r\nimport { IdToken } from \"../IdToken\";\r\n\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class ResponseUtils {\r\n\r\n    static setResponseIdToken(originalResponse: AuthResponse, idTokenObj: IdToken) : AuthResponse {\r\n        if (!originalResponse) {\r\n            return null;\r\n        } else if (!idTokenObj) {\r\n            return originalResponse;\r\n        }\r\n\r\n        let exp = Number(idTokenObj.expiration);\r\n        if (exp && !originalResponse.expiresOn) {\r\n            originalResponse.expiresOn = new Date(exp * 1000);\r\n        }\r\n    \r\n        return {\r\n          ...originalResponse,\r\n          idToken: idTokenObj,\r\n          idTokenClaims: idTokenObj.claims,\r\n          uniqueId: idTokenObj.objectId || idTokenObj.subject,\r\n          tenantId: idTokenObj.tenantId,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * XHR client for JSON endpoints\r\n * https://www.npmjs.com/package/async-promise\r\n * @hidden\r\n */\r\nexport class XhrClient {\r\n  public sendRequestAsync(url: string, method: string, enableCaching?: boolean): Promise<any> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(method, url, /*async: */ true);\r\n      if (enableCaching) {\r\n        // TODO: (shivb) ensure that this can be cached\r\n        // xhr.setRequestHeader(\"Cache-Control\", \"Public\");\r\n      }\r\n\r\n      xhr.onload = (ev) => {\r\n          if (xhr.status < 200 || xhr.status >= 300) {\r\n              reject(this.handleError(xhr.responseText));\r\n          }\r\n\r\n          try {\r\n              var jsonResponse = JSON.parse(xhr.responseText);\r\n          } catch (e) {\r\n              reject(this.handleError(xhr.responseText));\r\n          }\r\n\r\n          resolve(jsonResponse);\r\n      };\r\n\r\n      xhr.onerror = (ev) => {\r\n        reject(xhr.status);\r\n      };\r\n\r\n      if (method === \"GET\") {\r\n        xhr.send();\r\n      }\r\n      else {\r\n        throw \"not implemented\";\r\n      }\r\n    });\r\n  }\r\n\r\n  protected handleError(responseText: string): any {\r\n    var jsonResponse;\r\n    try {\r\n      jsonResponse = JSON.parse(responseText);\r\n      if (jsonResponse.error) {\r\n          return jsonResponse.error;\r\n      } else {\r\n          throw responseText;\r\n      }\r\n    } catch (e) {\r\n      return responseText;\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { IUri } from \"./IUri\";\r\nimport { ITenantDiscoveryResponse } from \"./ITenantDiscoveryResponse\";\r\nimport { ClientConfigurationErrorMessage } from \"./error/ClientConfigurationError\";\r\nimport { XhrClient } from \"./XHRClient\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport enum AuthorityType {\r\n  Aad,\r\n  Adfs,\r\n  B2C\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport abstract class Authority {\r\n  constructor(authority: string, validateAuthority: boolean) {\r\n    this.IsValidationEnabled = validateAuthority;\r\n    this.CanonicalAuthority = authority;\r\n\r\n    this.validateAsUri();\r\n  }\r\n\r\n  public abstract get AuthorityType(): AuthorityType;\r\n\r\n  public IsValidationEnabled: boolean;\r\n\r\n  public get Tenant(): string {\r\n    return this.CanonicalAuthorityUrlComponents.PathSegments[0];\r\n  }\r\n\r\n  private tenantDiscoveryResponse: ITenantDiscoveryResponse;\r\n\r\n  public get AuthorizationEndpoint(): string {\r\n    this.validateResolved();\r\n    return this.tenantDiscoveryResponse.AuthorizationEndpoint.replace(\"{tenant}\", this.Tenant);\r\n  }\r\n\r\n  public get EndSessionEndpoint(): string {\r\n    this.validateResolved();\r\n    return this.tenantDiscoveryResponse.EndSessionEndpoint.replace(\"{tenant}\", this.Tenant);\r\n  }\r\n\r\n  public get SelfSignedJwtAudience(): string {\r\n    this.validateResolved();\r\n    return this.tenantDiscoveryResponse.Issuer.replace(\"{tenant}\", this.Tenant);\r\n  }\r\n\r\n  private validateResolved() {\r\n    if (!this.tenantDiscoveryResponse) {\r\n      throw \"Please call ResolveEndpointsAsync first\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A URL that is the authority set by the developer\r\n   */\r\n  public get CanonicalAuthority(): string {\r\n    return this.canonicalAuthority;\r\n  }\r\n\r\n  public set CanonicalAuthority(url: string) {\r\n    this.canonicalAuthority = UrlUtils.CanonicalizeUri(url);\r\n    this.canonicalAuthorityUrlComponents = null;\r\n  }\r\n\r\n  private canonicalAuthority: string;\r\n  private canonicalAuthorityUrlComponents: IUri;\r\n\r\n  public get CanonicalAuthorityUrlComponents(): IUri {\r\n    if (!this.canonicalAuthorityUrlComponents) {\r\n      this.canonicalAuthorityUrlComponents = UrlUtils.GetUrlComponents(this.CanonicalAuthority);\r\n    }\r\n\r\n    return this.canonicalAuthorityUrlComponents;\r\n  }\r\n\r\n  /**\r\n   * // http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\r\n   */\r\n  protected get DefaultOpenIdConfigurationEndpoint(): string {\r\n    return `${this.CanonicalAuthority}v2.0/.well-known/openid-configuration`;\r\n  }\r\n\r\n  /**\r\n   * Given a string, validate that it is of the form https://domain/path\r\n   */\r\n  private validateAsUri() {\r\n    let components;\r\n    try {\r\n      components = this.CanonicalAuthorityUrlComponents;\r\n    } catch (e) {\r\n      throw ClientConfigurationErrorMessage.invalidAuthorityType;\r\n    }\r\n\r\n    if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n      throw ClientConfigurationErrorMessage.authorityUriInsecure;\r\n    }\r\n\r\n    if (!components.PathSegments || components.PathSegments.length < 1) {\r\n      throw ClientConfigurationErrorMessage.authorityUriInvalidPath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calls the OIDC endpoint and returns the response\r\n   */\r\n  private DiscoverEndpoints(openIdConfigurationEndpoint: string): Promise<ITenantDiscoveryResponse> {\r\n    const client = new XhrClient();\r\n    return client.sendRequestAsync(openIdConfigurationEndpoint, \"GET\", /*enableCaching: */ true)\r\n        .then((response: any) => {\r\n            return <ITenantDiscoveryResponse>{\r\n                AuthorizationEndpoint: response.authorization_endpoint,\r\n                EndSessionEndpoint: response.end_session_endpoint,\r\n                Issuer: response.issuer\r\n            };\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Returns a promise.\r\n   * Checks to see if the authority is in the cache\r\n   * Discover endpoints via openid-configuration\r\n   * If successful, caches the endpoint for later use in OIDC\r\n   */\r\n  public resolveEndpointsAsync(): Promise<Authority> {\r\n    let openIdConfigurationEndpoint = \"\";\r\n    return this.GetOpenIdConfigurationEndpointAsync().then(openIdConfigurationEndpointResponse => {\r\n      openIdConfigurationEndpoint = openIdConfigurationEndpointResponse;\r\n      return this.DiscoverEndpoints(openIdConfigurationEndpoint);\r\n    }).then((tenantDiscoveryResponse: ITenantDiscoveryResponse) => {\r\n      this.tenantDiscoveryResponse = tenantDiscoveryResponse;\r\n      return this;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns a promise with the TenantDiscoveryEndpoint\r\n   */\r\n  public abstract GetOpenIdConfigurationEndpointAsync(): Promise<string>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Authority, AuthorityType } from \"./Authority\";\r\nimport { XhrClient } from \"./XHRClient\";\r\nimport { AADTrustedHostList } from \"./utils/Constants\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class AadAuthority extends Authority {\r\n  private static readonly AadInstanceDiscoveryEndpoint: string = \"https://login.microsoftonline.com/common/discovery/instance\";\r\n\r\n  private get AadInstanceDiscoveryEndpointUrl(): string {\r\n      return `${AadAuthority.AadInstanceDiscoveryEndpoint}?api-version=1.0&authorization_endpoint=${this.CanonicalAuthority}oauth2/v2.0/authorize`;\r\n  }\r\n\r\n  public constructor(authority: string, validateAuthority: boolean) {\r\n    super(authority, validateAuthority);\r\n  }\r\n\r\n  public get AuthorityType(): AuthorityType {\r\n    return AuthorityType.Aad;\r\n  }\r\n\r\n  /**\r\n   * Returns a promise which resolves to the OIDC endpoint\r\n   * Only responds with the endpoint\r\n   */\r\n  public GetOpenIdConfigurationEndpointAsync(): Promise<string> {\r\n      const resultPromise: Promise<string> = new Promise<string>((resolve, reject) =>\r\n      resolve(this.DefaultOpenIdConfigurationEndpoint));\r\n\r\n    if (!this.IsValidationEnabled) {\r\n      return resultPromise;\r\n    }\r\n\r\n    let host: string = this.CanonicalAuthorityUrlComponents.HostNameAndPort;\r\n    if (this.IsInTrustedHostList(host)) {\r\n      return resultPromise;\r\n    }\r\n\r\n    let client: XhrClient = new XhrClient();\r\n\r\n    return client.sendRequestAsync(this.AadInstanceDiscoveryEndpointUrl, \"GET\", true)\r\n      .then((response) => {\r\n        return response.tenant_discovery_endpoint;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Checks to see if the host is in a list of trusted hosts\r\n   * @param {string} The host to look up\r\n   */\r\n  public IsInTrustedHostList(host: string): boolean {\r\n    return AADTrustedHostList[host.toLowerCase()];\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { AadAuthority } from \"./AadAuthority\";\r\nimport { AuthorityType } from \"./Authority\";\r\nimport { ClientConfigurationErrorMessage } from \"./error/ClientConfigurationError\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class B2cAuthority extends AadAuthority {\r\n  public static B2C_PREFIX: String = \"tfp\";\r\n  public constructor(authority: string, validateAuthority: boolean) {\r\n    super(authority, validateAuthority);\r\n    const urlComponents = UrlUtils.GetUrlComponents(authority);\r\n\r\n    const pathSegments = urlComponents.PathSegments;\r\n    if (pathSegments.length < 3) {\r\n        throw ClientConfigurationErrorMessage.b2cAuthorityUriInvalidPath;\r\n    }\r\n\r\n    this.CanonicalAuthority = `https://${urlComponents.HostNameAndPort}/${pathSegments[0]}/${pathSegments[1]}/${pathSegments[2]}/`;\r\n  }\r\n\r\n  public get AuthorityType(): AuthorityType {\r\n    return AuthorityType.B2C;\r\n  }\r\n\r\n  /**\r\n   * Returns a promise with the TenantDiscoveryEndpoint\r\n   */\r\n  public GetOpenIdConfigurationEndpointAsync(): Promise<string> {\r\n    const resultPromise = new Promise<string>((resolve, reject) =>\r\n      resolve(this.DefaultOpenIdConfigurationEndpoint));\r\n\r\n    if (!this.IsValidationEnabled) {\r\n      return resultPromise;\r\n    }\r\n\r\n    if (this.IsInTrustedHostList(this.CanonicalAuthorityUrlComponents.HostNameAndPort)) {\r\n      return resultPromise;\r\n    }\r\n\r\n    return new Promise<string>((resolve, reject) =>\r\n      reject(ClientConfigurationErrorMessage.unsupportedAuthorityValidation));\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * @hidden\r\n */\r\nimport { AadAuthority } from \"./AadAuthority\";\r\nimport { B2cAuthority } from \"./B2cAuthority\";\r\nimport { Authority, AuthorityType } from \"./Authority\";\r\nimport { ClientConfigurationErrorMessage } from \"./error/ClientConfigurationError\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n\r\nexport class AuthorityFactory {\r\n    /**\r\n    * Parse the url and determine the type of authority\r\n    */\r\n    private static DetectAuthorityFromUrl(authorityUrl: string): AuthorityType {\r\n        authorityUrl = UrlUtils.CanonicalizeUri(authorityUrl);\r\n        const components = UrlUtils.GetUrlComponents(authorityUrl);\r\n        const pathSegments = components.PathSegments;\r\n        switch (pathSegments[0]) {\r\n            case \"tfp\":\r\n                return AuthorityType.B2C;\r\n            case \"adfs\":\r\n                return AuthorityType.Adfs;\r\n            default:\r\n                return AuthorityType.Aad;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Create an authority object of the correct type based on the url\r\n    * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\r\n    */\r\n    public static CreateInstance(authorityUrl: string, validateAuthority: boolean): Authority {\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            return null;\r\n        }\r\n        const type = AuthorityFactory.DetectAuthorityFromUrl(authorityUrl);\r\n        // Depending on above detection, create the right type.\r\n        switch (type) {\r\n            case AuthorityType.B2C:\r\n                return new B2cAuthority(authorityUrl, validateAuthority);\r\n            case AuthorityType.Aad:\r\n                return new AadAuthority(authorityUrl, validateAuthority);\r\n            default:\r\n                throw ClientConfigurationErrorMessage.invalidAuthorityType;\r\n        }\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\nimport { libraryVersion } from \"./utils/Constants\";\r\n\r\nexport interface ILoggerCallback {\r\n  (level: LogLevel, message: string, containsPii: boolean): void;\r\n}\r\n\r\nexport enum LogLevel {\r\n  Error,\r\n  Warning,\r\n  Info,\r\n  Verbose\r\n}\r\n\r\nexport class Logger {// Singleton Class\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  // TODO: This does not seem to be a singleton!! Change or Delete.\r\n  private static instance: Logger;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  private correlationId: string;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  private level: LogLevel = LogLevel.Info;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  private piiLoggingEnabled: boolean;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  private localCallback: ILoggerCallback;\r\n\r\n  constructor(localCallback: ILoggerCallback,\r\n      options:\r\n      {\r\n          correlationId?: string,\r\n          level?: LogLevel,\r\n          piiLoggingEnabled?: boolean,\r\n      } = {}) {\r\n      const {\r\n          correlationId = \"\",\r\n          level = LogLevel.Info,\r\n          piiLoggingEnabled = false\r\n      } = options;\r\n\r\n      this.localCallback = localCallback;\r\n      this.correlationId = correlationId;\r\n      this.level = level;\r\n      this.piiLoggingEnabled = piiLoggingEnabled;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  private logMessage(logLevel: LogLevel, logMessage: string, containsPii: boolean): void {\r\n    if ((logLevel > this.level) || (!this.piiLoggingEnabled && containsPii)) {\r\n      return;\r\n    }\r\n    const timestamp = new Date().toUTCString();\r\n    let log: string;\r\n    if (!StringUtils.isEmpty(this.correlationId)) {\r\n      log = timestamp + \":\" + this.correlationId + \"-\" + libraryVersion() + \"-\" + LogLevel[logLevel] + \" \" + logMessage;\r\n    }\r\n    else {\r\n      log = timestamp + \":\" + libraryVersion() + \"-\" + LogLevel[logLevel] + \" \" + logMessage;\r\n    }\r\n    this.executeCallback(logLevel, log, containsPii);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  executeCallback(level: LogLevel, message: string, containsPii: boolean) {\r\n    if (this.localCallback) {\r\n      this.localCallback(level, message, containsPii);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  error(message: string): void {\r\n    this.logMessage(LogLevel.Error, message, false);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  errorPii(message: string): void {\r\n    this.logMessage(LogLevel.Error, message, true);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  warning(message: string): void {\r\n    this.logMessage(LogLevel.Warning, message, false);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  warningPii(message: string): void {\r\n    this.logMessage(LogLevel.Warning, message, true);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  info(message: string): void {\r\n    this.logMessage(LogLevel.Info, message, false);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  infoPii(message: string): void {\r\n    this.logMessage(LogLevel.Info, message, true);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  verbose(message: string): void {\r\n    this.logMessage(LogLevel.Verbose, message, false);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  verbosePii(message: string): void {\r\n    this.logMessage(LogLevel.Verbose, message, true);\r\n  }\r\n\r\n  isPiiLoggingEnabled(): boolean {\r\n    return this.piiLoggingEnabled;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Logger } from \"./Logger\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\nimport { TelemetryEmitter } from \"./telemetry/TelemetryTypes\"\r\n\r\n/**\r\n * Cache location options supported by MSAL are:\r\n * - local storage: MSAL uses browsers local storage to store its cache\r\n * - session storage: MSAL uses the browsers session storage to store its cache\r\n */\r\nexport type CacheLocation = \"localStorage\" | \"sessionStorage\";\r\n\r\n/**\r\n * Defaults for the Configuration Options\r\n */\r\nconst FRAME_TIMEOUT = 6000;\r\nconst OFFSET = 300;\r\nconst NAVIGATE_FRAME_WAIT = 500;\r\n\r\n\r\n/**\r\n * @type AuthOptions: Use this to configure the auth options in the Configuration object\r\n *\r\n *  - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\r\n *  - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\r\n *  - validateAuthority           - Used to turn authority validation on/off. When set to true (default), MSAL will compare the application's authority against well-known URLs templates representing well-formed authorities. It is useful when the authority is obtained at run time to prevent MSAL from displaying authentication prompts from malicious pages.\r\n *  - redirectUri                 - The redirect URI of the application, this should be same as the value in the application registration portal.Defaults to `window.location.href`.\r\n *  - postLogoutRedirectUri       - Used to redirect the user to this location after logout. Defaults to `window.location.href`.\r\n *  - navigateToLoginRequestUrl   - Used to turn off default navigation to start page after login. Default is true. This is used only for redirect flows.\r\n *\r\n */\r\nexport type AuthOptions = {\r\n  clientId: string;\r\n  authority?: string;\r\n  validateAuthority?: boolean;\r\n  redirectUri?: string | (() => string);\r\n  postLogoutRedirectUri?: string | (() => string);\r\n  navigateToLoginRequestUrl?: boolean;\r\n};\r\n\r\n/**\r\n * Use this to configure the below cache configuration options:\r\n *\r\n * - cacheLocation            - Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\r\n * - storeAuthStateInCookie   - If set, MSAL store's the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\r\n */\r\nexport type CacheOptions = {\r\n  cacheLocation?: CacheLocation;\r\n  storeAuthStateInCookie?: boolean;\r\n};\r\n\r\n/**\r\n * Telemetry Config Options\r\n * - applicationName              - Name of the consuming apps application\r\n * - applicationVersion           - Verison of the consuming application\r\n * - telemetryEmitter             - Function where telemetry events are flushed to\r\n */\r\nexport type TelemetryOptions = {\r\n  applicationName: string;\r\n  applicationVersion: string;\r\n  telemetryEmitter: TelemetryEmitter\r\n //TODO, add onlyAddFailureTelemetry option\r\n};\r\n\r\n/**\r\n * Library Specific Options\r\n *\r\n * - logger                       - Used to initialize the Logger object; TODO: Expand on logger details or link to the documentation on logger\r\n * - loadFrameTimeout             - maximum time the library should wait for a frame to load\r\n * - tokenRenewalOffsetSeconds    - sets the window of offset needed to renew the token before expiry\r\n * - navigateFrameWait            - sets the wait time for hidden iFrame navigation\r\n */\r\nexport type SystemOptions = {\r\n  logger?: Logger;\r\n  loadFrameTimeout?: number;\r\n  tokenRenewalOffsetSeconds?: number;\r\n  navigateFrameWait?: number;\r\n  telemetry?: TelemetryOptions\r\n};\r\n\r\n/**\r\n * App/Framework specific environment support\r\n *\r\n * - isAngular                - flag set to determine if it is Angular Framework. MSAL uses this to broadcast tokens. More to come here: detangle this dependency from core.\r\n * - unprotectedResources     - Array of URI's which are unprotected resources. MSAL will not attach a token to outgoing requests that have these URI. Defaults to 'null'.\r\n * - protectedResourceMap     - This is mapping of resources to scopes used by MSAL for automatically attaching access tokens in web API calls.A single access token is obtained for the resource. So you can map a specific resource path as follows: {\"https://graph.microsoft.com/v1.0/me\", [\"user.read\"]}, or the app URL of the resource as: {\"https://graph.microsoft.com/\", [\"user.read\", \"mail.send\"]}. This is required for CORS calls.\r\n *\r\n */\r\nexport type FrameworkOptions = {\r\n  isAngular?: boolean;\r\n  unprotectedResources?: Array<string>;\r\n  protectedResourceMap?: Map<string, Array<string>>;\r\n};\r\n\r\n/**\r\n * Use the configuration object to configure MSAL and initialize the UserAgentApplication.\r\n *\r\n * This object allows you to configure important elements of MSAL functionality:\r\n * - auth: this is where you configure auth elements like clientID,  authority used for authenticating against the Microsoft Identity Platform\r\n * - cache: this is where you configure cache location and whether to store cache in cookies\r\n * - system: this is where you can configure the logger, frame timeout etc.\r\n * - framework: this is where you can configure the running mode of angular. More to come here soon.\r\n */\r\nexport type Configuration = {\r\n  auth: AuthOptions,\r\n  cache?: CacheOptions,\r\n  system?: SystemOptions,\r\n  framework?: FrameworkOptions\r\n};\r\n\r\nconst DEFAULT_AUTH_OPTIONS: AuthOptions = {\r\n  clientId: \"\",\r\n  authority: null,\r\n  validateAuthority: true,\r\n  redirectUri: () => UrlUtils.getDefaultRedirectUri(),\r\n  postLogoutRedirectUri: () => UrlUtils.getDefaultRedirectUri(),\r\n  navigateToLoginRequestUrl: true\r\n};\r\n\r\nconst DEFAULT_CACHE_OPTIONS: CacheOptions = {\r\n  cacheLocation: \"sessionStorage\",\r\n  storeAuthStateInCookie: false\r\n};\r\n\r\nconst DEFAULT_SYSTEM_OPTIONS: SystemOptions = {\r\n  logger: new Logger(null),\r\n  loadFrameTimeout: FRAME_TIMEOUT,\r\n  tokenRenewalOffsetSeconds: OFFSET,\r\n  navigateFrameWait: NAVIGATE_FRAME_WAIT\r\n};\r\n\r\nconst DEFAULT_FRAMEWORK_OPTIONS: FrameworkOptions = {\r\n  isAngular: false,\r\n  unprotectedResources: new Array<string>(),\r\n  protectedResourceMap: new Map<string, Array<string>>()\r\n};\r\n\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TAuthOptions\r\n * @param TCacheOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n *\r\n * @returns TConfiguration object\r\n */\r\n\r\nexport function buildConfiguration({ auth, cache = {}, system = {}, framework = {}}: Configuration): Configuration {\r\n  const overlayedConfig: Configuration = {\r\n    auth: { ...DEFAULT_AUTH_OPTIONS, ...auth },\r\n    cache: { ...DEFAULT_CACHE_OPTIONS, ...cache },\r\n    system: { ...DEFAULT_SYSTEM_OPTIONS, ...system },\r\n    framework: { ...DEFAULT_FRAMEWORK_OPTIONS, ...framework }\r\n  };\r\n  return overlayedConfig;\r\n}\r\n\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { AuthError } from \"./AuthError\";\r\n\r\nexport const ServerErrorMessage = {\r\n    serverUnavailable: {\r\n        code: \"server_unavailable\",\r\n        desc: \"Server is temporarily unavailable.\"\r\n    },\r\n    unknownServerError: {\r\n        code: \"unknown_server_error\"\r\n    },\r\n};\r\n\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nexport class ServerError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"ServerError\";\r\n\r\n        Object.setPrototypeOf(this, ServerError.prototype);\r\n    }\r\n\r\n    static createServerUnavailableError(): ServerError {\r\n        return new ServerError(ServerErrorMessage.serverUnavailable.code,\r\n            ServerErrorMessage.serverUnavailable.desc);\r\n    }\r\n\r\n    static createUnknownServerError(errorDesc: string): ServerError {\r\n        return new ServerError(ServerErrorMessage.unknownServerError.code,\r\n            errorDesc);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ServerError } from \"./ServerError\";\r\n\r\nexport const InteractionRequiredAuthErrorMessage = {\r\n    interactionRequired: {\r\n        code: \"interaction_required\"\r\n    },\r\n    consentRequired: {\r\n        code: \"consent_required\"\r\n    },\r\n    loginRequired: {\r\n        code: \"login_required\"\r\n    },\r\n};\r\n\r\n/**\r\n * Error thrown when the user is required to perform an interactive token request.\r\n */\r\nexport class InteractionRequiredAuthError extends ServerError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"InteractionRequiredAuthError\";\r\n\r\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\r\n    }\r\n\r\n    static isInteractionRequiredError(errorString: string) : boolean {\r\n        const interactionRequiredCodes = [\r\n            InteractionRequiredAuthErrorMessage.interactionRequired.code,\r\n            InteractionRequiredAuthErrorMessage.consentRequired.code,\r\n            InteractionRequiredAuthErrorMessage.loginRequired.code\r\n        ];\r\n\r\n        return errorString && interactionRequiredCodes.indexOf(errorString) > -1;\r\n    }\r\n\r\n    static createLoginRequiredAuthError(errorDesc: string): InteractionRequiredAuthError {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.loginRequired.code, errorDesc);\r\n    }\r\n\r\n    static createInteractionRequiredAuthError(errorDesc: string): InteractionRequiredAuthError {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.interactionRequired.code, errorDesc);\r\n    }\r\n\r\n    static createConsentRequiredAuthError(errorDesc: string): InteractionRequiredAuthError {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.consentRequired.code, errorDesc);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Account } from \"./Account\";\r\nimport { IdToken } from \"./IdToken\";\r\nimport { StringDict } from \"./MsalTypes\";\r\n\r\nexport type AuthResponse = {\r\n    uniqueId: string;\r\n    tenantId: string;\r\n    tokenType: string;\r\n    idToken: IdToken;\r\n    idTokenClaims: StringDict;\r\n    accessToken: string;\r\n    scopes: Array<string>;\r\n    expiresOn: Date;\r\n    account: Account;\r\n    accountState: string;\r\n};\r\n\r\nexport function buildResponseStateOnly(state: string) : AuthResponse {\r\n    return {\r\n        uniqueId: \"\",\r\n        tenantId: \"\",\r\n        tokenType: \"\",\r\n        idToken: null,\r\n        idTokenClaims: null,\r\n        accessToken: \"\",\r\n        scopes: null,\r\n        expiresOn: null,\r\n        account: null,\r\n        accountState: state\r\n    };\r\n}\r\n","export const EVENT_NAME_PREFIX = \"msal.\";\r\nexport const EVENT_NAME_KEY = \"event_name\";\r\nexport const START_TIME_KEY = \"start_time\";\r\nexport const ELAPSED_TIME_KEY  = \"elapsed_time\";\r\n\r\nexport const TELEMETRY_BLOB_EVENT_NAMES =  {\r\n    MsalCorrelationIdConstStrKey: \"Microsoft.MSAL.correlation_id\",\r\n    ApiTelemIdConstStrKey: \"msal.api_telem_id\",\r\n    ApiIdConstStrKey: \"msal.api_id\",\r\n    BrokerAppConstStrKey: \"Microsoft_MSAL_broker_app\",\r\n    CacheEventCountConstStrKey: \"Microsoft_MSAL_cache_event_count\",\r\n    HttpEventCountTelemetryBatchKey: \"Microsoft_MSAL_http_event_count\",\r\n    IdpConstStrKey: \"Microsoft_MSAL_idp\",\r\n    IsSilentTelemetryBatchKey: \"\",\r\n    IsSuccessfulConstStrKey: \"Microsoft_MSAL_is_successful\",\r\n    ResponseTimeConstStrKey: \"Microsoft_MSAL_response_time\",\r\n    TenantIdConstStrKey: \"Microsoft_MSAL_tenant_id\",\r\n    UiEventCountTelemetryBatchKey: \"Microsoft_MSAL_ui_event_count\"\r\n};\r\n\r\n// This is used to replace the real tenant in telemetry info\r\nexport const TENANT_PLACEHOLDER = \"<tenant>\";\r\n\r\n","import { B2cAuthority } from \"../B2cAuthority\";\r\nimport { AADTrustedHostList } from \"../utils/Constants\";\r\nimport { TENANT_PLACEHOLDER, EVENT_NAME_PREFIX } from \"./TelemetryConstants\";\r\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\n\r\nexport const scrubTenantFromUri = (uri: string): String => {\r\n\r\n    const url = UrlUtils.GetUrlComponents(uri);\r\n\r\n    // validate trusted host\r\n    if (!AADTrustedHostList[url.HostNameAndPort.toLocaleLowerCase()]) {\r\n        // Should this return null or what was passed?\r\n        return null;\r\n    }\r\n\r\n    const pathParams = url.PathSegments;\r\n\r\n    if (pathParams && pathParams.length >= 2) {\r\n        const tenantPosition = pathParams[1] ===  B2cAuthority.B2C_PREFIX ? 2 : 1;\r\n        if (tenantPosition < pathParams.length) {\r\n            pathParams[tenantPosition] = TENANT_PLACEHOLDER;\r\n        }\r\n    }\r\n\r\n    return  `${url.Protocol}//${url.HostNameAndPort}/${pathParams.join(\"/\")}`;\r\n};\r\n\r\nexport const hashPersonalIdentifier = (valueToHash: string) => {\r\n    // TODO sha256 this\r\n    // Current test runner is being funny with node libs that are webpacked anyway\r\n    // need a different solution\r\n    return CryptoUtils.base64Encode(valueToHash);\r\n};\r\n\r\nexport const prependEventNamePrefix = (suffix: string): string => `${EVENT_NAME_PREFIX}${suffix || \"\"}`;\r\n","import { TELEMETRY_BLOB_EVENT_NAMES } from \"./TelemetryConstants\";\r\nimport {\r\n    EVENT_NAME_KEY,\r\n    START_TIME_KEY,\r\n    ELAPSED_TIME_KEY\r\n} from \"./TelemetryConstants\";\r\nimport { prependEventNamePrefix } from \"./TelemetryUtils\";\r\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\r\n\r\nexport default class TelemetryEvent {\r\n\r\n    private startTimestamp: number;\r\n    protected event: any; // TODO TYPE THIS\r\n    public eventId: string;\r\n\r\n    constructor(eventName: string, correlationId: string) {\r\n\r\n        this.startTimestamp = Date.now();\r\n        this.eventId = CryptoUtils.createNewGuid();\r\n        this.event = {\r\n            [prependEventNamePrefix(EVENT_NAME_KEY)]: eventName,\r\n            [prependEventNamePrefix(START_TIME_KEY)]: this.startTimestamp,\r\n            [prependEventNamePrefix(ELAPSED_TIME_KEY)]: -1,\r\n            [`${TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey}`]: correlationId\r\n        };\r\n    }\r\n\r\n    private setElapsedTime(time: Number): void {\r\n        this.event[prependEventNamePrefix(ELAPSED_TIME_KEY)] = time;\r\n    }\r\n\r\n    public stop(): void {\r\n        // Set duration of event\r\n        this.setElapsedTime(+Date.now() - +this.startTimestamp);\r\n    }\r\n\r\n    public get telemetryCorrelationId(): string {\r\n        return this.event[`${TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey}`];\r\n    }\r\n\r\n    public set telemetryCorrelationId(value: string) {\r\n        this.event[`${TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey}`] = value;\r\n    }\r\n\r\n    public get eventName(): string {\r\n        return this.event[prependEventNamePrefix(EVENT_NAME_KEY)];\r\n    }\r\n\r\n    public get(): object {\r\n        return {\r\n            ...this.event,\r\n            eventId: this.eventId\r\n        };\r\n    }\r\n}\r\n","import { EVENT_NAME_PREFIX, TELEMETRY_BLOB_EVENT_NAMES } from \"./TelemetryConstants\";\r\nimport TelemetryEvent from \"./TelemetryEvent\";\r\nimport { EventCount, TelemetryPlatform } from \"./TelemetryTypes\";\r\nimport { prependEventNamePrefix } from \"./TelemetryUtils\";\r\n\r\nexport default class DefaultEvent extends TelemetryEvent {\r\n    // TODO Platform Type\r\n    constructor(platform: TelemetryPlatform, correlationId: string, clientId: string, eventCount: EventCount) {\r\n        super(prependEventNamePrefix(\"default_event\"), correlationId);\r\n        this.event[prependEventNamePrefix(\"client_id\")] = clientId;\r\n        this.event[prependEventNamePrefix(\"sdk_plaform\")] = platform.sdk;\r\n        this.event[prependEventNamePrefix(\"sdk_version\")] = platform.sdkVersion;\r\n        this.event[prependEventNamePrefix(\"application_name\")] = platform.applicationName;\r\n        this.event[prependEventNamePrefix(\"application_version\")] = platform.applicationVersion;\r\n        this.event[`${TELEMETRY_BLOB_EVENT_NAMES.UiEventCountTelemetryBatchKey}`] = this.getEventCount(prependEventNamePrefix(\"ui_event\"), eventCount);\r\n        this.event[`${TELEMETRY_BLOB_EVENT_NAMES.HttpEventCountTelemetryBatchKey}`] = this.getEventCount(prependEventNamePrefix(\"http_event\"), eventCount);\r\n        this.event[`${TELEMETRY_BLOB_EVENT_NAMES.CacheEventCountConstStrKey}`] = this.getEventCount(prependEventNamePrefix(\"cache_event\"), eventCount);\r\n        /// Device id?\r\n    }\r\n\r\n    private getEventCount(eventName: string, eventCount: EventCount): number {\r\n        if (!eventCount[eventName]) {\r\n            return 0;\r\n        }\r\n        return eventCount[eventName];\r\n    }\r\n}\r\n","import TelemetryEvent from \"./TelemetryEvent\";\r\nimport {\r\n    CompletedEvents,\r\n    EventCount,\r\n    EventCountByCorrelationId,\r\n    InProgressEvents,\r\n    TelemetryConfig,\r\n    TelemetryPlatform,\r\n    TelemetryEmitter\r\n} from \"./TelemetryTypes\";\r\nimport DefaultEvent from \"./DefaultEvent\";\r\n\r\n// for use in cache events\r\nconst MSAL_CACHE_EVENT_VALUE_PREFIX = \"msal.token\";\r\nconst MSAL_CACHE_EVENT_NAME = \"msal.cache_event\";\r\n\r\nconst createEventKey = (event: TelemetryEvent): string => (\r\n    `${event.telemetryCorrelationId}-${event.eventId}-${event.eventName}`\r\n);\r\n\r\nexport default class TelemetryManager {\r\n\r\n    // correlation Id to list of events\r\n    private completedEvents: CompletedEvents = {};\r\n    // event key to event\r\n    private inProgressEvents: InProgressEvents = {};\r\n    // correlation id to map of eventname to count\r\n    private eventCountByCorrelationId: EventCountByCorrelationId = {};\r\n\r\n    //Implement after API EVENT\r\n    private onlySendFailureTelemetry: boolean = false;\r\n    private telemetryPlatform: TelemetryPlatform;\r\n    private clientId: string;\r\n    private telemetryEmitter: TelemetryEmitter;\r\n\r\n    constructor(config: TelemetryConfig, telemetryEmitter: TelemetryEmitter) {\r\n        // TODO THROW if bad options\r\n        this.telemetryPlatform = config.platform;\r\n        this.clientId = config.clientId;\r\n        this.onlySendFailureTelemetry = config.onlySendFailureTelemetry;\r\n        // TODO, when i get to wiring this through, think about what it means if\r\n        // a developer does not implement telem at all, we still instrument, but telemetryEmitter can be\r\n        // optional?\r\n        this.telemetryEmitter = telemetryEmitter;\r\n    }\r\n\r\n    startEvent(event: TelemetryEvent) {\r\n        if (!this.telemetryEmitter) {\r\n            return;\r\n        }\r\n        const eventKey = createEventKey(event);\r\n        this.inProgressEvents[eventKey] = event;\r\n    }\r\n\r\n    stopEvent(event: TelemetryEvent) {\r\n        const eventKey = createEventKey(event);\r\n        if (!this.telemetryEmitter || !this.inProgressEvents[eventKey]) {\r\n            return;\r\n        }\r\n        event.stop();\r\n        this.incrementEventCount(event);\r\n\r\n        const completedEvents = this.completedEvents[event.telemetryCorrelationId];\r\n\r\n        this.completedEvents[event.telemetryCorrelationId] = [...(completedEvents || []), event];\r\n\r\n        delete this.inProgressEvents[eventKey];\r\n    }\r\n\r\n    flush(correlationId: string): void {\r\n\r\n        // If there is only unfinished events should this still return them?\r\n        if (!this.telemetryEmitter || !this.completedEvents[correlationId]) {\r\n            return;\r\n        }\r\n\r\n        const orphanedEvents = this.getOrphanedEvents(correlationId);\r\n        orphanedEvents.forEach(event => this.incrementEventCount(event));\r\n        const eventsToFlush: Array<TelemetryEvent> = [\r\n            ...this.completedEvents[correlationId],\r\n            ...orphanedEvents\r\n        ];\r\n\r\n        delete this.completedEvents[correlationId];\r\n        const eventCountsToFlush: EventCount = this.eventCountByCorrelationId[correlationId];\r\n\r\n        delete this.eventCountByCorrelationId[correlationId];\r\n        // TODO add funcitonality for onlyFlushFailures after implementing api event? ??\r\n\r\n        if (!eventsToFlush || !eventsToFlush.length) {\r\n            return;\r\n        }\r\n\r\n        const defaultEvent: DefaultEvent = new DefaultEvent(\r\n            this.telemetryPlatform,\r\n            correlationId,\r\n            this.clientId,\r\n            eventCountsToFlush\r\n        );\r\n\r\n        const eventsWithDefaultEvent = [ ...eventsToFlush, defaultEvent ];\r\n\r\n        this.telemetryEmitter(eventsWithDefaultEvent.map(e => e.get()));\r\n    }\r\n\r\n    private incrementEventCount(event: TelemetryEvent): void {\r\n        // TODO, name cache event different?\r\n        // if type is cache event, change name\r\n        const eventName = event.eventName;\r\n        const eventCount = this.eventCountByCorrelationId[event.telemetryCorrelationId];\r\n        if (!eventCount) {\r\n            this.eventCountByCorrelationId[event.telemetryCorrelationId] = {\r\n                [eventName]: 1\r\n            };\r\n        } else {\r\n            eventCount[eventName] = eventCount[eventName] ? eventCount[eventName] + 1 : 1;\r\n        }\r\n    }\r\n\r\n    private getOrphanedEvents(correlationId: string): Array<TelemetryEvent> {\r\n        return Object.keys(this.inProgressEvents)\r\n            .reduce((memo, eventKey) => {\r\n                if (eventKey.indexOf(correlationId) !== -1) {\r\n                    const event = this.inProgressEvents[eventKey];\r\n                    delete this.inProgressEvents[eventKey];\r\n                    return [...memo, event];\r\n                }\r\n                return memo;\r\n            }, []);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { AccessTokenCacheItem } from \"./AccessTokenCacheItem\";\r\nimport { AccessTokenKey } from \"./AccessTokenKey\";\r\nimport { AccessTokenValue } from \"./AccessTokenValue\";\r\nimport { ServerRequestParameters } from \"./ServerRequestParameters\";\r\nimport { Authority } from \"./Authority\";\r\nimport { ClientInfo } from \"./ClientInfo\";\r\nimport { Constants, SSOTypes, PromptState, BlacklistedEQParams, InteractionType, libraryVersion } from \"./utils/Constants\";\r\nimport { IdToken } from \"./IdToken\";\r\nimport { Logger } from \"./Logger\";\r\nimport { Storage } from \"./Storage\";\r\nimport { Account } from \"./Account\";\r\nimport { ScopeSet } from \"./ScopeSet\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { TokenUtils } from \"./utils/TokenUtils\";\r\nimport { TimeUtils } from \"./utils/TimeUtils\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\nimport { ResponseUtils } from \"./utils/ResponseUtils\";\r\nimport { AuthorityFactory } from \"./AuthorityFactory\";\r\nimport { Configuration, buildConfiguration, TelemetryOptions } from \"./Configuration\";\r\nimport { AuthenticationParameters, validateClaimsRequest } from \"./AuthenticationParameters\";\r\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\r\nimport { AuthError } from \"./error/AuthError\";\r\nimport { ClientAuthError, ClientAuthErrorMessage } from \"./error/ClientAuthError\";\r\nimport { ServerError } from \"./error/ServerError\";\r\nimport { InteractionRequiredAuthError } from \"./error/InteractionRequiredAuthError\";\r\nimport { AuthResponse, buildResponseStateOnly } from \"./AuthResponse\";\r\nimport TelemetryManager from \"./telemetry/TelemetryManager\";\r\nimport { TelemetryPlatform, TelemetryConfig } from './telemetry/TelemetryTypes';\r\n\r\n\r\n // default authority\r\nconst DEFAULT_AUTHORITY = \"https://login.microsoftonline.com/common\";\r\n\r\n/**\r\n * Interface to handle iFrame generation, Popup Window creation and redirect handling\r\n */\r\ndeclare global {\r\n    interface Window {\r\n        msal: Object;\r\n        CustomEvent: CustomEvent;\r\n        Event: Event;\r\n        activeRenewals: {};\r\n        renewStates: Array<string>;\r\n        callbackMappedToRenewStates : {};\r\n        promiseMappedToRenewStates: {};\r\n        openedWindows: Array<Window>;\r\n        requestType: string;\r\n    }\r\n}\r\n\r\n/**\r\n * @hidden\r\n * @ignore\r\n * response_type from OpenIDConnect\r\n * References: https://openid.net/specs/oauth-v2-multiple-response-types-1_0.html & https://tools.ietf.org/html/rfc6749#section-4.2.1\r\n * Since we support only implicit flow in this library, we restrict the response_type support to only 'token' and 'id_token'\r\n *\r\n */\r\nconst ResponseTypes = {\r\n  id_token: \"id_token\",\r\n  token: \"token\",\r\n  id_token_token: \"id_token token\"\r\n};\r\n\r\n/**\r\n * @hidden\r\n * @ignore\r\n */\r\nexport interface CacheResult {\r\n  errorDesc: string;\r\n  token: string;\r\n  error: string;\r\n}\r\n\r\n/**\r\n * @hidden\r\n * @ignore\r\n * Data type to hold information about state returned from the server\r\n */\r\nexport type ResponseStateInfo = {\r\n  state: string;\r\n  stateMatch: boolean;\r\n  requestType: string;\r\n};\r\n\r\n/**\r\n * A type alias for an authResponseCallback function.\r\n * {@link (authResponseCallback:type)}\r\n * @param authErr error created for failure cases\r\n * @param response response containing token strings in success cases, or just state value in error cases\r\n */\r\nexport type authResponseCallback = (authErr: AuthError, response?: AuthResponse) => void;\r\n\r\n/**\r\n * A type alias for a tokenReceivedCallback function.\r\n * {@link (tokenReceivedCallback:type)}\r\n * @returns response of type {@link (AuthResponse:type)}\r\n * The function that will get the call back once this API is completed (either successfully or with a failure).\r\n */\r\nexport type tokenReceivedCallback = (response: AuthResponse) => void;\r\n\r\n/**\r\n * A type alias for a errorReceivedCallback function.\r\n * {@link (errorReceivedCallback:type)}\r\n * @returns response of type {@link (AuthError:class)}\r\n * @returns {string} account state\r\n */\r\nexport type errorReceivedCallback = (authErr: AuthError, accountState: string) => void;\r\n\r\n/**\r\n * @hidden\r\n * @ignore\r\n * A wrapper to handle the token response/error within the iFrame always\r\n *\r\n * @param target\r\n * @param propertyKey\r\n * @param descriptor\r\n */\r\nconst resolveTokenOnlyIfOutOfIframe = (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n  const tokenAcquisitionMethod = descriptor.value;\r\n  descriptor.value = function (...args: any[]) {\r\n      return this.isInIframe()\r\n          ? new Promise(() => {\r\n            return;\r\n          })\r\n          : tokenAcquisitionMethod.apply(this, args);\r\n  };\r\n  return descriptor;\r\n};\r\n\r\n/**\r\n * UserAgentApplication class\r\n *\r\n * Object Instance that the developer can use to make loginXX OR acquireTokenXX functions\r\n */\r\nexport class UserAgentApplication {\r\n\r\n  // input Configuration by the developer/user\r\n  private config: Configuration;\r\n\r\n  // callbacks for token/error\r\n  private authResponseCallback: authResponseCallback = null;\r\n  private tokenReceivedCallback: tokenReceivedCallback = null;\r\n  private errorReceivedCallback: errorReceivedCallback = null;\r\n\r\n  // Added for readability as these params are very frequently used\r\n  private logger: Logger;\r\n  private clientId: string;\r\n  private inCookie: boolean;\r\n  private telemetryManager: TelemetryManager;\r\n\r\n  // Cache and Account info referred across token grant flow\r\n  protected cacheStorage: Storage;\r\n  private account: Account;\r\n\r\n  // state variables\r\n  private loginInProgress: boolean;\r\n  private acquireTokenInProgress: boolean;\r\n  private silentAuthenticationState: string;\r\n  private silentLogin: boolean;\r\n  private redirectCallbacksSet: boolean;\r\n\r\n  // Authority Functionality\r\n  protected authorityInstance: Authority;\r\n\r\n  /**\r\n   * setter for the authority URL\r\n   * @param {string} authority\r\n   */\r\n  // If the developer passes an authority, create an instance\r\n  public set authority(val) {\r\n    this.authorityInstance = AuthorityFactory.CreateInstance(val, this.config.auth.validateAuthority);\r\n  }\r\n\r\n  /**\r\n   * Method to manage the authority URL.\r\n   *\r\n   * @returns {string} authority\r\n   */\r\n  public get authority(): string {\r\n    return this.authorityInstance.CanonicalAuthority;\r\n  }\r\n\r\n  /**\r\n   * Get the current authority instance from the MSAL configuration object\r\n   *\r\n   * @returns {@link Authority} authority instance\r\n   */\r\n  public getAuthorityInstance(): Authority {\r\n    return this.authorityInstance;\r\n  }\r\n\r\n  /**\r\n   * @constructor\r\n   * Constructor for the UserAgentApplication used to instantiate the UserAgentApplication object\r\n   *\r\n   * Important attributes in the Configuration object for auth are:\r\n   * - clientID: the application ID of your application.\r\n   * You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n   * - authority: the authority URL for your application.\r\n   *\r\n   * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n   * It is of the form https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt;.\r\n   * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n   * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n   * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n   * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n   *\r\n   *\r\n   * In Azure B2C, authority is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/&lt;policyName&gt;/\r\n\r\n   * @param {@link (Configuration:type)} configuration object for the MSAL UserAgentApplication instance\r\n   */\r\n  constructor(configuration: Configuration) {\r\n\r\n    // Set the Configuration\r\n    this.config = buildConfiguration(configuration);\r\n\r\n    // Set the callback boolean\r\n    this.redirectCallbacksSet = false;\r\n\r\n    this.logger = this.config.system.logger;\r\n    this.clientId = this.config.auth.clientId;\r\n    this.inCookie = this.config.cache.storeAuthStateInCookie;\r\n\r\n    this.telemetryManager = this.getTelemetryManagerFromConfig(this.config.system.telemetry, this.clientId);\r\n\r\n    // if no authority is passed, set the default: \"https://login.microsoftonline.com/common\"\r\n    this.authority = this.config.auth.authority || DEFAULT_AUTHORITY;\r\n\r\n    // track login and acquireToken in progress\r\n    this.loginInProgress = false;\r\n    this.acquireTokenInProgress = false;\r\n\r\n    // cache keys msal - typescript throws an error if any value other than \"localStorage\" or \"sessionStorage\" is passed\r\n    try {\r\n      this.cacheStorage = new Storage(this.config.cache.cacheLocation);\r\n    } catch (e) {\r\n        throw ClientConfigurationError.createInvalidCacheLocationConfigError(this.config.cache.cacheLocation);\r\n    }\r\n\r\n    // Initialize window handling code\r\n    window.openedWindows = [];\r\n    window.activeRenewals = {};\r\n    window.renewStates = [];\r\n    window.callbackMappedToRenewStates = { };\r\n    window.promiseMappedToRenewStates = { };\r\n    window.msal = this;\r\n\r\n    const urlHash = window.location.hash;\r\n    const urlContainsHash = this.urlContainsHash(urlHash);\r\n\r\n    // On the server 302 - Redirect, handle this\r\n    if (!this.config.framework.isAngular) {\r\n      if (urlContainsHash) {\r\n        this.handleAuthenticationResponse(urlHash);\r\n      }\r\n    }\r\n  }\r\n\r\n  //#region Redirect Callbacks\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   * Set the callback functions for the redirect flow to send back the success or error object.\r\n   * @param {@link (tokenReceivedCallback:type)} successCallback - Callback which contains the AuthResponse object, containing data from the server.\r\n   * @param {@link (errorReceivedCallback:type)} errorCallback - Callback which contains a AuthError object, containing error data from either the server\r\n   * or the library, depending on the origin of the error.\r\n   */\r\n  handleRedirectCallback(tokenReceivedCallback: tokenReceivedCallback, errorReceivedCallback: errorReceivedCallback): void;\r\n  handleRedirectCallback(authCallback: authResponseCallback): void;\r\n  handleRedirectCallback(authOrTokenCallback: authResponseCallback | tokenReceivedCallback, errorReceivedCallback?: errorReceivedCallback): void {\r\n    if (!authOrTokenCallback) {\r\n      this.redirectCallbacksSet = false;\r\n      throw ClientConfigurationError.createInvalidCallbackObjectError(authOrTokenCallback);\r\n    }\r\n\r\n    // Set callbacks\r\n    if (errorReceivedCallback) {\r\n      this.tokenReceivedCallback = authOrTokenCallback as tokenReceivedCallback;\r\n      this.errorReceivedCallback = errorReceivedCallback;\r\n      this.logger.warning(\"This overload for callback is deprecated - please change the format of the callbacks to a single callback as shown: (err: AuthError, response: AuthResponse).\");\r\n    } else {\r\n      this.authResponseCallback = authOrTokenCallback as authResponseCallback;\r\n    }\r\n\r\n    this.redirectCallbacksSet = true;\r\n\r\n    // On the server 302 - Redirect, handle this\r\n    if (!this.config.framework.isAngular) {\r\n      const cachedHash = this.cacheStorage.getItem(Constants.urlHash);\r\n      if (cachedHash) {\r\n        this.processCallBack(cachedHash, null);\r\n      }\r\n    }\r\n  }\r\n\r\n  private authResponseHandler(interactionType: InteractionType, response: AuthResponse, resolve?: any) : void {\r\n    if (interactionType === Constants.interactionTypeRedirect) {\r\n      if (this.errorReceivedCallback) {\r\n        this.tokenReceivedCallback(response);\r\n      } else if (this.authResponseCallback) {\r\n        this.authResponseCallback(null, response);\r\n      }\r\n    } else if (interactionType === Constants.interactionTypePopup) {\r\n      resolve(response);\r\n    } else {\r\n      throw ClientAuthError.createInvalidInteractionTypeError();\r\n    }\r\n  }\r\n\r\n  private authErrorHandler(interactionType: InteractionType, authErr: AuthError, response: AuthResponse, reject?: any) : void {\r\n    if (interactionType === Constants.interactionTypeRedirect) {\r\n      if (this.errorReceivedCallback) {\r\n        this.errorReceivedCallback(authErr, response.accountState);\r\n      } else {\r\n        this.authResponseCallback(authErr, response);\r\n      }\r\n    } else if (interactionType === Constants.interactionTypePopup) {\r\n      reject(authErr);\r\n    } else {\r\n      throw ClientAuthError.createInvalidInteractionTypeError();\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n  /**\r\n   * Use when initiating the login process by redirecting the user's browser to the authorization endpoint.\r\n   * @param {@link (AuthenticationParameters:type)}\r\n   */\r\n  loginRedirect(request?: AuthenticationParameters): void {\r\n    // Throw error if callbacks are not set before redirect\r\n    if (!this.redirectCallbacksSet) {\r\n      throw ClientConfigurationError.createRedirectCallbacksNotSetError();\r\n    }\r\n    this.acquireTokenInteractive(Constants.interactionTypeRedirect, true, request);\r\n  }\r\n\r\n  /**\r\n   * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint.\r\n   * @param {@link (AuthenticationParameters:type)}\r\n   *\r\n   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n   */\r\n  acquireTokenRedirect(request: AuthenticationParameters): void {\r\n    if (!request) {\r\n      throw ClientConfigurationError.createEmptyRequestError();\r\n    }\r\n\r\n    // Throw error if callbacks are not set before redirect\r\n    if (!this.redirectCallbacksSet) {\r\n      throw ClientConfigurationError.createRedirectCallbacksNotSetError();\r\n    }\r\n    this.acquireTokenInteractive(Constants.interactionTypeRedirect, false, request);\r\n  }\r\n\r\n  /**\r\n   * Use when initiating the login process via opening a popup window in the user's browser\r\n   *\r\n   * @param {@link (AuthenticationParameters:type)}\r\n   *\r\n   * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n   */\r\n  loginPopup(request?: AuthenticationParameters): Promise<AuthResponse> {\r\n    return new Promise<AuthResponse>((resolve, reject) => {\r\n      this.acquireTokenInteractive(Constants.interactionTypePopup, true, request, resolve, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n   * @param {@link AuthenticationParameters}\r\n   *\r\n   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n   * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n   */\r\n  acquireTokenPopup(request: AuthenticationParameters): Promise<AuthResponse> {\r\n    if (!request) {\r\n      throw ClientConfigurationError.createEmptyRequestError();\r\n    }\r\n\r\n    return new Promise<AuthResponse>((resolve, reject) => {\r\n      this.acquireTokenInteractive(Constants.interactionTypePopup, false, request, resolve, reject);\r\n    });\r\n  }\r\n\r\n  //#region Acquire Token\r\n\r\n  /**\r\n   * Use when initiating the login process or when you want to obtain an access_token for your API,\r\n   * either by redirecting the user's browser window to the authorization endpoint or via opening a popup window in the user's browser.\r\n   * @param {@link (AuthenticationParameters:type)}\r\n   *\r\n   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n   */\r\n  private acquireTokenInteractive(interactionType: InteractionType, isLoginCall: boolean, request?: AuthenticationParameters, resolve?: any, reject?: any): void {\r\n\r\n    // If already in progress, do not proceed\r\n    if (this.loginInProgress || this.acquireTokenInProgress) {\r\n      const thrownError = this.loginInProgress ? ClientAuthError.createLoginInProgressError() : ClientAuthError.createAcquireTokenInProgressError();\r\n      const stateOnlyResponse = buildResponseStateOnly(this.getAccountState(request && request.state));\r\n      this.authErrorHandler(interactionType,\r\n        thrownError,\r\n        stateOnlyResponse,\r\n        reject);\r\n      return;\r\n    }\r\n\r\n    // if extraScopesToConsent is passed in loginCall, append them to the login request\r\n    const scopes: Array<string> = isLoginCall ? this.appendScopes(request) : request.scopes;\r\n\r\n    // Validate and filter scopes (the validate function will throw if validation fails)\r\n    this.validateInputScope(scopes, !isLoginCall);\r\n\r\n    // Get the account object if a session exists\r\n    const account: Account = (request && request.account && !isLoginCall) ? request.account : this.getAccount();\r\n\r\n    // If no session exists, prompt the user to login.\r\n    if (!account && !ServerRequestParameters.isSSOParam(request)) {\r\n      if (isLoginCall) {\r\n        // extract ADAL id_token if exists\r\n        let adalIdToken = this.extractADALIdToken();\r\n\r\n        // silent login if ADAL id_token is retrieved successfully - SSO\r\n        if (adalIdToken && !scopes) {\r\n          this.logger.info(\"ADAL's idToken exists. Extracting login information from ADAL's idToken \");\r\n          let tokenRequest: AuthenticationParameters = this.buildIDTokenRequest(request);\r\n\r\n          this.silentLogin = true;\r\n          this.acquireTokenSilent(tokenRequest).then(response => {\r\n            this.silentLogin = false;\r\n            this.logger.info(\"Unified cache call is successful\");\r\n\r\n            this.authResponseHandler(interactionType, response, resolve);\r\n            return;\r\n          }, (error) => {\r\n            this.silentLogin = false;\r\n            this.logger.error(\"Error occurred during unified cache ATS: \" + error);\r\n\r\n            // proceed to login since ATS failed\r\n            this.acquireTokenHelper(null, interactionType, isLoginCall, request, scopes, resolve, reject);\r\n          });\r\n        }\r\n        // No ADAL token found, proceed to login\r\n        else {\r\n          this.acquireTokenHelper(null, interactionType, isLoginCall, request, scopes, resolve, reject);\r\n        }\r\n      }\r\n      // AcquireToken call, but no account or context given, so throw error\r\n      else {\r\n        this.logger.info(\"User login is required\");\r\n        throw ClientAuthError.createUserLoginRequiredError();\r\n      }\r\n    }\r\n    // User session exists\r\n    else {\r\n      this.acquireTokenHelper(account, interactionType, isLoginCall, request, scopes, resolve, reject);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   * Helper function to acquireToken\r\n   *\r\n   */\r\n  private acquireTokenHelper(account: Account, interactionType: InteractionType, isLoginCall: boolean, request?: AuthenticationParameters, scopes?: Array<string>, resolve?: any, reject?: any): void {\r\n    // Track the acquireToken progress\r\n    if (isLoginCall) {\r\n      this.loginInProgress = true;\r\n    } else {\r\n      this.acquireTokenInProgress = true;\r\n    }\r\n\r\n    const scope = scopes ? scopes.join(\" \").toLowerCase() : this.clientId.toLowerCase();\r\n\r\n    let serverAuthenticationRequest: ServerRequestParameters;\r\n    const acquireTokenAuthority = (!isLoginCall && request && request.authority) ? AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority) : this.authorityInstance;\r\n\r\n    let popUpWindow: Window;\r\n    if (interactionType === Constants.interactionTypePopup) {\r\n      // Generate a popup window\r\n      popUpWindow = this.openWindow(\"about:blank\", \"_blank\", 1, this, resolve, reject);\r\n      if (!popUpWindow) {\r\n        // We pass reject in openWindow, we reject there during an error\r\n        return;\r\n      }\r\n    }\r\n\r\n    acquireTokenAuthority.resolveEndpointsAsync().then(() => {\r\n      // On Fulfillment\r\n      const responseType: string = isLoginCall ? ResponseTypes.id_token : this.getTokenType(account, scopes, false);\r\n      let loginStartPage: string;\r\n\r\n      if (isLoginCall) {\r\n        // if the user sets the login start page - angular only??\r\n        loginStartPage = this.cacheStorage.getItem(Constants.angularLoginRequest);\r\n        if (!loginStartPage || loginStartPage === \"\") {\r\n          loginStartPage = window.location.href;\r\n        } else {\r\n          this.cacheStorage.setItem(Constants.angularLoginRequest, \"\");\r\n        }\r\n      }\r\n\r\n      serverAuthenticationRequest = new ServerRequestParameters(\r\n        acquireTokenAuthority,\r\n        this.clientId,\r\n        scopes,\r\n        responseType,\r\n        this.getRedirectUri(),\r\n        request && request.state\r\n      );\r\n\r\n      this.updateCacheEntries(serverAuthenticationRequest, account, loginStartPage);\r\n\r\n      // populate QueryParameters (sid/login_hint/domain_hint) and any other extraQueryParameters set by the developer\r\n      serverAuthenticationRequest.populateQueryParams(account, request);\r\n\r\n      // Construct urlNavigate\r\n      let urlNavigate = UrlUtils.createNavigateUrl(serverAuthenticationRequest) + Constants.response_mode_fragment;\r\n\r\n      // set state in cache\r\n      if (interactionType === Constants.interactionTypeRedirect) {\r\n        if (!isLoginCall) {\r\n          this.cacheStorage.setItem(Constants.stateAcquireToken, serverAuthenticationRequest.state, this.inCookie);\r\n        }\r\n      } else if (interactionType === Constants.interactionTypePopup) {\r\n        window.renewStates.push(serverAuthenticationRequest.state);\r\n        window.requestType = isLoginCall ? Constants.login : Constants.renewToken;\r\n\r\n        // Register callback to capture results from server\r\n        this.registerCallback(serverAuthenticationRequest.state, scope, resolve, reject);\r\n      } else {\r\n        throw ClientAuthError.createInvalidInteractionTypeError();\r\n      }\r\n\r\n      // prompt user for interaction\r\n      this.navigateWindow(urlNavigate, popUpWindow);\r\n    }).catch((err) => {\r\n      this.logger.warning(\"could not resolve endpoints\");\r\n      this.authErrorHandler(interactionType, ClientAuthError.createEndpointResolutionError(err.toString), buildResponseStateOnly(request.state), reject);\r\n      if (popUpWindow) {\r\n        popUpWindow.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Use this function to obtain a token before every call to the API / resource provider\r\n   *\r\n   * MSAL return's a cached token when available\r\n   * Or it send's a request to the STS to obtain a new token using a hidden iframe.\r\n   *\r\n   * @param {@link AuthenticationParameters}\r\n   *\r\n   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n   * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n   *\r\n   */\r\n  @resolveTokenOnlyIfOutOfIframe\r\n  acquireTokenSilent(request: AuthenticationParameters): Promise<AuthResponse> {\r\n    if (!request) {\r\n      throw ClientConfigurationError.createEmptyRequestError();\r\n    }\r\n    return new Promise<AuthResponse>((resolve, reject) => {\r\n\r\n      // Validate and filter scopes (the validate function will throw if validation fails)\r\n      this.validateInputScope(request.scopes, true);\r\n\r\n      const scope = request.scopes.join(\" \").toLowerCase();\r\n\r\n      // if the developer passes an account, give that account the priority\r\n      const account: Account = request.account || this.getAccount();\r\n\r\n      // extract if there is an adalIdToken stashed in the cache\r\n      const adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\r\n\r\n      //if there is no account logged in and no login_hint/sid is passed in the request\r\n      if (!account && !(request.sid  || request.loginHint) && StringUtils.isEmpty(adalIdToken) ) {\r\n        this.logger.info(\"User login is required\");\r\n        return reject(ClientAuthError.createUserLoginRequiredError());\r\n      }\r\n\r\n      const responseType = this.getTokenType(account, request.scopes, true);\r\n\r\n      let serverAuthenticationRequest = new ServerRequestParameters(\r\n        AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority),\r\n        this.clientId,\r\n        request.scopes,\r\n        responseType,\r\n        this.getRedirectUri(),\r\n        request && request.state\r\n      );\r\n      // populate QueryParameters (sid/login_hint/domain_hint) and any other extraQueryParameters set by the developer\r\n      if (ServerRequestParameters.isSSOParam(request) || account) {\r\n        serverAuthenticationRequest.populateQueryParams(account, request);\r\n      }\r\n      //if user didn't pass login_hint/sid and adal's idtoken is present, extract the login_hint from the adalIdToken\r\n      else if (!account && !StringUtils.isEmpty(adalIdToken)) {\r\n        // if adalIdToken exists, extract the SSO info from the same\r\n        const adalIdTokenObject = TokenUtils.extractIdToken(adalIdToken);\r\n        this.logger.verbose(\"ADAL's idToken exists. Extracting login information from ADAL's idToken \");\r\n        serverAuthenticationRequest.populateQueryParams(account, null, adalIdTokenObject);\r\n      }\r\n      const userContainedClaims = request.claimsRequest || serverAuthenticationRequest.claimsValue;\r\n\r\n      let authErr: AuthError;\r\n      let cacheResultResponse;\r\n\r\n      if (!userContainedClaims && !request.forceRefresh) {\r\n        try {\r\n          cacheResultResponse = this.getCachedToken(serverAuthenticationRequest, account);\r\n        } catch (e) {\r\n          authErr = e;\r\n        }\r\n      }\r\n\r\n      // resolve/reject based on cacheResult\r\n      if (cacheResultResponse) {\r\n        this.logger.info(\"Token is already in cache for scope:\" + scope);\r\n        resolve(cacheResultResponse);\r\n        return null;\r\n      }\r\n      else if (authErr) {\r\n        this.logger.infoPii(authErr.errorCode + \":\" + authErr.errorMessage);\r\n        reject(authErr);\r\n        return null;\r\n      }\r\n      // else proceed with login\r\n      else {\r\n        let logMessage;\r\n        if (userContainedClaims) {\r\n          logMessage = \"Skipped cache lookup since claims were given.\";\r\n        } else if (request.forceRefresh) {\r\n          logMessage = \"Skipped cache lookup since request.forceRefresh option was set to true\";\r\n        } else {\r\n          logMessage = \"Token is not in cache for scope:\" + scope;\r\n        }\r\n        this.logger.verbose(logMessage);\r\n\r\n        // Cache result can return null if cache is empty. In that case, set authority to default value if no authority is passed to the api.\r\n        if (!serverAuthenticationRequest.authorityInstance) {\r\n            serverAuthenticationRequest.authorityInstance = request.authority ? AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority) : this.authorityInstance;\r\n        }\r\n        // cache miss\r\n        return serverAuthenticationRequest.authorityInstance.resolveEndpointsAsync()\r\n        .then(() => {\r\n          // refresh attempt with iframe\r\n          // Already renewing for this scope, callback when we get the token.\r\n          if (window.activeRenewals[scope]) {\r\n            this.logger.verbose(\"Renew token for scope: \" + scope + \" is in progress. Registering callback\");\r\n            // Active renewals contains the state for each renewal.\r\n            this.registerCallback(window.activeRenewals[scope], scope, resolve, reject);\r\n          }\r\n          else {\r\n            if (request.scopes && request.scopes.indexOf(this.clientId) > -1 && request.scopes.length === 1) {\r\n              // App uses idToken to send to api endpoints\r\n              // Default scope is tracked as clientId to store this token\r\n              this.logger.verbose(\"renewing idToken\");\r\n              this.silentLogin = true;\r\n              this.renewIdToken(request.scopes, resolve, reject, account, serverAuthenticationRequest);\r\n            } else {\r\n              // renew access token\r\n              this.logger.verbose(\"renewing accesstoken\");\r\n              this.renewToken(request.scopes, resolve, reject, account, serverAuthenticationRequest);\r\n            }\r\n          }\r\n        }).catch((err) => {\r\n          this.logger.warning(\"could not resolve endpoints\");\r\n          reject(ClientAuthError.createEndpointResolutionError(err.toString()));\r\n          return null;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Popup Window Creation\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Used to send the user to the redirect_uri after authentication is complete. The user's bearer token is attached to the URI fragment as an id_token/access_token field.\r\n   * This function also closes the popup window after redirection.\r\n   *\r\n   * @param urlNavigate\r\n   * @param title\r\n   * @param interval\r\n   * @param instance\r\n   * @param resolve\r\n   * @param reject\r\n   * @ignore\r\n   */\r\n  private openWindow(urlNavigate: string, title: string, interval: number, instance: this, resolve?: Function, reject?: Function): Window {\r\n    // Generate a popup window\r\n    var popupWindow: Window;\r\n    try {\r\n      popupWindow = this.openPopup(urlNavigate, title, Constants.popUpWidth, Constants.popUpHeight);\r\n    } catch (e) {\r\n      instance.loginInProgress = false;\r\n      instance.acquireTokenInProgress = false;\r\n\r\n      this.logger.info(ClientAuthErrorMessage.popUpWindowError.code + \":\" + ClientAuthErrorMessage.popUpWindowError.desc);\r\n      this.cacheStorage.setItem(Constants.msalError, ClientAuthErrorMessage.popUpWindowError.code);\r\n      this.cacheStorage.setItem(Constants.msalErrorDescription, ClientAuthErrorMessage.popUpWindowError.desc);\r\n      if (reject) {\r\n        reject(ClientAuthError.createPopupWindowError());\r\n      }\r\n      return null;\r\n    }\r\n\r\n    // Push popup window handle onto stack for tracking\r\n    window.openedWindows.push(popupWindow);\r\n\r\n    const pollTimer = window.setInterval(() => {\r\n      // If popup closed or login in progress, cancel login\r\n      if (popupWindow && popupWindow.closed && (instance.loginInProgress || instance.acquireTokenInProgress)) {\r\n        if (reject) {\r\n          reject(ClientAuthError.createUserCancelledError());\r\n        }\r\n        window.clearInterval(pollTimer);\r\n        if (this.config.framework.isAngular) {\r\n            this.broadcast(\"msal:popUpClosed\", ClientAuthErrorMessage.userCancelledError.code + Constants.resourceDelimiter + ClientAuthErrorMessage.userCancelledError.desc);\r\n            return;\r\n        }\r\n        instance.loginInProgress = false;\r\n        instance.acquireTokenInProgress = false;\r\n      }\r\n\r\n      try {\r\n        const popUpWindowLocation = popupWindow.location;\r\n\r\n        // If the popup hash changes, close the popup window\r\n        if (popUpWindowLocation.href.indexOf(this.getRedirectUri()) !== -1) {\r\n          window.clearInterval(pollTimer);\r\n          instance.loginInProgress = false;\r\n          instance.acquireTokenInProgress = false;\r\n          this.logger.info(\"Closing popup window\");\r\n          // TODO: Check how this can be extracted for any framework specific code?\r\n          if (this.config.framework.isAngular) {\r\n              this.broadcast(\"msal:popUpHashChanged\", popUpWindowLocation.hash);\r\n              for (let i = 0; i < window.openedWindows.length; i++) {\r\n                  window.openedWindows[i].close();\r\n              }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        // Cross Domain url check error.\r\n        // Will be thrown until AAD redirects the user back to the app\"s root page with the token.\r\n        // No need to log or throw this error as it will create unnecessary traffic.\r\n      }\r\n    },\r\n    interval);\r\n\r\n    return popupWindow;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Configures popup window for login.\r\n   *\r\n   * @param urlNavigate\r\n   * @param title\r\n   * @param popUpWidth\r\n   * @param popUpHeight\r\n   * @ignore\r\n   * @hidden\r\n   */\r\n  private openPopup(urlNavigate: string, title: string, popUpWidth: number, popUpHeight: number) {\r\n    try {\r\n      /**\r\n       * adding winLeft and winTop to account for dual monitor\r\n       * using screenLeft and screenTop for IE8 and earlier\r\n       */\r\n      const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n      const winTop = window.screenTop ? window.screenTop : window.screenY;\r\n      /**\r\n       * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n       * using document.documentElement.clientWidth for IE8 and earlier\r\n       */\r\n      const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n      const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n      const left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n      const top = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n\r\n      // open the window\r\n      const popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top + \", left=\" + left);\r\n      if (!popupWindow) {\r\n        throw ClientAuthError.createPopupWindowError();\r\n      }\r\n      if (popupWindow.focus) {\r\n        popupWindow.focus();\r\n      }\r\n\r\n      return popupWindow;\r\n    } catch (e) {\r\n      this.logger.error(\"error opening popup \" + e.message);\r\n      this.loginInProgress = false;\r\n      this.acquireTokenInProgress = false;\r\n      throw ClientAuthError.createPopupWindowError(e.toString());\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Iframe Management\r\n\r\n  /**\r\n   * @hidden\r\n   * Returns whether current window is in ifram for token renewal\r\n   * @ignore\r\n   */\r\n  public isInIframe() {\r\n      return window.parent !== window;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Returns whether parent window exists and has msal\r\n   */\r\n  private parentIsMsal() {\r\n    return window.parent !== window && window.parent.msal;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left.\r\n   * registered when network errors occur and subsequent token requests for same resource are registered to the pending request.\r\n   * @ignore\r\n   */\r\n  private loadIframeTimeout(urlNavigate: string, frameName: string, scope: string): void {\r\n    //set iframe session to pending\r\n    const expectedState = window.activeRenewals[scope];\r\n    this.logger.verbose(\"Set loading state to pending for: \" + scope + \":\" + expectedState);\r\n    this.cacheStorage.setItem(Constants.renewStatus + expectedState, Constants.tokenRenewStatusInProgress);\r\n    this.loadFrame(urlNavigate, frameName);\r\n    setTimeout(() => {\r\n      if (this.cacheStorage.getItem(Constants.renewStatus + expectedState) === Constants.tokenRenewStatusInProgress) {\r\n        // fail the iframe session if it\"s in pending state\r\n        this.logger.verbose(\"Loading frame has timed out after: \" + (this.config.system.loadFrameTimeout / 1000) + \" seconds for scope \" + scope + \":\" + expectedState);\r\n        // Error after timeout\r\n        if (expectedState && window.callbackMappedToRenewStates[expectedState]) {\r\n          window.callbackMappedToRenewStates[expectedState](null, ClientAuthError.createTokenRenewalTimeoutError());\r\n        }\r\n\r\n        this.cacheStorage.setItem(Constants.renewStatus + expectedState, Constants.tokenRenewStatusCancelled);\r\n      }\r\n    }, this.config.system.loadFrameTimeout);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Loads iframe with authorization endpoint URL\r\n   * @ignore\r\n   */\r\n  private loadFrame(urlNavigate: string, frameName: string): void {\r\n    // This trick overcomes iframe navigation in IE\r\n    // IE does not load the page consistently in iframe\r\n    this.logger.info(\"LoadFrame: \" + frameName);\r\n    const frameCheck = frameName;\r\n\r\n    setTimeout(() => {\r\n      const frameHandle = this.addHiddenIFrame(frameCheck);\r\n      if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n        frameHandle.src = urlNavigate;\r\n        this.logger.infoPii(\"Frame Name : \" + frameName + \" Navigated to: \" + urlNavigate);\r\n      }\r\n    },\r\n    this.config.system.navigateFrameWait);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Adds the hidden iframe for silent token renewal.\r\n   * @ignore\r\n   */\r\n  private addHiddenIFrame(iframeId: string): HTMLIFrameElement {\r\n    if (typeof iframeId === \"undefined\") {\r\n      return null;\r\n    }\r\n\r\n    this.logger.info(\"Add msal frame to document:\" + iframeId);\r\n    let adalFrame = document.getElementById(iframeId) as HTMLIFrameElement;\r\n    if (!adalFrame) {\r\n      if (document.createElement &&\r\n        document.documentElement &&\r\n        (window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1)) {\r\n        const ifr = document.createElement(\"iframe\");\r\n        ifr.setAttribute(\"id\", iframeId);\r\n        ifr.style.visibility = \"hidden\";\r\n        ifr.style.position = \"absolute\";\r\n        ifr.style.width = ifr.style.height = \"0\";\r\n        ifr.style.border = \"0\";\r\n        adalFrame = (document.getElementsByTagName(\"body\")[0].appendChild(ifr) as HTMLIFrameElement);\r\n      } else if (document.body && document.body.insertAdjacentHTML) {\r\n          document.body.insertAdjacentHTML(\"beforeend\", \"<iframe name='\" + iframeId + \"' id='\" + iframeId + \"' style='display:none'></iframe>\");\r\n      }\r\n\r\n      if (window.frames && window.frames[iframeId]) {\r\n        adalFrame = window.frames[iframeId];\r\n      }\r\n    }\r\n\r\n    return adalFrame;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region General Helpers\r\n\r\n  /**\r\n   * @hidden\r\n   * Used to redirect the browser to the STS authorization endpoint\r\n   * @param {string} urlNavigate - URL of the authorization endpoint\r\n   */\r\n  private navigateWindow(urlNavigate: string, popupWindow?: Window) {\r\n    // Navigate if valid URL\r\n    if (urlNavigate && !StringUtils.isEmpty(urlNavigate)) {\r\n      let navigateWindow: Window = popupWindow ? popupWindow : window;\r\n      let logMessage: string = popupWindow ? \"Navigated Popup window to:\" + urlNavigate : \"Navigate to:\" + urlNavigate;\r\n      this.logger.infoPii(logMessage);\r\n      navigateWindow.location.replace(urlNavigate);\r\n    }\r\n    else {\r\n      this.logger.info(\"Navigate url is empty\");\r\n      throw AuthError.createUnexpectedError(\"Navigate url is empty\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Used to add the developer requested callback to the array of callbacks for the specified scopes. The updated array is stored on the window object\r\n   * @param {string} expectedState - Unique state identifier (guid).\r\n   * @param {string} scope - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n   * @param {Function} resolve - The resolve function of the promise object.\r\n   * @param {Function} reject - The reject function of the promise object.\r\n   * @ignore\r\n   */\r\n  private registerCallback(expectedState: string, scope: string, resolve: Function, reject: Function): void {\r\n    // track active renewals\r\n    window.activeRenewals[scope] = expectedState;\r\n\r\n    // initialize callbacks mapped array\r\n    if (!window.promiseMappedToRenewStates[expectedState]) {\r\n        window.promiseMappedToRenewStates[expectedState] = [];\r\n    }\r\n    // indexing on the current state, push the callback params to callbacks mapped\r\n    window.promiseMappedToRenewStates[expectedState].push({ resolve: resolve, reject: reject });\r\n\r\n    // Store the server esponse in the current window??\r\n    if (!window.callbackMappedToRenewStates[expectedState]) {\r\n      window.callbackMappedToRenewStates[expectedState] =\r\n      (response: AuthResponse, error: AuthError) => {\r\n        // reset active renewals\r\n        window.activeRenewals[scope] = null;\r\n\r\n        // for all promiseMappedtoRenewStates for a given 'state' - call the reject/resolve with error/token respectively\r\n        for (let i = 0; i < window.promiseMappedToRenewStates[expectedState].length; ++i) {\r\n          try {\r\n            if (error) {\r\n                window.promiseMappedToRenewStates[expectedState][i].reject(error);\r\n            } else if (response) {\r\n                window.promiseMappedToRenewStates[expectedState][i].resolve(response);\r\n            } else {\r\n              throw AuthError.createUnexpectedError(\"Error and response are both null\");\r\n            }\r\n          } catch (e) {\r\n            this.logger.warning(e);\r\n          }\r\n        }\r\n\r\n        // reset\r\n        window.promiseMappedToRenewStates[expectedState] = null;\r\n        window.callbackMappedToRenewStates[expectedState] = null;\r\n      };\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Logout\r\n\r\n  /**\r\n   * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n   * Default behaviour is to redirect the user to `window.location.href`.\r\n   */\r\n  logout(): void {\r\n    this.clearCache();\r\n    this.account = null;\r\n    let logout = \"\";\r\n    if (this.getPostLogoutRedirectUri()) {\r\n      logout = \"post_logout_redirect_uri=\" + encodeURIComponent(this.getPostLogoutRedirectUri());\r\n    }\r\n    this.authorityInstance.resolveEndpointsAsync().then(authority => {\r\n        const urlNavigate = authority.EndSessionEndpoint\r\n            ? `${authority.EndSessionEndpoint}?${logout}`\r\n            : `${this.authority}oauth2/v2.0/logout?${logout}`;\r\n        this.navigateWindow(urlNavigate);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Clear all access tokens in the cache.\r\n   * @ignore\r\n   */\r\n  protected clearCache(): void {\r\n    window.renewStates = [];\r\n    const accessTokenItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\r\n    for (let i = 0; i < accessTokenItems.length; i++) {\r\n      this.cacheStorage.removeItem(JSON.stringify(accessTokenItems[i].key));\r\n    }\r\n    this.cacheStorage.resetCacheItems();\r\n    this.cacheStorage.clearCookie();\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Clear a given access token from the cache.\r\n   *\r\n   * @param accessToken\r\n   */\r\n  protected clearCacheForScope(accessToken: string) {\r\n    const accessTokenItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\r\n    for (let i = 0; i < accessTokenItems.length; i++) {\r\n        let token = accessTokenItems[i];\r\n        if (token.value.accessToken === accessToken) {\r\n            this.cacheStorage.removeItem(JSON.stringify(token.key));\r\n        }\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Response\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   * Checks if the redirect response is received from the STS. In case of redirect, the url fragment has either id_token, access_token or error.\r\n   * @param {string} hash - Hash passed from redirect page.\r\n   * @returns {Boolean} - true if response contains id_token, access_token or error, false otherwise.\r\n   */\r\n  isCallback(hash: string): boolean {\r\n    this.logger.info(\"isCallback will be deprecated in favor of urlContainsHash in MSAL.js v2.0.\");\r\n    return this.urlContainsHash(hash);\r\n  }\r\n\r\n  private urlContainsHash(urlString: string): boolean {\r\n    const parameters = this.deserializeHash(urlString);\r\n    return (\r\n      parameters.hasOwnProperty(Constants.errorDescription) ||\r\n      parameters.hasOwnProperty(Constants.error) ||\r\n      parameters.hasOwnProperty(Constants.accessToken) ||\r\n      parameters.hasOwnProperty(Constants.idToken)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Used to call the constructor callback with the token/error\r\n   * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n   */\r\n  private processCallBack(hash: string, stateInfo: ResponseStateInfo, parentCallback?: Function): void {\r\n    this.logger.info(\"Processing the callback from redirect response\");\r\n    // get the state info from the hash\r\n    if (!stateInfo) {\r\n      stateInfo = this.getResponseState(hash);\r\n    }\r\n\r\n    let response : AuthResponse;\r\n    let authErr : AuthError;\r\n    // Save the token info from the hash\r\n    try {\r\n      response = this.saveTokenFromHash(hash, stateInfo);\r\n    } catch (err) {\r\n      authErr = err;\r\n    }\r\n\r\n    // remove hash from the cache\r\n    this.cacheStorage.removeItem(Constants.urlHash);\r\n\r\n    try {\r\n      // Clear the cookie in the hash\r\n      this.cacheStorage.clearCookie();\r\n      const accountState: string = this.getAccountState(stateInfo.state);\r\n      if (response) {\r\n        if ((stateInfo.requestType === Constants.renewToken) || response.accessToken) {\r\n          if (window.parent !== window) {\r\n            this.logger.verbose(\"Window is in iframe, acquiring token silently\");\r\n          } else {\r\n            this.logger.verbose(\"acquiring token interactive in progress\");\r\n          }\r\n          response.tokenType = Constants.accessToken;\r\n        }\r\n        else if (stateInfo.requestType === Constants.login) {\r\n          response.tokenType = Constants.idToken;\r\n        }\r\n        if (!parentCallback) {\r\n          this.authResponseHandler(Constants.interactionTypeRedirect, response);\r\n          return;\r\n        }\r\n      } else if (!parentCallback) {\r\n        this.authErrorHandler(Constants.interactionTypeRedirect, authErr, buildResponseStateOnly(accountState));\r\n        return;\r\n      }\r\n\r\n      parentCallback(response, authErr);\r\n    } catch (err) {\r\n      this.logger.error(\"Error occurred in token received callback function: \" + err);\r\n      throw ClientAuthError.createErrorInCallbackFunction(err.toString());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * This method must be called for processing the response received from the STS. It extracts the hash, processes the token or error information and saves it in the cache. It then\r\n   * calls the registered callbacks in case of redirect or resolves the promises with the result.\r\n   * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n   */\r\n  private handleAuthenticationResponse(hash: string): void {\r\n    // retrieve the hash\r\n    if (hash == null) {\r\n      hash = window.location.hash;\r\n    }\r\n\r\n    let self = null;\r\n    let isPopup: boolean = false;\r\n    let isWindowOpenerMsal = false;\r\n\r\n    // Check if the current window opened the iFrame/popup\r\n    try {\r\n      isWindowOpenerMsal = window.opener && window.opener.msal && window.opener.msal !== window.msal;\r\n    } catch (err) {\r\n      // err = SecurityError: Blocked a frame with origin \"[url]\" from accessing a cross-origin frame.\r\n      isWindowOpenerMsal = false;\r\n    }\r\n\r\n    // Set the self to the window that created the popup/iframe\r\n    if (isWindowOpenerMsal) {\r\n      self = window.opener.msal;\r\n      isPopup = true;\r\n    } else if (window.parent && window.parent.msal) {\r\n      self = window.parent.msal;\r\n    }\r\n\r\n    // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\r\n    const stateInfo = self.getResponseState(hash);\r\n\r\n    let tokenResponseCallback: (response: AuthResponse, error: AuthError) => void = null;\r\n\r\n    self.logger.info(\"Returned from redirect url\");\r\n    // If parent window is the msal instance which opened the current window (iframe)\r\n    if (this.parentIsMsal()) {\r\n        tokenResponseCallback = window.parent.callbackMappedToRenewStates[stateInfo.state];\r\n    }\r\n    // Current window is window opener (popup)\r\n    else if (isWindowOpenerMsal) {\r\n        tokenResponseCallback = window.opener.callbackMappedToRenewStates[stateInfo.state];\r\n    }\r\n    // Redirect cases\r\n    else {\r\n      tokenResponseCallback = null;\r\n      // if set to navigate to loginRequest page post login\r\n      if (self.config.auth.navigateToLoginRequestUrl) {\r\n        self.cacheStorage.setItem(Constants.urlHash, hash);\r\n        if (window.parent === window && !isPopup) {\r\n          window.location.href = self.cacheStorage.getItem(Constants.loginRequest, self.inCookie);\r\n        }\r\n        return;\r\n      }\r\n      else {\r\n        window.location.hash = \"\";\r\n      }\r\n      if (!this.redirectCallbacksSet) {\r\n        // We reached this point too early - cache hash, return and process in handleRedirectCallbacks\r\n        self.cacheStorage.setItem(Constants.urlHash, hash);\r\n        return;\r\n      }\r\n    }\r\n\r\n    self.processCallBack(hash, stateInfo, tokenResponseCallback);\r\n\r\n    // If current window is opener, close all windows\r\n    if (isWindowOpenerMsal) {\r\n      for (let i = 0; i < window.opener.openedWindows.length; i++) {\r\n        window.opener.openedWindows[i].close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Returns deserialized portion of URL hash\r\n   * @param hash\r\n   */\r\n  private deserializeHash(urlFragment: string) {\r\n    let hash = UrlUtils.getHashFromUrl(urlFragment);\r\n    return CryptoUtils.deserialize(hash);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Creates a stateInfo object from the URL fragment and returns it.\r\n   * @param {string} hash  -  Hash passed from redirect page\r\n   * @returns {TokenResponse} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n   * @ignore\r\n   */\r\n  protected getResponseState(hash: string): ResponseStateInfo {\r\n    const parameters = this.deserializeHash(hash);\r\n    let stateResponse: ResponseStateInfo;\r\n    if (!parameters) {\r\n      throw AuthError.createUnexpectedError(\"Hash was not parsed correctly.\");\r\n    }\r\n    if (parameters.hasOwnProperty(\"state\")) {\r\n      stateResponse = {\r\n        requestType: Constants.unknown,\r\n        state: parameters.state,\r\n        stateMatch: false\r\n      };\r\n    } else {\r\n      throw AuthError.createUnexpectedError(\"Hash does not contain state.\");\r\n    }\r\n    // async calls can fire iframe and login request at the same time if developer does not use the API as expected\r\n    // incoming callback needs to be looked up to find the request type\r\n\r\n    // loginRedirect\r\n    if (stateResponse.state === this.cacheStorage.getItem(Constants.stateLogin, this.inCookie) || stateResponse.state === this.silentAuthenticationState) { // loginRedirect\r\n      stateResponse.requestType = Constants.login;\r\n      stateResponse.stateMatch = true;\r\n      return stateResponse;\r\n    }\r\n    // acquireTokenRedirect\r\n    else if (stateResponse.state === this.cacheStorage.getItem(Constants.stateAcquireToken, this.inCookie)) { //acquireTokenRedirect\r\n      stateResponse.requestType = Constants.renewToken;\r\n      stateResponse.stateMatch = true;\r\n      return stateResponse;\r\n    }\r\n\r\n    // external api requests may have many renewtoken requests for different resource\r\n    if (!stateResponse.stateMatch) {\r\n      stateResponse.requestType = window.requestType;\r\n      const statesInParentContext = window.renewStates;\r\n      for (let i = 0; i < statesInParentContext.length; i++) {\r\n        if (statesInParentContext[i] === stateResponse.state) {\r\n          stateResponse.stateMatch = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return stateResponse;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Token Processing (Extract to TokenProcessing.ts)\r\n\r\n  /**\r\n   * @hidden\r\n   * Used to get token for the specified set of scopes from the cache\r\n   * @param {@link ServerRequestParameters} - Request sent to the STS to obtain an id_token/access_token\r\n   * @param {Account} account - Account for which the scopes were requested\r\n   */\r\n  private getCachedToken(serverAuthenticationRequest: ServerRequestParameters, account: Account): AuthResponse {\r\n    let accessTokenCacheItem: AccessTokenCacheItem = null;\r\n    const scopes = serverAuthenticationRequest.scopes;\r\n\r\n    // filter by clientId and account\r\n    const tokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, account ? account.homeAccountIdentifier : null);\r\n\r\n    // No match found after initial filtering\r\n    if (tokenCacheItems.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const filteredItems: Array<AccessTokenCacheItem> = [];\r\n\r\n    // if no authority passed\r\n    if (!serverAuthenticationRequest.authority) {\r\n      // filter by scope\r\n      for (let i = 0; i < tokenCacheItems.length; i++) {\r\n        const cacheItem = tokenCacheItems[i];\r\n        const cachedScopes = cacheItem.key.scopes.split(\" \");\r\n        if (ScopeSet.containsScope(cachedScopes, scopes)) {\r\n          filteredItems.push(cacheItem);\r\n        }\r\n      }\r\n\r\n      // if only one cached token found\r\n      if (filteredItems.length === 1) {\r\n        accessTokenCacheItem = filteredItems[0];\r\n        serverAuthenticationRequest.authorityInstance = AuthorityFactory.CreateInstance(accessTokenCacheItem.key.authority, this.config.auth.validateAuthority);\r\n      }\r\n      // if more than one cached token is found\r\n      else if (filteredItems.length > 1) {\r\n        throw ClientAuthError.createMultipleMatchingTokensInCacheError(scopes.toString());\r\n      }\r\n      // if no match found, check if there was a single authority used\r\n      else {\r\n        const authorityList = this.getUniqueAuthority(tokenCacheItems, \"authority\");\r\n        if (authorityList.length > 1) {\r\n          throw ClientAuthError.createMultipleAuthoritiesInCacheError(scopes.toString());\r\n        }\r\n\r\n        serverAuthenticationRequest.authorityInstance = AuthorityFactory.CreateInstance(authorityList[0], this.config.auth.validateAuthority);\r\n      }\r\n    }\r\n    // if an authority is passed in the API\r\n    else {\r\n      // filter by authority and scope\r\n      for (let i = 0; i < tokenCacheItems.length; i++) {\r\n        const cacheItem = tokenCacheItems[i];\r\n        const cachedScopes = cacheItem.key.scopes.split(\" \");\r\n        if (ScopeSet.containsScope(cachedScopes, scopes) && UrlUtils.CanonicalizeUri(cacheItem.key.authority) === serverAuthenticationRequest.authority) {\r\n          filteredItems.push(cacheItem);\r\n        }\r\n      }\r\n      // no match\r\n      if (filteredItems.length === 0) {\r\n        return null;\r\n      }\r\n      // if only one cachedToken Found\r\n      else if (filteredItems.length === 1) {\r\n        accessTokenCacheItem = filteredItems[0];\r\n      }\r\n      else {\r\n        // if more than cached token is found\r\n        throw ClientAuthError.createMultipleMatchingTokensInCacheError(scopes.toString());\r\n      }\r\n    }\r\n\r\n    if (accessTokenCacheItem != null) {\r\n      let expired = Number(accessTokenCacheItem.value.expiresIn);\r\n      // If expiration is within offset, it will force renew\r\n      const offset = this.config.system.tokenRenewalOffsetSeconds || 300;\r\n      if (expired && (expired > TimeUtils.now() + offset)) {\r\n        let idTokenObj = new IdToken(accessTokenCacheItem.value.idToken);\r\n        if (!account) {\r\n          account = this.getAccount();\r\n          if (!account) {\r\n            throw AuthError.createUnexpectedError(\"Account should not be null here.\");\r\n          }\r\n        }\r\n        const aState = this.getAccountState(serverAuthenticationRequest.state);\r\n        let response : AuthResponse = {\r\n          uniqueId: \"\",\r\n          tenantId: \"\",\r\n          tokenType: (accessTokenCacheItem.value.idToken === accessTokenCacheItem.value.accessToken) ? Constants.idToken : Constants.accessToken,\r\n          idToken: idTokenObj,\r\n          idTokenClaims: idTokenObj.claims,\r\n          accessToken: accessTokenCacheItem.value.accessToken,\r\n          scopes: accessTokenCacheItem.key.scopes.split(\" \"),\r\n          expiresOn: new Date(expired * 1000),\r\n          account: account,\r\n          accountState: aState,\r\n        };\r\n        ResponseUtils.setResponseIdToken(response, idTokenObj);\r\n        return response;\r\n      } else {\r\n        this.cacheStorage.removeItem(JSON.stringify(filteredItems[0].key));\r\n        return null;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Used to get a unique list of authoritues from the cache\r\n   * @param {Array<AccessTokenCacheItem>}  accessTokenCacheItems - accessTokenCacheItems saved in the cache\r\n   * @ignore\r\n   */\r\n  private getUniqueAuthority(accessTokenCacheItems: Array<AccessTokenCacheItem>, property: string): Array<string> {\r\n    const authorityList: Array<string> = [];\r\n    const flags: Array<string> = [];\r\n    accessTokenCacheItems.forEach(element => {\r\n      if (element.key.hasOwnProperty(property) && (flags.indexOf(element.key[property]) === -1)) {\r\n        flags.push(element.key[property]);\r\n        authorityList.push(element.key[property]);\r\n      }\r\n    });\r\n    return authorityList;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Check if ADAL id_token exists and return if exists.\r\n   *\r\n   */\r\n  private extractADALIdToken(): any {\r\n    const adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\r\n    if (!StringUtils.isEmpty(adalIdToken)) {\r\n      return TokenUtils.extractIdToken(adalIdToken);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Acquires access token using a hidden iframe.\r\n   * @ignore\r\n   */\r\n  private renewToken(scopes: Array<string>, resolve: Function, reject: Function, account: Account, serverAuthenticationRequest: ServerRequestParameters): void {\r\n    const scope = scopes.join(\" \").toLowerCase();\r\n    this.logger.verbose(\"renewToken is called for scope:\" + scope);\r\n    const frameHandle = this.addHiddenIFrame(\"msalRenewFrame\" + scope);\r\n\r\n    this.updateCacheEntries(serverAuthenticationRequest, account);\r\n    this.logger.verbose(\"Renew token Expected state: \" + serverAuthenticationRequest.state);\r\n\r\n    // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\r\n    let urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none;\r\n\r\n    window.renewStates.push(serverAuthenticationRequest.state);\r\n    window.requestType = Constants.renewToken;\r\n    this.registerCallback(serverAuthenticationRequest.state, scope, resolve, reject);\r\n    this.logger.infoPii(\"Navigate to:\" + urlNavigate);\r\n    frameHandle.src = \"about:blank\";\r\n    this.loadIframeTimeout(urlNavigate, \"msalRenewFrame\" + scope, scope);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Renews idtoken for app\"s own backend when clientId is passed as a single scope in the scopes array.\r\n   * @ignore\r\n   */\r\n  private renewIdToken(scopes: Array<string>, resolve: Function, reject: Function, account: Account, serverAuthenticationRequest: ServerRequestParameters): void {\r\n\r\n    this.logger.info(\"renewidToken is called\");\r\n    const frameHandle = this.addHiddenIFrame(\"msalIdTokenFrame\");\r\n\r\n    this.updateCacheEntries(serverAuthenticationRequest, account);\r\n\r\n    this.logger.verbose(\"Renew Idtoken Expected state: \" + serverAuthenticationRequest.state);\r\n\r\n    // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\r\n    let urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none;\r\n\r\n    if (this.silentLogin) {\r\n        window.requestType = Constants.login;\r\n        this.silentAuthenticationState = serverAuthenticationRequest.state;\r\n    } else {\r\n        window.requestType = Constants.renewToken;\r\n        window.renewStates.push(serverAuthenticationRequest.state);\r\n    }\r\n\r\n    // note: scope here is clientId\r\n    this.registerCallback(serverAuthenticationRequest.state, this.clientId, resolve, reject);\r\n    this.logger.infoPii(\"Navigate to:\" + urlNavigate);\r\n    frameHandle.src = \"about:blank\";\r\n    this.loadIframeTimeout(urlNavigate, \"msalIdTokenFrame\", this.clientId);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * This method must be called for processing the response received from AAD. It extracts the hash, processes the token or error, saves it in the cache and calls the registered callbacks with the result.\r\n   * @param {string} authority authority received in the redirect response from AAD.\r\n   * @param {TokenResponse} requestInfo an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n   * @param {Account} account account object for which scopes are consented for. The default account is the logged in account.\r\n   * @param {ClientInfo} clientInfo clientInfo received as part of the response comprising of fields uid and utid.\r\n   * @param {IdToken} idToken idToken received as part of the response.\r\n   * @ignore\r\n   * @private\r\n   */\r\n  /* tslint:disable:no-string-literal */\r\n  private saveAccessToken(response: AuthResponse, authority: string, parameters: any, clientInfo: string, idTokenObj: IdToken): AuthResponse {\r\n    let scope: string;\r\n    let accessTokenResponse = { ...response };\r\n    const clientObj: ClientInfo = new ClientInfo(clientInfo);\r\n    let expiration: number;\r\n\r\n    // if the response contains \"scope\"\r\n    if (parameters.hasOwnProperty(\"scope\")) {\r\n      // read the scopes\r\n      scope = parameters[\"scope\"];\r\n      const consentedScopes = scope.split(\" \");\r\n\r\n      // retrieve all access tokens from the cache, remove the dup scores\r\n      const accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, authority);\r\n\r\n      for (let i = 0; i < accessTokenCacheItems.length; i++) {\r\n        const accessTokenCacheItem = accessTokenCacheItems[i];\r\n\r\n        if (accessTokenCacheItem.key.homeAccountIdentifier === response.account.homeAccountIdentifier) {\r\n          const cachedScopes = accessTokenCacheItem.key.scopes.split(\" \");\r\n          if (ScopeSet.isIntersectingScopes(cachedScopes, consentedScopes)) {\r\n            this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Generate and cache accessTokenKey and accessTokenValue\r\n      const expiresIn = TimeUtils.parseExpiresIn(parameters[Constants.expiresIn]);\r\n      expiration = TimeUtils.now() + expiresIn;\r\n      const accessTokenKey = new AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\r\n      const accessTokenValue = new AccessTokenValue(parameters[Constants.accessToken], idTokenObj.rawIdToken, expiration.toString(), clientInfo);\r\n\r\n      this.cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n\r\n      accessTokenResponse.accessToken  = parameters[Constants.accessToken];\r\n      accessTokenResponse.scopes = consentedScopes;\r\n    }\r\n    // if the response does not contain \"scope\" - scope is usually client_id and the token will be id_token\r\n    else {\r\n      scope = this.clientId;\r\n\r\n      // Generate and cache accessTokenKey and accessTokenValue\r\n      const accessTokenKey = new AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\r\n      expiration = Number(idTokenObj.expiration);\r\n      const accessTokenValue = new AccessTokenValue(parameters[Constants.idToken], parameters[Constants.idToken], expiration.toString(), clientInfo);\r\n      this.cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n      accessTokenResponse.scopes = [scope];\r\n      accessTokenResponse.accessToken = parameters[Constants.idToken];\r\n    }\r\n\r\n    if (expiration) {\r\n        accessTokenResponse.expiresOn = new Date(expiration * 1000);\r\n    } else {\r\n        this.logger.error(\"Could not parse expiresIn parameter\");\r\n    }\r\n\r\n    return accessTokenResponse;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the account object.\r\n   * @ignore\r\n   */\r\n  protected saveTokenFromHash(hash: string, stateInfo: ResponseStateInfo): AuthResponse {\r\n    this.logger.info(\"State status:\" + stateInfo.stateMatch + \"; Request type:\" + stateInfo.requestType);\r\n    this.cacheStorage.setItem(Constants.msalError, \"\");\r\n    this.cacheStorage.setItem(Constants.msalErrorDescription, \"\");\r\n\r\n    let response : AuthResponse = {\r\n      uniqueId: \"\",\r\n      tenantId: \"\",\r\n      tokenType: \"\",\r\n      idToken: null,\r\n      idTokenClaims: null,\r\n      accessToken: null,\r\n      scopes: [],\r\n      expiresOn: null,\r\n      account: null,\r\n      accountState: \"\",\r\n    };\r\n\r\n    let error: AuthError;\r\n    const hashParams = this.deserializeHash(hash);\r\n    let authorityKey: string = \"\";\r\n    let acquireTokenAccountKey: string = \"\";\r\n    let idTokenObj: IdToken = null;\r\n\r\n    // If server returns an error\r\n    if (hashParams.hasOwnProperty(Constants.errorDescription) || hashParams.hasOwnProperty(Constants.error)) {\r\n      this.logger.infoPii(\"Error :\" + hashParams[Constants.error] + \"; Error description:\" + hashParams[Constants.errorDescription]);\r\n      this.cacheStorage.setItem(Constants.msalError, hashParams[Constants.error]);\r\n      this.cacheStorage.setItem(Constants.msalErrorDescription, hashParams[Constants.errorDescription]);\r\n\r\n      // login\r\n      if (stateInfo.requestType === Constants.login) {\r\n        this.loginInProgress = false;\r\n        this.cacheStorage.setItem(Constants.loginError, hashParams[Constants.errorDescription] + \":\" + hashParams[Constants.error]);\r\n        authorityKey = Storage.generateAuthorityKey(stateInfo.state);\r\n      }\r\n\r\n      // acquireToken\r\n      if (stateInfo.requestType === Constants.renewToken) {\r\n        this.acquireTokenInProgress = false;\r\n        authorityKey = Storage.generateAuthorityKey(stateInfo.state);\r\n\r\n        const account: Account = this.getAccount();\r\n        let accountId;\r\n\r\n        if (account && !StringUtils.isEmpty(account.homeAccountIdentifier)) {\r\n            accountId = account.homeAccountIdentifier;\r\n        }\r\n        else {\r\n            accountId = Constants.no_account;\r\n        }\r\n\r\n        acquireTokenAccountKey = Storage.generateAcquireTokenAccountKey(accountId, stateInfo.state);\r\n      }\r\n\r\n      const {\r\n        [Constants.error]: hashErr,\r\n        [Constants.errorDescription]: hashErrDesc\r\n      } = hashParams;\r\n      if (InteractionRequiredAuthError.isInteractionRequiredError(hashErr) ||\r\n        InteractionRequiredAuthError.isInteractionRequiredError(hashErrDesc)) {\r\n        error = new InteractionRequiredAuthError(hashParams[Constants.error], hashParams[Constants.errorDescription]);\r\n      } else {\r\n        error = new ServerError(hashParams[Constants.error], hashParams[Constants.errorDescription]);\r\n      }\r\n    }\r\n    // If the server returns \"Success\"\r\n    else {\r\n      // Verify the state from redirect and record tokens to storage if exists\r\n      if (stateInfo.stateMatch) {\r\n        this.logger.info(\"State is right\");\r\n        if (hashParams.hasOwnProperty(Constants.sessionState)) {\r\n            this.cacheStorage.setItem(Constants.msalSessionState, hashParams[Constants.sessionState]);\r\n        }\r\n        response.accountState = this.getAccountState(stateInfo.state);\r\n\r\n        let clientInfo: string = \"\";\r\n\r\n        // Process access_token\r\n        if (hashParams.hasOwnProperty(Constants.accessToken)) {\r\n          this.logger.info(\"Fragment has access token\");\r\n          this.acquireTokenInProgress = false;\r\n\r\n          // retrieve the id_token from response if present\r\n          if (hashParams.hasOwnProperty(Constants.idToken)) {\r\n            idTokenObj = new IdToken(hashParams[Constants.idToken]);\r\n            response.idToken = idTokenObj;\r\n            response.idTokenClaims = idTokenObj.claims;\r\n          } else {\r\n            idTokenObj = new IdToken(this.cacheStorage.getItem(Constants.idTokenKey));\r\n            response = ResponseUtils.setResponseIdToken(response, idTokenObj);\r\n          }\r\n\r\n          // retrieve the authority from cache and replace with tenantID\r\n          const authorityKey = Storage.generateAuthorityKey(stateInfo.state);\r\n          let authority: string = this.cacheStorage.getItem(authorityKey, this.inCookie);\r\n\r\n          if (!StringUtils.isEmpty(authority)) {\r\n            authority = UrlUtils.replaceTenantPath(authority, response.tenantId);\r\n          }\r\n\r\n          // retrieve client_info - if it is not found, generate the uid and utid from idToken\r\n          if (hashParams.hasOwnProperty(Constants.clientInfo)) {\r\n            clientInfo = hashParams[Constants.clientInfo];\r\n          } else {\r\n            this.logger.warning(\"ClientInfo not received in the response from AAD\");\r\n            throw ClientAuthError.createClientInfoNotPopulatedError(\"ClientInfo not received in the response from the server\");\r\n          }\r\n\r\n          response.account = Account.createAccount(idTokenObj, new ClientInfo(clientInfo));\r\n\r\n          let accountKey: string;\r\n          if (response.account && !StringUtils.isEmpty(response.account.homeAccountIdentifier)) {\r\n            accountKey = response.account.homeAccountIdentifier;\r\n          }\r\n          else {\r\n            accountKey = Constants.no_account;\r\n          }\r\n\r\n          acquireTokenAccountKey = Storage.generateAcquireTokenAccountKey(accountKey, stateInfo.state);\r\n          const acquireTokenAccountKey_noaccount = Storage.generateAcquireTokenAccountKey(Constants.no_account, stateInfo.state);\r\n\r\n          let cachedAccount: string = this.cacheStorage.getItem(acquireTokenAccountKey);\r\n          let acquireTokenAccount: Account;\r\n\r\n          // Check with the account in the Cache\r\n          if (!StringUtils.isEmpty(cachedAccount)) {\r\n            acquireTokenAccount = JSON.parse(cachedAccount);\r\n            if (response.account && acquireTokenAccount && Account.compareAccounts(response.account, acquireTokenAccount)) {\r\n              response = this.saveAccessToken(response, authority, hashParams, clientInfo, idTokenObj);\r\n              this.logger.info(\"The user object received in the response is the same as the one passed in the acquireToken request\");\r\n            }\r\n            else {\r\n              this.logger.warning(\r\n                \"The account object created from the response is not the same as the one passed in the acquireToken request\");\r\n            }\r\n          }\r\n          else if (!StringUtils.isEmpty(this.cacheStorage.getItem(acquireTokenAccountKey_noaccount))) {\r\n            response = this.saveAccessToken(response, authority, hashParams, clientInfo, idTokenObj);\r\n          }\r\n        }\r\n\r\n        // Process id_token\r\n        if (hashParams.hasOwnProperty(Constants.idToken)) {\r\n            this.logger.info(\"Fragment has id token\");\r\n\r\n            // login no longer in progress\r\n            this.loginInProgress = false;\r\n\r\n            // set the idToken\r\n            idTokenObj = new IdToken(hashParams[Constants.idToken]);\r\n\r\n            response = ResponseUtils.setResponseIdToken(response, idTokenObj);\r\n            if (hashParams.hasOwnProperty(Constants.clientInfo)) {\r\n              clientInfo = hashParams[Constants.clientInfo];\r\n            } else {\r\n              this.logger.warning(\"ClientInfo not received in the response from AAD\");\r\n            }\r\n\r\n            authorityKey = Storage.generateAuthorityKey(stateInfo.state);\r\n            let authority: string = this.cacheStorage.getItem(authorityKey, this.inCookie);\r\n\r\n            if (!StringUtils.isEmpty(authority)) {\r\n              authority = UrlUtils.replaceTenantPath(authority, idTokenObj.tenantId);\r\n            }\r\n\r\n            this.account = Account.createAccount(idTokenObj, new ClientInfo(clientInfo));\r\n            response.account = this.account;\r\n\r\n            if (idTokenObj && idTokenObj.nonce) {\r\n              // check nonce integrity if idToken has nonce - throw an error if not matched\r\n              if (idTokenObj.nonce !== this.cacheStorage.getItem(Constants.nonceIdToken, this.inCookie)) {\r\n                this.account = null;\r\n                this.cacheStorage.setItem(Constants.loginError, \"Nonce Mismatch. Expected Nonce: \" + this.cacheStorage.getItem(Constants.nonceIdToken, this.inCookie) + \",\" + \"Actual Nonce: \" + idTokenObj.nonce);\r\n                this.logger.error(\"Nonce Mismatch.Expected Nonce: \" + this.cacheStorage.getItem(Constants.nonceIdToken, this.inCookie) + \",\" + \"Actual Nonce: \" + idTokenObj.nonce);\r\n                error = ClientAuthError.createNonceMismatchError(this.cacheStorage.getItem(Constants.nonceIdToken, this.inCookie), idTokenObj.nonce);\r\n              }\r\n              // Save the token\r\n              else {\r\n                this.cacheStorage.setItem(Constants.idTokenKey, hashParams[Constants.idToken]);\r\n                this.cacheStorage.setItem(Constants.msalClientInfo, clientInfo);\r\n\r\n                // Save idToken as access token for app itself\r\n                this.saveAccessToken(response, authority, hashParams, clientInfo, idTokenObj);\r\n              }\r\n            } else {\r\n              authorityKey = stateInfo.state;\r\n              acquireTokenAccountKey = stateInfo.state;\r\n\r\n              this.logger.error(\"Invalid id_token received in the response\");\r\n              error = ClientAuthError.createInvalidIdTokenError(idTokenObj);\r\n              this.cacheStorage.setItem(Constants.msalError, error.errorCode);\r\n              this.cacheStorage.setItem(Constants.msalErrorDescription, error.errorMessage);\r\n            }\r\n        }\r\n      }\r\n      // State mismatch - unexpected/invalid state\r\n      else {\r\n        authorityKey = stateInfo.state;\r\n        acquireTokenAccountKey = stateInfo.state;\r\n\r\n        const expectedState = this.cacheStorage.getItem(Constants.stateLogin, this.inCookie);\r\n        this.logger.error(\"State Mismatch.Expected State: \" + expectedState + \",\" + \"Actual State: \" + stateInfo.state);\r\n        error = ClientAuthError.createInvalidStateError(stateInfo.state, expectedState);\r\n        this.cacheStorage.setItem(Constants.msalError, error.errorCode);\r\n        this.cacheStorage.setItem(Constants.msalErrorDescription, error.errorMessage);\r\n      }\r\n    }\r\n\r\n    this.cacheStorage.setItem(Constants.renewStatus + stateInfo.state, Constants.tokenRenewStatusCompleted);\r\n    this.cacheStorage.removeAcquireTokenEntries(stateInfo.state);\r\n    // this is required if navigateToLoginRequestUrl=false\r\n    if (this.inCookie) {\r\n      this.cacheStorage.setItemCookie(authorityKey, \"\", -1);\r\n      this.cacheStorage.clearCookie();\r\n    }\r\n    if (error) {\r\n      throw error;\r\n    }\r\n\r\n    if (!response) {\r\n        throw AuthError.createUnexpectedError(\"Response is null\");\r\n    }\r\n    return response;\r\n  }\r\n  /* tslint:enable:no-string-literal */\r\n\r\n  //#endregion\r\n\r\n  //#region Account\r\n\r\n  /**\r\n   * Returns the signed in account\r\n   * (the account object is created at the time of successful login)\r\n   * or null when no state is found\r\n   * @returns {@link Account} - the account object stored in MSAL\r\n   */\r\n  getAccount(): Account {\r\n    // if a session already exists, get the account from the session\r\n    if (this.account) {\r\n      return this.account;\r\n    }\r\n\r\n    // frame is used to get idToken and populate the account for the given session\r\n    const rawIdToken = this.cacheStorage.getItem(Constants.idTokenKey);\r\n    const rawClientInfo = this.cacheStorage.getItem(Constants.msalClientInfo);\r\n\r\n    if (!StringUtils.isEmpty(rawIdToken) && !StringUtils.isEmpty(rawClientInfo)) {\r\n      const idToken = new IdToken(rawIdToken);\r\n      const clientInfo = new ClientInfo(rawClientInfo);\r\n      this.account = Account.createAccount(idToken, clientInfo);\r\n      return this.account;\r\n    }\r\n    // if login not yet done, return null\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Extracts state value from the accountState sent with the authentication request.\r\n   * @returns {string} scope.\r\n   * @ignore\r\n   */\r\n  getAccountState (state: string) {\r\n    if (state) {\r\n      const splitIndex = state.indexOf(\"|\");\r\n      if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n        return state.substring(splitIndex + 1);\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n\r\n  /**\r\n   * Use to get a list of unique accounts in MSAL cache based on homeAccountIdentifier.\r\n   *\r\n   * @param {@link Array<Account>} Account - all unique accounts in MSAL cache.\r\n   */\r\n  getAllAccounts(): Array<Account> {\r\n    const accounts: Array<Account> = [];\r\n    const accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\r\n\r\n    for (let i = 0; i < accessTokenCacheItems.length; i++) {\r\n      const idToken = new IdToken(accessTokenCacheItems[i].value.idToken);\r\n      const clientInfo = new ClientInfo(accessTokenCacheItems[i].value.homeAccountIdentifier);\r\n      const account: Account = Account.createAccount(idToken, clientInfo);\r\n      accounts.push(account);\r\n    }\r\n\r\n    return this.getUniqueAccounts(accounts);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Used to filter accounts based on homeAccountIdentifier\r\n   * @param {Array<Account>}  Accounts - accounts saved in the cache\r\n   * @ignore\r\n   */\r\n  private getUniqueAccounts(accounts: Array<Account>): Array<Account> {\r\n    if (!accounts || accounts.length <= 1) {\r\n      return accounts;\r\n    }\r\n\r\n    const flags: Array<string> = [];\r\n    const uniqueAccounts: Array<Account> = [];\r\n    for (let index = 0; index < accounts.length; ++index) {\r\n      if (accounts[index].homeAccountIdentifier && flags.indexOf(accounts[index].homeAccountIdentifier) === -1) {\r\n        flags.push(accounts[index].homeAccountIdentifier);\r\n        uniqueAccounts.push(accounts[index]);\r\n      }\r\n    }\r\n\r\n    return uniqueAccounts;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Scopes (Extract to Scopes.ts)\r\n\r\n  // Note: \"this\" dependency in this section is minimal.\r\n  // If pCacheStorage is separated from the class object, or passed as a fn param, scopesUtils.ts can be created\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Used to validate the scopes input parameter requested  by the developer.\r\n   * @param {Array<string>} scopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n   * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n   * @ignore\r\n   */\r\n  private validateInputScope(scopes: Array<string>, scopesRequired: boolean): void {\r\n    if (!scopes) {\r\n      if (scopesRequired) {\r\n        throw ClientConfigurationError.createScopesRequiredError(scopes);\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Check that scopes is an array object (also throws error if scopes == null)\r\n    if (!Array.isArray(scopes)) {\r\n      throw ClientConfigurationError.createScopesNonArrayError(scopes);\r\n    }\r\n\r\n    // Check that scopes is not an empty array\r\n    if (scopes.length < 1) {\r\n      throw ClientConfigurationError.createEmptyScopesArrayError(scopes.toString());\r\n    }\r\n\r\n    // Check that clientId is passed as single scope\r\n    if (scopes.indexOf(this.clientId) > -1) {\r\n      if (scopes.length > 1) {\r\n        throw ClientConfigurationError.createClientIdSingleScopeError(scopes.toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Extracts scope value from the state sent with the authentication request.\r\n   * @param {string} state\r\n   * @returns {string} scope.\r\n   * @ignore\r\n   */\r\n  private getScopeFromState(state: string): string {\r\n    if (state) {\r\n      const splitIndex = state.indexOf(\"|\");\r\n      if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n        return state.substring(splitIndex + 1);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Appends extraScopesToConsent if passed\r\n   * @param {@link AuthenticationParameters}\r\n   */\r\n  private appendScopes(request: AuthenticationParameters): Array<string> {\r\n\r\n    let scopes: Array<string>;\r\n\r\n    if (request && request.scopes) {\r\n        if (request.extraScopesToConsent) {\r\n            scopes = [...request.scopes, ...request.extraScopesToConsent];\r\n        }\r\n        else {\r\n        scopes = request.scopes;\r\n        }\r\n    }\r\n\r\n    return scopes;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Angular\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Broadcast messages - Used only for Angular?  *\r\n   * @param eventName\r\n   * @param data\r\n   */\r\n  private broadcast(eventName: string, data: string) {\r\n    const evt = new CustomEvent(eventName, { detail: data });\r\n    window.dispatchEvent(evt);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Helper function to retrieve the cached token\r\n   *\r\n   * @param scopes\r\n   * @param {@link Account} account\r\n   * @param state\r\n   * @return {@link AuthResponse} AuthResponse\r\n   */\r\n  protected getCachedTokenInternal(scopes : Array<string> , account: Account, state: string): AuthResponse {\r\n    // Get the current session's account object\r\n    const accountObject: Account = account || this.getAccount();\r\n    if (!accountObject) {\r\n        return null;\r\n    }\r\n\r\n    // Construct AuthenticationRequest based on response type\r\n    const newAuthority = this.authorityInstance ? this.authorityInstance : AuthorityFactory.CreateInstance(this.authority, this.config.auth.validateAuthority);\r\n    const responseType = this.getTokenType(accountObject, scopes, true);\r\n    const serverAuthenticationRequest = new ServerRequestParameters(\r\n      newAuthority,\r\n      this.clientId,\r\n      scopes,\r\n      responseType,\r\n      this.getRedirectUri(),\r\n      state\r\n    );\r\n\r\n    // get cached token\r\n    return this.getCachedToken(serverAuthenticationRequest, account);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   *\r\n   * Get scopes for the Endpoint - Used in Angular to track protected and unprotected resources without interaction from the developer app\r\n   *\r\n   * @param endpoint\r\n   */\r\n  protected getScopesForEndpoint(endpoint: string) : Array<string> {\r\n    // if user specified list of unprotectedResources, no need to send token to these endpoints, return null.\r\n    if (this.config.framework.unprotectedResources.length > 0) {\r\n        for (let i = 0; i < this.config.framework.unprotectedResources.length; i++) {\r\n            if (endpoint.indexOf(this.config.framework.unprotectedResources[i]) > -1) {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    // process all protected resources and send the matched one\r\n    if (this.config.framework.protectedResourceMap.size > 0) {\r\n        for (let key of Array.from(this.config.framework.protectedResourceMap.keys())) {\r\n            // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\r\n            if (endpoint.indexOf(key) > -1) {\r\n                return this.config.framework.protectedResourceMap.get(key);\r\n            }\r\n        }\r\n    }\r\n\r\n    // default resource will be clientid if nothing specified\r\n    // App will use idtoken for calls to itself\r\n    // check if it's staring from http or https, needs to match with app host\r\n    if (endpoint.indexOf(\"http://\") > -1 || endpoint.indexOf(\"https://\") > -1) {\r\n        if (this.getHostFromUri(endpoint) === this.getHostFromUri(this.getRedirectUri())) {\r\n            return new Array<string>(this.clientId);\r\n        }\r\n    } else {\r\n    // in angular level, the url for $http interceptor call could be relative url,\r\n    // if it's relative call, we'll treat it as app backend call.\r\n        return new Array<string>(this.clientId);\r\n    }\r\n\r\n    // if not the app's own backend or not a domain listed in the endpoints structure\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Return boolean flag to developer to help inform if login is in progress\r\n   * @returns {boolean} true/false\r\n   */\r\n  public getLoginInProgress(): boolean {\r\n    const pendingCallback = this.cacheStorage.getItem(Constants.urlHash);\r\n    if (pendingCallback) {\r\n        return true;\r\n    }\r\n    return this.loginInProgress;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * @param loginInProgress\r\n   */\r\n  protected setloginInProgress(loginInProgress : boolean) {\r\n    this.loginInProgress = loginInProgress;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * returns the status of acquireTokenInProgress\r\n   */\r\n  protected getAcquireTokenInProgress(): boolean {\r\n      return this.acquireTokenInProgress;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * @param acquireTokenInProgress\r\n   */\r\n  protected setAcquireTokenInProgress(acquireTokenInProgress : boolean) {\r\n      this.acquireTokenInProgress = acquireTokenInProgress;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * returns the logger handle\r\n   */\r\n  protected getLogger() {\r\n      return this.config.system.logger;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Getters and Setters\r\n\r\n  /**\r\n   *\r\n   * Use to get the redirect uri configured in MSAL or null.\r\n   * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n   * @returns {string} redirect URL\r\n   *\r\n   */\r\n  public getRedirectUri(): string {\r\n    if (typeof this.config.auth.redirectUri === \"function\") {\r\n      return this.config.auth.redirectUri();\r\n    }\r\n    return this.config.auth.redirectUri;\r\n  }\r\n\r\n  /**\r\n   * Use to get the post logout redirect uri configured in MSAL or null.\r\n   * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n   *\r\n   * @returns {string} post logout redirect URL\r\n   */\r\n  public getPostLogoutRedirectUri(): string {\r\n    if (typeof this.config.auth.postLogoutRedirectUri === \"function\") {\r\n      return this.config.auth.postLogoutRedirectUri();\r\n    }\r\n    return this.config.auth.postLogoutRedirectUri;\r\n  }\r\n\r\n  /**\r\n   * Use to get the current {@link Configuration} object in MSAL\r\n   *\r\n   * @returns {@link Configuration}\r\n   */\r\n  public getCurrentConfiguration(): Configuration {\r\n    if (!this.config) {\r\n      throw ClientConfigurationError.createNoSetConfigurationError();\r\n    }\r\n    return this.config;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region String Util (Should be extracted to Utils.ts)\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * extract URI from the host\r\n   *\r\n   * @param {string} URI\r\n   * @returns {string} host from the URI\r\n   */\r\n  private getHostFromUri(uri: string): string {\r\n    // remove http:// or https:// from uri\r\n    let extractedUri = String(uri).replace(/^(https?:)\\/\\//, \"\");\r\n    extractedUri = extractedUri.split(\"/\")[0];\r\n    return extractedUri;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * Utils function to create the Authentication\r\n   * @param {@link account} account object\r\n   * @param scopes\r\n   * @param silentCall\r\n   *\r\n   * @returns {string} token type: id_token or access_token\r\n   *\r\n   */\r\n  private getTokenType(accountObject: Account, scopes: string[], silentCall: boolean): string {\r\n\r\n    // if account is passed and matches the account object/or set to getAccount() from cache\r\n    // if client-id is passed as scope, get id_token else token/id_token_token (in case no session exists)\r\n    let tokenType: string;\r\n\r\n    // acquireTokenSilent\r\n    if (silentCall) {\r\n      if (Account.compareAccounts(accountObject, this.getAccount())) {\r\n        tokenType = (scopes.indexOf(this.config.auth.clientId) > -1) ? ResponseTypes.id_token : ResponseTypes.token;\r\n      }\r\n      else {\r\n        tokenType  = (scopes.indexOf(this.config.auth.clientId) > -1) ? ResponseTypes.id_token : ResponseTypes.id_token_token;\r\n      }\r\n\r\n      return tokenType;\r\n    }\r\n    // all other cases\r\n    else {\r\n      if (!Account.compareAccounts(accountObject, this.getAccount())) {\r\n        tokenType = ResponseTypes.id_token_token;\r\n      }\r\n      else {\r\n        tokenType = (scopes.indexOf(this.clientId) > -1) ? ResponseTypes.id_token : ResponseTypes.token;\r\n      }\r\n\r\n      return tokenType;\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * Sets the cachekeys for and stores the account information in cache\r\n   * @param account\r\n   * @param state\r\n   * @hidden\r\n   */\r\n  private setAccountCache(account: Account, state: string) {\r\n\r\n    // Cache acquireTokenAccountKey\r\n    let accountId = account ? this.getAccountId(account) : Constants.no_account;\r\n\r\n    const acquireTokenAccountKey = Storage.generateAcquireTokenAccountKey(accountId, state);\r\n    this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * Sets the cacheKey for and stores the authority information in cache\r\n   * @param state\r\n   * @param authority\r\n   * @hidden\r\n   */\r\n  private setAuthorityCache(state: string, authority: string) {\r\n    // Cache authorityKey\r\n    const authorityKey = Storage.generateAuthorityKey(state);\r\n    this.cacheStorage.setItem(authorityKey, UrlUtils.CanonicalizeUri(authority), this.inCookie);\r\n  }\r\n\r\n  /**\r\n   * Updates account, authority, and nonce in cache\r\n   * @param serverAuthenticationRequest\r\n   * @param account\r\n   * @hidden\r\n   * @ignore\r\n   */\r\n  private updateCacheEntries(serverAuthenticationRequest: ServerRequestParameters, account: Account, loginStartPage?: any) {\r\n    // Cache account and authority\r\n    if (loginStartPage) {\r\n      // Cache the state, nonce, and login request data\r\n      this.cacheStorage.setItem(Constants.loginRequest, loginStartPage, this.inCookie);\r\n      this.cacheStorage.setItem(Constants.loginError, \"\");\r\n\r\n      this.cacheStorage.setItem(Constants.stateLogin, serverAuthenticationRequest.state, this.inCookie);\r\n\r\n      this.cacheStorage.setItem(Constants.msalError, \"\");\r\n      this.cacheStorage.setItem(Constants.msalErrorDescription, \"\");\r\n    } else {\r\n      this.setAccountCache(account, serverAuthenticationRequest.state);\r\n    }\r\n    // Cache authorityKey\r\n    this.setAuthorityCache(serverAuthenticationRequest.state, serverAuthenticationRequest.authority);\r\n\r\n    // Cache nonce\r\n    this.cacheStorage.setItem(Constants.nonceIdToken, serverAuthenticationRequest.nonce, this.inCookie);\r\n  }\r\n\r\n  /**\r\n   * Returns the unique identifier for the logged in account\r\n   * @param account\r\n   * @hidden\r\n   * @ignore\r\n   */\r\n  private getAccountId(account: Account): any {\r\n    //return `${account.accountIdentifier}` + Constants.resourceDelimiter + `${account.homeAccountIdentifier}`;\r\n    let accountId: string;\r\n    if (!StringUtils.isEmpty(account.homeAccountIdentifier)) {\r\n         accountId = account.homeAccountIdentifier;\r\n    }\r\n    else {\r\n        accountId = Constants.no_account;\r\n    }\r\n\r\n    return accountId;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @ignore\r\n   *\r\n   * Construct 'tokenRequest' from the available data in adalIdToken\r\n   * @param extraQueryParameters\r\n   * @hidden\r\n   */\r\n  private buildIDTokenRequest(request: AuthenticationParameters): AuthenticationParameters {\r\n\r\n    let tokenRequest: AuthenticationParameters = {\r\n      scopes: [this.clientId],\r\n      authority: this.authority,\r\n      account: this.getAccount(),\r\n      extraQueryParameters: request.extraQueryParameters\r\n    };\r\n\r\n    return tokenRequest;\r\n  }\r\n\r\n //#endregion\r\n\r\n  private getTelemetryManagerFromConfig(config: TelemetryOptions, clientId: string): TelemetryManager {\r\n    if (!config) { // if unset\r\n      return null\r\n    }\r\n    // if set then validate\r\n    const { applicationName, applicationVersion, telemetryEmitter } = config;\r\n    if (!applicationName || !applicationVersion || ! telemetryEmitter) {\r\n      throw ClientConfigurationError.createTelemetryConfigError(config);\r\n    }\r\n    // if valid then construct\r\n    const telemetryPlatform: TelemetryPlatform = {\r\n      sdk: \"msal.js\", // TODO need to be able to override this for angular, react, etc\r\n      sdkVersion: libraryVersion(),\r\n      applicationName,\r\n      applicationVersion\r\n    };\r\n    const telemetryManagerConfig: TelemetryConfig = {\r\n      platform: telemetryPlatform,\r\n      clientId: clientId\r\n    };\r\n    return new TelemetryManager(telemetryManagerConfig, telemetryEmitter);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * The default client ID for authentication\n * @internal\n * @ignore\n */\n// TODO: temporary - this is the Azure CLI clientID - we'll replace it when\n// Developer Sign On application is available\n// https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/identity/Azure.Identity/src/Constants.cs#L9\nexport const DeveloperSignOnClientId = \"04b07795-8ddb-461a-bbee-02f9e1bf7b46\";\n\n/**\n * The default tenant for authentication\n * @internal\n * @ignore\n */\nexport const DefaultTenantId = \"common\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as msal from \"msal\";\nimport { AccessToken, TokenCredential, GetTokenOptions } from \"@azure/core-http\";\nimport { IdentityClient } from \"../client/identityClient\";\nimport {\n  BrowserLoginStyle,\n  InteractiveBrowserCredentialOptions\n} from \"./interactiveBrowserCredentialOptions\";\nimport { createSpan } from \"../util/tracing\";\nimport { CanonicalCode } from \"@azure/core-tracing\";\nimport { DefaultTenantId, DeveloperSignOnClientId } from \"../constants\";\nimport { logger } from \"../util/logging\";\n\n/**\n * Enables authentication to Azure Active Directory inside of the web browser\n * using the interactive login flow, either via browser redirects or a popup\n * window.\n */\nexport class InteractiveBrowserCredential implements TokenCredential {\n  private loginStyle: BrowserLoginStyle;\n  private msalConfig: msal.Configuration;\n  private msalObject: msal.UserAgentApplication;\n\n  /**\n   * Creates an instance of the InteractiveBrowserCredential with the\n   * details needed to authenticate against Azure Active Directory with\n   * a user identity.\n   *\n   * @param tenantId The Azure Active Directory tenant (directory) ID.\n   * @param clientId The client (application) ID of an App Registration in the tenant.\n   * @param options Options for configuring the client which makes the authentication request.\n   */\n  constructor(options?: InteractiveBrowserCredentialOptions) {\n    options = {\n      ...IdentityClient.getDefaultOptions(),\n      ...options,\n      tenantId: (options && options.tenantId) || DefaultTenantId,\n      // TODO: temporary - this is the Azure CLI clientID - we'll replace it when\n      // Developer Sign On application is available\n      // https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/identity/Azure.Identity/src/Constants.cs#L9\n      clientId: (options && options.clientId) || DeveloperSignOnClientId\n    };\n\n    this.loginStyle = options.loginStyle || \"popup\";\n    if ([\"redirect\", \"popup\"].indexOf(this.loginStyle) === -1) {\n      throw new Error(`Invalid loginStyle: ${options.loginStyle}`);\n    }\n\n    this.msalConfig = {\n      auth: {\n        clientId: options.clientId!, // we just initialized it above\n        authority: `${options.authorityHost}/${options.tenantId}`,\n        ...(options.redirectUri && { redirectUri: options.redirectUri }),\n        ...(options.postLogoutRedirectUri && { redirectUri: options.postLogoutRedirectUri })\n      },\n      cache: {\n        cacheLocation: \"localStorage\",\n        storeAuthStateInCookie: true\n      }\n    };\n\n    this.msalObject = new msal.UserAgentApplication(this.msalConfig);\n  }\n\n  private login(): Promise<msal.AuthResponse> {\n    switch (this.loginStyle) {\n      case \"redirect\": {\n        const loginPromise = new Promise<msal.AuthResponse>((resolve, reject) => {\n          this.msalObject.handleRedirectCallback(resolve, reject);\n        });\n        this.msalObject.loginRedirect();\n        return loginPromise;\n      }\n      case \"popup\":\n        return this.msalObject.loginPopup();\n    }\n  }\n\n  private async acquireToken(\n    authParams: msal.AuthenticationParameters\n  ): Promise<msal.AuthResponse | undefined> {\n    let authResponse: msal.AuthResponse | undefined;\n    try {\n      logger.info(\"InteractiveBrowserCredential: attempting to acquire token silently\");\n      authResponse = await this.msalObject.acquireTokenSilent(authParams);\n    } catch (err) {\n      if (err instanceof msal.AuthError) {\n        switch (err.errorCode) {\n          case \"consent_required\":\n          case \"interaction_required\":\n          case \"login_required\":\n            logger.warning(\n              `InteractiveBrowserCredential: authentication returned errorCode ${err.errorCode}`\n            );\n            break;\n          default:\n            logger.warning(`InteractiveBrowserCredential: failed to acquire token: ${err}`);\n            throw err;\n        }\n      }\n    }\n\n    let authPromise: Promise<msal.AuthResponse> | undefined;\n    if (authResponse === undefined) {\n      logger.warning(\n        `InteractiveBrowserCredential: silent authentication failed, falling back to interactive method ${this.loginStyle}`\n      );\n      switch (this.loginStyle) {\n        case \"redirect\":\n          authPromise = new Promise((resolve, reject) => {\n            this.msalObject.handleRedirectCallback(resolve, reject);\n          });\n          this.msalObject.acquireTokenRedirect(authParams);\n          break;\n        case \"popup\":\n          authPromise = this.msalObject.acquireTokenPopup(authParams);\n          break;\n      }\n\n      authResponse = authPromise && (await authPromise);\n    }\n\n    return authResponse;\n  }\n\n  /**\n   * Authenticates with Azure Active Directory and returns an {@link AccessToken} if\n   * successful.  If authentication cannot be performed at this time, this method may\n   * return null.  If an error occurs during authentication, an {@link AuthenticationError}\n   * containing failure details will be thrown.\n   *\n   * @param scopes The list of scopes for which the token will have access.\n   * @param options The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  async getToken(\n    scopes: string | string[],\n    options?: GetTokenOptions\n  ): Promise<AccessToken | null> {\n    const { span } = createSpan(\"InteractiveBrowserCredential-getToken\", options);\n    try {\n      if (!this.msalObject.getAccount()) {\n        await this.login();\n      }\n\n      const authResponse = await this.acquireToken({\n        scopes: Array.isArray(scopes) ? scopes : scopes.split(\",\")\n      });\n\n      if (authResponse) {\n        return {\n          token: authResponse.accessToken,\n          expiresOnTimestamp: authResponse.expiresOn.getTime()\n        };\n      } else {\n        return null;\n      }\n    } catch (err) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: err.message\n      });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { TokenCredential, GetTokenOptions, AccessToken } from \"@azure/core-http\";\nimport { DeviceCodePromptCallback } from './deviceCodeCredential';\nimport { IdentityClientOptions } from '../client/identityClient';\n\nconst BrowserNotSupportedError = new Error(\"DeviceCodeCredential is not supported in the browser.\");\n\nexport class DeviceCodeCredential implements TokenCredential {\n  constructor(\n    tenantId: string | \"organizations\",\n    clientId: string,\n    userPromptCallback: DeviceCodePromptCallback,\n    options?: IdentityClientOptions\n  ) {\n    throw BrowserNotSupportedError;\n  }\n\n  public getToken(\n    scopes: string | string[],\n    options?: GetTokenOptions\n  ): Promise<AccessToken | null> {\n    throw BrowserNotSupportedError;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport qs from \"qs\";\nimport { TokenCredential, GetTokenOptions, AccessToken } from \"@azure/core-http\";\nimport { IdentityClientOptions, IdentityClient } from \"../client/identityClient\";\nimport { createSpan } from \"../util/tracing\";\nimport { AuthenticationErrorName } from \"../client/errors\";\nimport { CanonicalCode } from \"@azure/core-tracing\";\n\n/**\n * Enables authentication to Azure Active Directory with a user's\n * username and password. This credential requires a high degree of\n * trust so you should only use it when other, more secure credential\n * types can't be used.\n */\nexport class UsernamePasswordCredential implements TokenCredential {\n  private identityClient: IdentityClient;\n  private tenantId: string;\n  private clientId: string;\n  private username: string;\n  private password: string;\n\n  /**\n   * Creates an instance of the UsernamePasswordCredential with the details\n   * needed to authenticate against Azure Active Directory with a username\n   * and password.\n   *\n   * @param tenantIdOrName The Azure Active Directory tenant (directory) ID or name.\n   * @param clientId The client (application) ID of an App Registration in the tenant.\n   * @param username The user account's e-mail address (user name).\n   * @param password The user account's account password\n   * @param options Options for configuring the client which makes the authentication request.\n   */\n  constructor(\n    tenantIdOrName: string,\n    clientId: string,\n    username: string,\n    password: string,\n    options?: IdentityClientOptions\n  ) {\n    this.identityClient = new IdentityClient(options);\n    this.tenantId = tenantIdOrName;\n    this.clientId = clientId;\n    this.username = username;\n    this.password = password;\n  }\n\n  /**\n   * Authenticates with Azure Active Directory and returns an {@link AccessToken} if\n   * successful.  If authentication cannot be performed at this time, this method may\n   * return null.  If an error occurs during authentication, an {@link AuthenticationError}\n   * containing failure details will be thrown.\n   *\n   * @param scopes The list of scopes for which the token will have access.\n   * @param options The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  public async getToken(\n    scopes: string | string[],\n    options?: GetTokenOptions\n  ): Promise<AccessToken | null> {\n    const { span, options: newOptions } = createSpan(\n      \"UsernamePasswordCredential-getToken\",\n      options\n    );\n    try {\n      const webResource = this.identityClient.createWebResource({\n        url: `${this.identityClient.authorityHost}/${this.tenantId}/oauth2/v2.0/token`,\n        method: \"POST\",\n        disableJsonStringifyOnBody: true,\n        deserializationMapper: undefined,\n        body: qs.stringify({\n          response_type: \"token\",\n          grant_type: \"password\",\n          client_id: this.clientId,\n          username: this.username,\n          password: this.password,\n          scope: typeof scopes === \"string\" ? scopes : scopes.join(\" \")\n        }),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        abortSignal: options && options.abortSignal,\n        spanOptions: newOptions.spanOptions\n      });\n\n      const tokenResponse = await this.identityClient.sendTokenRequest(webResource);\n      return (tokenResponse && tokenResponse.accessToken) || null;\n    } catch (err) {\n      const code =\n        err.name === AuthenticationErrorName\n          ? CanonicalCode.UNAUTHENTICATED\n          : CanonicalCode.UNKNOWN;\n      span.setStatus({\n        code,\n        message: err.message\n      });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { TokenCredential, GetTokenOptions, AccessToken } from \"@azure/core-http\";\nimport { IdentityClientOptions } from '../client/identityClient';\n\nconst BrowserNotSupportedError = new Error(\n  \"AuthorizationCodeCredential is not supported in the browser.  InteractiveBrowserCredential is more appropriate for this use case.\"\n);\n\nexport class AuthorizationCodeCredential implements TokenCredential {\n  constructor(\n    tenantId: string | \"common\",\n    clientId: string,\n    clientSecret: string,\n    authorizationCode: string,\n    redirectUri: string,\n    options?: IdentityClientOptions\n  );\n  constructor(\n    tenantId: string | \"common\",\n    clientId: string,\n    authorizationCode: string,\n    redirectUri: string,\n    options?: IdentityClientOptions\n  ); \n  constructor(\n    tenantId: string | \"common\",\n    clientId: string,\n    clientSecretOrAuthorizationCode: string,\n    authorizationCodeOrRedirectUri: string,\n    redirectUriOrOptions: string | IdentityClientOptions | undefined,\n    options?: IdentityClientOptions\n  ) {\n    throw BrowserNotSupportedError;\n  }\n\n  public getToken(\n    scopes: string | string[],\n    options?: GetTokenOptions\n  ): Promise<AccessToken | null> {\n    throw BrowserNotSupportedError;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { TokenCredential } from \"@azure/core-http\";\nimport { DefaultAzureCredential } from \"./credentials/defaultAzureCredential\";\n\nexport { ChainedTokenCredential } from \"./credentials/chainedTokenCredential\";\nexport { IdentityClientOptions } from \"./client/identityClient\";\nexport { EnvironmentCredential } from \"./credentials/environmentCredential\";\nexport { ClientSecretCredential } from \"./credentials/clientSecretCredential\";\nexport { ClientCertificateCredential } from \"./credentials/clientCertificateCredential\";\nexport { InteractiveBrowserCredential } from \"./credentials/interactiveBrowserCredential\";\nexport {\n  InteractiveBrowserCredentialOptions,\n  BrowserLoginStyle\n} from \"./credentials/interactiveBrowserCredentialOptions\";\nexport { ManagedIdentityCredential } from \"./credentials/managedIdentityCredential\";\nexport {\n  DeviceCodeCredential,\n  DeviceCodePromptCallback,\n  DeviceCodeInfo\n} from \"./credentials/deviceCodeCredential\";\n\nexport { DefaultAzureCredential } from \"./credentials/defaultAzureCredential\";\nexport { UsernamePasswordCredential } from \"./credentials/usernamePasswordCredential\";\nexport { AuthorizationCodeCredential } from \"./credentials/authorizationCodeCredential\";\nexport {\n  AuthenticationError,\n  ErrorResponse,\n  AggregateAuthenticationError,\n  AuthenticationErrorName,\n  AggregateAuthenticationErrorName\n} from \"./client/errors\";\n\nexport { TokenCredential, GetTokenOptions, AccessToken } from \"@azure/core-http\";\nexport { logger } from \"./util/logging\";\n\n/**\n * Returns a new instance of the {@link DefaultAzureCredential}.\n */\nexport function getDefaultAzureCredential(): TokenCredential {\n  return new DefaultAzureCredential();\n}\n"],"names":["BrowserNotSupportedError","util","has","isArray","defaults","stringify","rng","bytesToUuid","uuidv4","base64.decodeString","base64.encodeByteArray","utils.isValidUuid","utils.isDuration","tslib_1.__extends","debug","logger","coreLogger","parse","utils.stripRequest","utils.stripResponse","utils\n            .delay","utils.generateUuid","utils\n                .delay","retry","shouldRetry","updateRetryData","DefaultHttpClient","utils.prepareXMLRootList","utils.isPrimitiveType","qs","Constants","tslib_1.__decorate","msal.UserAgentApplication","msal.AuthError"],"mappings":"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"}