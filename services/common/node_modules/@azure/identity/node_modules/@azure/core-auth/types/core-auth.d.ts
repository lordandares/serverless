import { AbortSignalLike } from '@azure/abort-controller';
import { SpanOptions } from '@azure/core-tracing';
export { AbortSignalLike }

/**
 * Represents an access token with an expiration time.
 */
export declare interface AccessToken {
    /**
     * The access token.
     */
    token: string;
    /**
     * The access token's expiration timestamp.
     */
    expiresOnTimestamp: number;
}

/**
 * Defines options for TokenCredential.getToken.
 */
export declare interface GetTokenOptions {
    /**
     * An AbortSignalLike implementation that can be used to cancel
     * the token request.
     */
    abortSignal?: AbortSignalLike;
    /**
     * Timeout for pinging services
     */
    timeout?: number;
    /**
     * Options to create a span using the tracer if any was set.
     */
    spanOptions?: SpanOptions;
}

/**
 * Tests an object to determine whether it implements TokenCredential.
 *
 * @param credential The assumed TokenCredential to be tested.
 */
export declare function isTokenCredential(credential: any): credential is TokenCredential;

/**
 * Represents a credential capable of providing an authentication token.
 */
export declare interface TokenCredential {
    /**
     * Gets the token provided by this credential.
     *
     * @param scopes The list of scopes for which the token will have access.
     * @param options The options used to configure any requests this
     *                TokenCredential implementation might make.
     */
    getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;
}

export { }
