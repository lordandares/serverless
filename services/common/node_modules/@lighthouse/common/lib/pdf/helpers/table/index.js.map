{"version":3,"sources":["../../../../src/pdf/helpers/table/index.js"],"names":["chunk","concat","defaults","fill","map","slice","take","Promise","DEFAULT_IMAGE_COLUMN_LENGTH","DEFAULT_SUMMARY_FIELDS_COLUMN_LENGTH","buildSummaryField","text","defaultLayout","fillColor","zebraFillColor","hLineWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","vLineWidth","GRAY","LIGHT_BLUE","WHITE","imageTables","images","imageRows","tables","imageRow","index","defaultRow","Array","row","length","isMiddleRow","margin","headerRows","table","body","widths","layout","hLineColor","vLineColor","summaryFieldsTable","fields","settings","timezone","tableHeader","label","bold","fontSize","defaultHeaders","field","tableRow","headers","summaryFieldTable","colSpan","dontBreakRows","summaryStatTable","options","tableOptions","summaryWrapperTable","style","definition","twoColumnTable","threeColumnTable","fourColumnTable"],"mappings":"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","sourcesContent":["import { chunk, concat, defaults, fill, map, slice, take } from 'lodash'\nimport Promise from 'bluebird'\n\nimport {\n  DEFAULT_IMAGE_COLUMN_LENGTH,\n  DEFAULT_SUMMARY_FIELDS_COLUMN_LENGTH,\n} from '../../../constants'\nimport { buildSummaryField, text } from '../'\n\nconst defaultLayout = {\n  fillColor: zebraFillColor,\n  hLineWidth: () => 0,\n  paddingLeft: () => 5,\n  paddingRight: () => 5,\n  paddingTop: () => 5,\n  paddingBottom: () => 5,\n  vLineWidth: () => 0,\n}\n\nexport const GRAY = '#DDDDDD'\nexport const LIGHT_BLUE = '#F0FBFF'\nexport const WHITE = '#FFFFFF'\n\nexport function imageTables(images) {\n  const imageRows = chunk(images, DEFAULT_IMAGE_COLUMN_LENGTH)\n  const tables = map(imageRows, (imageRow, index) => {\n    const defaultRow = fill(Array(DEFAULT_IMAGE_COLUMN_LENGTH), { text: '' })\n    const row = concat(imageRow, slice(defaultRow, imageRow.length))\n\n    const isMiddleRow = index !== 1 && index !== imageRows.length\n    const margin = isMiddleRow ? 5 : 0\n\n    return [\n      {\n        headerRows: 0,\n        table: {\n          body: [[...row]],\n          widths: ['*', '*'],\n        },\n        layout: {\n          hLineColor: () => GRAY,\n          hLineWidth: () => 1,\n          paddingLeft: () => 5,\n          paddingRight: () => 5,\n          paddingTop: () => 5,\n          paddingBottom: () => 5,\n          vLineColor: () => GRAY,\n          vLineWidth: () => 1,\n        },\n        margin: [0, margin, 0, margin],\n      },\n    ]\n  })\n\n  return tables\n}\n\nexport async function summaryFieldsTable({ fields, settings, timezone }) {\n  const tableHeader = map(fields, ({ label }) =>\n    text(label, { bold: true, fontSize: 7 })\n  )\n  const defaultHeaders = fill(Array(DEFAULT_SUMMARY_FIELDS_COLUMN_LENGTH), {\n    text: '',\n  })\n  const defaultRow = fill(Array(DEFAULT_SUMMARY_FIELDS_COLUMN_LENGTH), {\n    text: '',\n  })\n  const tableRow = await Promise.map(fields, field =>\n    buildSummaryField({ field, settings, timezone })\n  )\n\n  // NOTE: a user can only select three summary fields on the template however\n  // if the form group is repeatable we could have more than the default\n  // summary field column length so cap otherwise pdf will fail to generate\n  const headers = take(\n    concat(tableHeader, slice(defaultHeaders, tableHeader.length)),\n    DEFAULT_SUMMARY_FIELDS_COLUMN_LENGTH\n  )\n  const row = take(\n    concat(tableRow, slice(defaultRow, tableRow.length)),\n    DEFAULT_SUMMARY_FIELDS_COLUMN_LENGTH\n  )\n\n  const summaryFieldTable = table({\n    body: [headers, row],\n    colSpan: 5,\n    dontBreakRows: true,\n    headerRows: 0,\n    layout: {\n      hLineWidth: () => 0,\n      paddingLeft: () => 0,\n      paddingRight: () => 5,\n      paddingTop: () => 2,\n      paddingBottom: () => 2,\n      vLineWidth: () => 0,\n    },\n    // NOTE: pdfmake applies margin/padding to nested tables\n    margin: [0, -5, 0, 0],\n    widths: ['*', '*', '*'],\n  })\n\n  return summaryFieldTable\n}\n\nexport function summaryStatTable(options) {\n  const tableOptions = defaults({}, options, {\n    layout: {\n      fillColor: LIGHT_BLUE,\n      hLineWidth: () => 0,\n      paddingLeft: () => 10,\n      paddingRight: () => 10,\n      paddingTop: () => 2,\n      paddingBottom: () => 2,\n      vLineWidth: () => 0,\n    },\n    widths: ['*'],\n  })\n\n  return table(tableOptions)\n}\n\nexport function summaryWrapperTable(options) {\n  const tableOptions = defaults({}, options, {\n    layout: {\n      fillColor: WHITE,\n      hLineWidth: () => 0,\n      paddingLeft: () => 0,\n      paddingRight: () => 10,\n      paddingTop: () => 0,\n      paddingBottom: () => 0,\n      vLineWidth: () => 0,\n    },\n    style: 'summaryWrapperTable',\n  })\n\n  return table(tableOptions)\n}\n\nexport function table(options) {\n  const {\n    body,\n    colSpan,\n    dontBreakRows = false,\n    headerRows = 1,\n    layout = defaultLayout,\n    style = 'table',\n    margin,\n    widths,\n  } = options\n\n  const definition = {\n    colSpan,\n    layout,\n    style,\n    table: {\n      body,\n      // NOTE: be wary of this feature, if a row spans multiple pages it won't\n      // be drawn on to the pdf, only pass true here when row will be less than\n      // a page\n      dontBreakRows,\n      headerRows,\n    },\n    margin,\n  }\n\n  // NOTE: only adds widths if passed\n  // as otherwise pdfmake will error!\n  // if none defined it auto calculates\n  if (widths) {\n    definition.table.widths = widths\n  }\n\n  return definition\n}\n\nexport function twoColumnTable(options) {\n  const tableOptions = defaults({}, options, {\n    widths: ['50%', '50%'],\n  })\n  return table(tableOptions)\n}\n\nexport function threeColumnTable(options) {\n  const tableOptions = defaults({}, options, {\n    widths: ['33%', '33%', '*'],\n  })\n  return table(tableOptions)\n}\n\nexport function fourColumnTable(options) {\n  const tableOptions = defaults({}, options, {\n    widths: ['25%', '25%', '25%', '25%'],\n  })\n\n  return table(tableOptions)\n}\n\nexport function zebraFillColor(index) {\n  return index % 2 === 0 ? WHITE : LIGHT_BLUE\n}\n"],"file":"index.js"}