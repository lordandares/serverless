{"version":3,"sources":["../../../src/service-hours/__helpers__/calculate-hours.js"],"names":["days","MON","TUE","WED","THU","FRI","SAT","SUN","MON2","TUE2","MINUTES","HOURS","DAYS","input","process","argv","Error","parts","split","length","startOffset","parse","endOffset","duration","output","type","start","end","description","console","dir","depth","def","day","time","undefined","timeParts","hour","minute","offset"],"mappings":"AAAA;;;;;AAMA,IAAMA,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAE,CADM;AAEXC,EAAAA,GAAG,EAAE,CAFM;AAGXC,EAAAA,GAAG,EAAE,CAHM;AAIXC,EAAAA,GAAG,EAAE,CAJM;AAKXC,EAAAA,GAAG,EAAE,CALM;AAMXC,EAAAA,GAAG,EAAE,CANM;AAOXC,EAAAA,GAAG,EAAE,CAPM;AAQXC,EAAAA,IAAI,EAAE,CARK;AASXC,EAAAA,IAAI,EAAE;AATK,CAAb;AAYA,IAAMC,OAAO,GAAG,KAAhB;AACA,IAAMC,KAAK,GAAG,KAAKD,OAAnB;AACA,IAAME,IAAI,GAAG,KAAKD,KAAlB;AAEA,IAAME,KAAK,GAAGC,OAAO,CAACC,IAAR,CAAa,CAAb,CAAd;;AAEA,IAAI,CAACF,KAAL,EAAY;AACV,QAAM,IAAIG,KAAJ,CAAU,eAAV,CAAN;AACD;;AAED,IAAMC,KAAK,GAAGJ,KAAK,CAACK,KAAN,CAAY,KAAZ,CAAd;;AAEA,IAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpB,QAAM,IAAIH,KAAJ,CAAU,eAAV,CAAN;AACD;;AAED,IAAMI,WAAW,GAAGC,KAAK,CAACJ,KAAK,CAAC,CAAD,CAAN,CAAzB;AACA,IAAMK,SAAS,GAAGD,KAAK,CAACJ,KAAK,CAAC,CAAD,CAAN,CAAvB;AACA,IAAMM,QAAQ,GAAGD,SAAS,GAAGF,WAA7B;AACA,IAAMI,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,SADO;AAEbC,EAAAA,KAAK,EAAEN,WAFM;AAGbO,EAAAA,GAAG,EAAEL,SAHQ;AAIbC,EAAAA,QAAQ,EAARA,QAJa;AAKbK,EAAAA,WAAW,EAAEf;AALA,CAAf;AAQAgB,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAAoB;AAAEO,EAAAA,KAAK,EAAE;AAAT,CAApB;;AAEA,SAASV,KAAT,CAAeW,GAAf,EAAoB;AAClB,MAAMf,KAAK,GAAGe,GAAG,CAACd,KAAJ,CAAU,GAAV,CAAd;;AAEA,MAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpB,UAAM,IAAIH,KAAJ,CAAU,eAAV,CAAN;AACD;;AAED,MAAMiB,GAAG,GAAGjC,IAAI,CAACiB,KAAK,CAAC,CAAD,CAAN,CAAhB;AACA,MAAMiB,IAAI,GAAGjB,KAAK,CAAC,CAAD,CAAlB;;AAEA,MAAIgB,GAAG,KAAKE,SAAR,IAAqBF,GAAG,KAAK,IAA7B,IAAqC,CAACC,IAA1C,EAAgD;AAC9C,UAAM,IAAIlB,KAAJ,CAAU,mBAAV,CAAN;AACD;;AAED,MAAMoB,SAAS,GAAGF,IAAI,CAAChB,KAAL,CAAW,GAAX,CAAlB;AACA,MAAMmB,IAAI,GAAGD,SAAS,CAAC,CAAD,CAAtB;AACA,MAAME,MAAM,GAAGF,SAAS,CAAC,CAAD,CAAxB;;AAEA,MAAI,CAACC,IAAD,IAAS,CAACC,MAAd,EAAsB;AACpB,UAAM,IAAItB,KAAJ,CAAU,kBAAV,CAAN;AACD,GApBiB,CAsBlB;AACA;;;AACA,MAAMuB,MAAM,GAAGN,GAAG,GAAGrB,IAAN,GAAayB,IAAI,GAAG1B,KAApB,GAA4B2B,MAAM,GAAG5B,OAApD;AAEA,SAAO6B,MAAP;AACD","sourcesContent":["/**\n * Script to generate service hour definitions which is otherwise tedious to\n * calculate as we store them in millisecond offsets\n * Example Input: TUE 08:00 - TUE 17:00\n */\n\nconst days = {\n  MON: 0,\n  TUE: 1,\n  WED: 2,\n  THU: 3,\n  FRI: 4,\n  SAT: 5,\n  SUN: 6,\n  MON2: 7,\n  TUE2: 8,\n}\n\nconst MINUTES = 60000\nconst HOURS = 60 * MINUTES\nconst DAYS = 24 * HOURS\n\nconst input = process.argv[2]\n\nif (!input) {\n  throw new Error('invalid input')\n}\n\nconst parts = input.split(' - ')\n\nif (parts.length < 2) {\n  throw new Error('invalid input')\n}\n\nconst startOffset = parse(parts[0])\nconst endOffset = parse(parts[1])\nconst duration = endOffset - startOffset\nconst output = {\n  type: 'DEFAULT',\n  start: startOffset,\n  end: endOffset,\n  duration,\n  description: input,\n}\n\nconsole.dir(output, { depth: null })\n\nfunction parse(def) {\n  const parts = def.split(' ')\n\n  if (parts.length < 2) {\n    throw new Error('invalid parts')\n  }\n\n  const day = days[parts[0]]\n  const time = parts[1]\n\n  if (day === undefined || day === null || !time) {\n    throw new Error('invalid date/time')\n  }\n\n  const timeParts = time.split(':')\n  const hour = timeParts[0]\n  const minute = timeParts[1]\n\n  if (!hour || !minute) {\n    throw new Error('invalid end time')\n  }\n\n  // NOTE this isn't taking into account actual end of time if you target the\n  // end of a minute, e.g. 23:59\n  const offset = day * DAYS + hour * HOURS + minute * MINUTES\n\n  return offset\n}\n"],"file":"calculate-hours.js"}