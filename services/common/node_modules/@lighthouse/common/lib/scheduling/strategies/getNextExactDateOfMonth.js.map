{"version":3,"sources":["../../../src/scheduling/strategies/getNextExactDateOfMonth.ts"],"names":["moment","Unit","getNextExactDateOfMonth","end","isInitial","options","start","timezone","date","duration","frequency","durationUnit","unit","durationValue","value","frequencyUnit","frequencyValue","dateCursor","startOfMonth","tz","startOf","Month","valueOf","add","monthDate","hasExactDate","nextOccurrenceEnd","Day","nextOccurrenceStart","subtract","nextDateCursor"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,SAA4BC,IAA5B,QAAwC,qBAAxC;AAEA;;;;AAGA,OAAO,SAASC,uBAAT,OAMsB;AAAA,MAL3BC,GAK2B,QAL3BA,GAK2B;AAAA,MAJ3BC,SAI2B,QAJ3BA,SAI2B;AAAA,MAH3BC,OAG2B,QAH3BA,OAG2B;AAAA,MAF3BC,KAE2B,QAF3BA,KAE2B;AAAA,MAD3BC,QAC2B,QAD3BA,QAC2B;AAAA,MACnBC,IADmB,GACWH,OADX,CACnBG,IADmB;AAAA,MACbC,QADa,GACWJ,OADX,CACbI,QADa;AAAA,MACHC,SADG,GACWL,OADX,CACHK,SADG;AAAA,MAEbC,YAFa,GAE0BF,QAF1B,CAEnBG,IAFmB;AAAA,MAEQC,aAFR,GAE0BJ,QAF1B,CAECK,KAFD;AAAA,MAGbC,aAHa,GAG4BL,SAH5B,CAGnBE,IAHmB;AAAA,MAGSI,cAHT,GAG4BN,SAH5B,CAGEI,KAHF;AAK3B,MAAIG,UAAU,GAAGX,KAAjB;;AAEA,SAAOW,UAAU,GAAGd,GAApB,EAAyB;AACvB,QAAMe,YAAY,GAAGd,SAAS,GAC1BJ,MAAM,CACHmB,EADH,CACMF,UADN,EACkBV,QADlB,EAEGa,OAFH,CAEWnB,IAAI,CAACoB,KAFhB,EAGGC,OAHH,EAD0B,GAK1BtB,MAAM,CACHmB,EADH,CACMF,UADN,EACkBV,QADlB,EAEGgB,GAFH,CAEOP,cAFP,EAEuBD,aAFvB,EAGGK,OAHH,CAGWnB,IAAI,CAACoB,KAHhB,EAIGC,OAJH,EALJ;AAWA,QAAME,SAAS,GAAGxB,MAAM,CACrBmB,EADe,CACZD,YADY,EACEX,QADF,EAEfC,IAFe,CAEVA,IAFU,EAGfA,IAHe,EAAlB;AAIA,QAAMiB,YAAY,GAAGD,SAAS,KAAKhB,IAAnC;;AAEA,QAAIiB,YAAJ,EAAkB;AAChB,UAAMC,iBAAiB,GAAG1B,MAAM,CAC7BmB,EADuB,CACpBD,YADoB,EACNX,QADM,EAEvBC,IAFuB,CAElBA,IAFkB,EAGvBe,GAHuB,CAGnB,CAHmB,EAGhBtB,IAAI,CAAC0B,GAHW,EAIvBL,OAJuB,EAA1B;AAKA,UAAMM,mBAAmB,GAAG5B,MAAM,CAC/BmB,EADyB,CACtBO,iBADsB,EACHnB,QADG,EAEzBsB,QAFyB,CAEhBhB,aAFgB,EAEDF,YAFC,EAGzBW,OAHyB,EAA5B;AAKA,UAAII,iBAAiB,IAAIE,mBAArB,IAA4CF,iBAAiB,GAAGvB,GAApE,EACE;;AAEF,UAAIyB,mBAAmB,IAAItB,KAA3B,EAAkC;AAChC,eAAO,CAACsB,mBAAD,EAAsBF,iBAAiB,GAAG,CAA1C,CAAP;AACD;AACF;;AAED,QAAMI,cAAc,GAAG1B,SAAS,GAC5BJ,MAAM,CACHmB,EADH,CACMD,YADN,EACoBX,QADpB,EAEGgB,GAFH,CAEO,CAFP,EAEUtB,IAAI,CAACoB,KAFf,EAGGC,OAHH,EAD4B,GAK5BJ,YALJ;AAOAD,IAAAA,UAAU,GAAGa,cAAb;AACD;AACF","sourcesContent":["import moment from 'moment-timezone'\n\nimport { GetNext, Interval, Unit } from '../scheduling.types'\n\n/**\n * Generates next occurrence interval for exact date of month strategy\n */\nexport function getNextExactDateOfMonth({\n  end,\n  isInitial,\n  options,\n  start,\n  timezone,\n}: GetNext): Interval | void {\n  const { date, duration, frequency } = options\n  const { unit: durationUnit, value: durationValue } = duration\n  const { unit: frequencyUnit, value: frequencyValue } = frequency\n\n  let dateCursor = start\n\n  while (dateCursor < end) {\n    const startOfMonth = isInitial\n      ? moment\n          .tz(dateCursor, timezone)\n          .startOf(Unit.Month)\n          .valueOf()\n      : moment\n          .tz(dateCursor, timezone)\n          .add(frequencyValue, frequencyUnit)\n          .startOf(Unit.Month)\n          .valueOf()\n\n    const monthDate = moment\n      .tz(startOfMonth, timezone)\n      .date(date)\n      .date()\n    const hasExactDate = monthDate === date\n\n    if (hasExactDate) {\n      const nextOccurrenceEnd = moment\n        .tz(startOfMonth, timezone)\n        .date(date)\n        .add(1, Unit.Day)\n        .valueOf()\n      const nextOccurrenceStart = moment\n        .tz(nextOccurrenceEnd, timezone)\n        .subtract(durationValue, durationUnit)\n        .valueOf()\n\n      if (nextOccurrenceEnd <= nextOccurrenceStart || nextOccurrenceEnd > end)\n        return\n\n      if (nextOccurrenceStart >= start) {\n        return [nextOccurrenceStart, nextOccurrenceEnd - 1]\n      }\n    }\n\n    const nextDateCursor = isInitial\n      ? moment\n          .tz(startOfMonth, timezone)\n          .add(1, Unit.Month)\n          .valueOf()\n      : startOfMonth\n\n    dateCursor = nextDateCursor\n  }\n}\n"],"file":"getNextExactDateOfMonth.js"}