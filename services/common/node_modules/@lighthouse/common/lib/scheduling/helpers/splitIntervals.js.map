{"version":3,"sources":["../../../src/scheduling/helpers/splitIntervals.ts"],"names":["forEach","isEmpty","reduce","sortBy","intervalCovers","intervalIntersectsEnd","intervalIntersectsStart","intervalOutside","intervalWithin","splitIntervals","intervals","closeIntervals","sortedIntervals","a","stack","accum","openInterval","push","closeInterval","topInterval","length","closeCoversInterval","closeIntersectsIntervalEnd","closeIntersectsIntervalStart","closeOutsideInterval","closeWithinInterval","pop"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,MAAnC,QAAiD,WAAjD;AAGA,SACEC,cADF,EAEEC,qBAFF,EAGEC,uBAHF,EAIEC,eAJF,EAKEC,cALF,QAMO,GANP;AAQA;;;;;;;;AAOA,OAAO,SAASC,cAAT,GAGY;AAAA,MAFjBC,SAEiB,uEAFY,EAEZ;AAAA,MADjBC,cACiB,uEADiB,EACjB;AACjB,MAAIV,OAAO,CAACU,cAAD,CAAX,EAA6B,OAAOD,SAAP;AAE7B,MAAME,eAAe,GAAGT,MAAM,CAAC,UAAAU,CAAC;AAAA,WAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,GAAF,CAAN,CAAkBH,SAAlB,CAAxB;AAEA,MAAMI,KAAK,GAAGZ,MAAM,CAClB,UAACa,KAAD,EAAQC,YAAR,EAAyB;AACvBD,IAAAA,KAAK,CAACE,IAAN,CAAWD,YAAX;AAEAhB,IAAAA,OAAO,CACL,UAACkB,aAAD,EAAmC;AACjC,UAAMC,WAAW,GAAGJ,KAAK,CAACA,KAAK,CAACK,MAAN,GAAe,CAAhB,CAAzB;AAEA,UAAMC,mBAAmB,GAAGjB,cAAc,CAACc,aAAD,EAAgBC,WAAhB,CAA1C;AACA,UAAMG,0BAA0B,GAAGjB,qBAAqB,CACtDa,aADsD,EAEtDC,WAFsD,CAAxD;AAIA,UAAMI,4BAA4B,GAAGjB,uBAAuB,CAC1DY,aAD0D,EAE1DC,WAF0D,CAA5D;AAIA,UAAMK,oBAAoB,GAAGjB,eAAe,CAC1CW,aAD0C,EAE1CC,WAF0C,CAA5C;AAIA,UAAMM,mBAAmB,GAAGjB,cAAc,CAACU,aAAD,EAAgBC,WAAhB,CAA1C;AAEA,UAAIK,oBAAJ,EAA0B;AAE1BT,MAAAA,KAAK,CAACW,GAAN;AAEA,UAAIL,mBAAJ,EAAyB;AACzB,UAAII,mBAAJ,EACEV,KAAK,CAACE,IAAN,CACE,CAACE,WAAW,CAAC,CAAD,CAAZ,EAAiBD,aAAa,CAAC,CAAD,CAA9B,CADF,EAEE,CAACA,aAAa,CAAC,CAAD,CAAd,EAAmBC,WAAW,CAAC,CAAD,CAA9B,CAFF;AAIF,UAAII,4BAAJ,EACER,KAAK,CAACE,IAAN,CAAW,CAACC,aAAa,CAAC,CAAD,CAAd,EAAmBC,WAAW,CAAC,CAAD,CAA9B,CAAX;AACF,UAAIG,0BAAJ,EACEP,KAAK,CAACE,IAAN,CAAW,CAACE,WAAW,CAAC,CAAD,CAAZ,EAAiBD,aAAa,CAAC,CAAD,CAA9B,CAAX;AACH,KAjCI,CAAP,CAkCEP,cAlCF;AAoCA,WAAOI,KAAP;AACD,GAzCiB,EA0ClB,EA1CkB,EA2ClBH,eA3CkB,CAApB;AA8CA,SAAOE,KAAP;AACD","sourcesContent":["import { forEach, isEmpty, reduce, sortBy } from 'lodash/fp'\n\nimport { Interval } from '../scheduling.types'\nimport {\n  intervalCovers,\n  intervalIntersectsEnd,\n  intervalIntersectsStart,\n  intervalOutside,\n  intervalWithin,\n} from '.'\n\n/**\n * Applies closed intervals to intervals\n * Accepts two sets of intervals and splits the first set by the second set\n *\n * splitIntervals([[1,10], [11,20], [21,29]], [[8,13]])\n * returns [[1,8], [13,20], [21,29]]\n */\nexport function splitIntervals(\n  intervals: Array<Interval> = [],\n  closeIntervals: Array<Interval> = []\n): Array<Interval> {\n  if (isEmpty(closeIntervals)) return intervals\n\n  const sortedIntervals = sortBy(a => a[0])(intervals)\n\n  const stack = reduce(\n    (accum, openInterval) => {\n      accum.push(openInterval)\n\n      forEach(\n        (closeInterval: Interval): void => {\n          const topInterval = accum[accum.length - 1]\n\n          const closeCoversInterval = intervalCovers(closeInterval, topInterval)\n          const closeIntersectsIntervalEnd = intervalIntersectsEnd(\n            closeInterval,\n            topInterval\n          )\n          const closeIntersectsIntervalStart = intervalIntersectsStart(\n            closeInterval,\n            topInterval\n          )\n          const closeOutsideInterval = intervalOutside(\n            closeInterval,\n            topInterval\n          )\n          const closeWithinInterval = intervalWithin(closeInterval, topInterval)\n\n          if (closeOutsideInterval) return\n\n          accum.pop()\n\n          if (closeCoversInterval) return\n          if (closeWithinInterval)\n            accum.push(\n              [topInterval[0], closeInterval[0]],\n              [closeInterval[1], topInterval[1]]\n            )\n          if (closeIntersectsIntervalStart)\n            accum.push([closeInterval[1], topInterval[1]])\n          if (closeIntersectsIntervalEnd)\n            accum.push([topInterval[0], closeInterval[0]])\n        }\n      )(closeIntervals)\n\n      return accum\n    },\n    [],\n    sortedIntervals\n  )\n\n  return stack\n}\n"],"file":"splitIntervals.js"}