{"version":3,"sources":["../../../src/helpers/get-audit-entry-details/index.js"],"names":["get","getAuditItemsData","getLocationReference","getReferenceDetails","getValueAsPercentage","getTimezoneDatetime","getAuditEntryDetails","data","entity","timezone","createdAt","gps","items","score","locationText","gpsText","groupedData","referenceDetails","scoreText","result","timezoneHourTime","format","timestamp","timezoneDatetime","referenceLabel","label","referenceValue","value"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AAEA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,mBAHF,EAIEC,oBAJF,EAKEC,mBALF,QAMO,KANP;AAQA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AAAA,MACjCC,MADiC,GACZD,IADY,CACjCC,MADiC;AAAA,MACzBC,QADyB,GACZF,IADY,CACzBE,QADyB;AAAA,MAGjCC,SAHiC,GAGAF,MAHA,CAGjCE,SAHiC;AAAA,MAGtBC,GAHsB,GAGAH,MAHA,CAGtBG,GAHsB;AAAA,MAGjBC,KAHiB,GAGAJ,MAHA,CAGjBI,KAHiB;AAAA,MAGVC,KAHU,GAGAL,MAHA,CAGVK,KAHU;AAKzC,MAAMC,YAAY,GAAGZ,oBAAoB,CAACK,IAAD,CAAzC;AACA,MAAMQ,OAAO,GAAGf,GAAG,CAACW,GAAD,EAAM,uBAAN,EAA+B,kBAA/B,CAAnB;AACA,MAAMK,WAAW,GAAGf,iBAAiB,CAACW,KAAD,EAAQL,IAAR,CAArC;AACA,MAAMU,gBAAgB,GAAGd,mBAAmB,CAACI,IAAD,CAA5C;AACA,MAAMW,SAAS,GAAGd,oBAAoB,CAACS,KAAK,CAACM,MAAP,CAAtC;AACA,MAAMC,gBAAgB,GAAGf,mBAAmB,CAAC;AAC3CgB,IAAAA,MAAM,EAAE,QADmC;AAE3CC,IAAAA,SAAS,EAAEZ,SAFgC;AAG3CD,IAAAA,QAAQ,EAARA;AAH2C,GAAD,CAA5C;AAKA,MAAMc,gBAAgB,GAAGlB,mBAAmB,CAAC;AAC3CiB,IAAAA,SAAS,EAAEZ,SADgC;AAE3CD,IAAAA,QAAQ,EAARA;AAF2C,GAAD,CAA5C;AAKA,SAAO;AACLM,IAAAA,OAAO,EAAPA,OADK;AAELC,IAAAA,WAAW,EAAXA,WAFK;AAGLF,IAAAA,YAAY,EAAZA,YAHK;AAILU,IAAAA,cAAc,EAAEP,gBAAgB,CAACQ,KAJ5B;AAKLC,IAAAA,cAAc,EAAET,gBAAgB,CAACU,KAL5B;AAMLT,IAAAA,SAAS,EAATA,SANK;AAOLE,IAAAA,gBAAgB,EAAhBA,gBAPK;AAQLG,IAAAA,gBAAgB,EAAhBA;AARK,GAAP;AAUD","sourcesContent":["import { get } from 'lodash'\n\nimport {\n  getAuditItemsData,\n  getLocationReference,\n  getReferenceDetails,\n  getValueAsPercentage,\n  getTimezoneDatetime,\n} from '../'\n\nexport function getAuditEntryDetails(data) {\n  const { entity, timezone } = data\n\n  const { createdAt, gps, items, score } = entity\n\n  const locationText = getLocationReference(data)\n  const gpsText = get(gps, 'reverseGeocoded.label', 'Unknown Location')\n  const groupedData = getAuditItemsData(items, data)\n  const referenceDetails = getReferenceDetails(data)\n  const scoreText = getValueAsPercentage(score.result)\n  const timezoneHourTime = getTimezoneDatetime({\n    format: 'h:mm a',\n    timestamp: createdAt,\n    timezone,\n  })\n  const timezoneDatetime = getTimezoneDatetime({\n    timestamp: createdAt,\n    timezone,\n  })\n\n  return {\n    gpsText,\n    groupedData,\n    locationText,\n    referenceLabel: referenceDetails.label,\n    referenceValue: referenceDetails.value,\n    scoreText,\n    timezoneHourTime,\n    timezoneDatetime,\n  }\n}\n"],"file":"index.js"}