"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildTemplateContent = void 0;

var _lodash = require("lodash");

var _bluebird = _interopRequireDefault(require("bluebird"));

var _ = require("../");

const buildTemplateContent = _bluebird.default.method((formGroups = [], data) => {
  const {
    settings,
    timezone
  } = data;
  return _bluebird.default.map(formGroups, ({
    label,
    fieldGroups
  }) => _bluebird.default.map(fieldGroups, ({
    fields
  }) => _bluebird.default.map(fields, field => (0, _.buildTemplateFieldRow)({
    field,
    settings,
    timezone
  })).then(fieldGroupRows => {
    const rows = (0, _lodash.compact)(fieldGroupRows); // NOTE if empty return null so we can
    // prevent this field group section from
    // being created in the pdf. This can occur
    // when we have a display text field

    if ((0, _lodash.isEmpty)(rows)) {
      return null;
    }

    return (0, _.twoColumnTable)({
      headerRows: 0,
      body: [...rows]
    });
  })).then(fieldGroupTables => {
    const fieldGroups = (0, _lodash.compact)(fieldGroupTables);

    if ((0, _lodash.isEmpty)(fieldGroups)) {
      return [];
    }

    const groupHeaderTable = (0, _.table)({
      body: [[(0, _.text)(label)]],
      layout: 'noBorders',
      style: 'groupHeaderTable',
      widths: ['*']
    });
    const hLine = (0, _.horizontalLine)();
    return [groupHeaderTable, hLine, ...fieldGroups];
  }));
});

exports.buildTemplateContent = buildTemplateContent;