{"version":3,"sources":["../../../src/helpers/get-audit-items-data/index.js"],"names":["find","groupBy","map","maxBy","buildFetchUrl","floatify","getAuditItemsData","items","data","settings","awsS3BaseUrl","cloudinaryBaseUrl","groupedItems","auditData","overallActualScore","overallMaximumScore","groupIndex","key","title","group","label","groupData","groupMaximumScore","groupActualScore","item","itemIndex","hasScore","score","itemMaximumScore","scores","itemMaximumScoreWeight","value","weight","scoreWeight","assetCount","assets","length","asset","assetIndex","assetUrl","fit","height","width","link","thumbnailUrl","comments","matchingScore","scoreLabel"],"mappings":"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","sourcesContent":["import { find, groupBy, map, maxBy } from 'lodash'\n\nimport { buildFetchUrl } from '../'\nimport floatify from '../floatify'\n\nexport function getAuditItemsData(items, data) {\n  const { settings: { awsS3BaseUrl, cloudinaryBaseUrl } = {} } = data\n\n  const groupedItems = groupBy(items, 'group.id')\n\n  const auditData = {\n    overallActualScore: 0,\n    overallMaximumScore: 0,\n  }\n\n  auditData.items = map(groupedItems, (items, groupIndex) => {\n    const key = groupIndex\n    const title = items[0].group.label\n\n    const groupData = {\n      key,\n      groupMaximumScore: 0,\n      groupActualScore: 0,\n      title,\n    }\n\n    groupData.items = items.map((item, itemIndex) => {\n      // NOTE: we handle scores of -1, 0 and 1\n      // -1 scores are skipped from group max and actual score\n      // 0 and 1 must be included in the final scores\n      const hasScore = item.score !== null && item.score !== -1\n\n      if (hasScore) {\n        const itemMaximumScore = maxBy(item.scores, 'value')\n        const itemMaximumScoreWeight = itemMaximumScore.value * item.weight\n\n        //  increment overall audit scores\n        groupData.groupMaximumScore = floatify(\n          groupData.groupMaximumScore + itemMaximumScoreWeight\n        )\n\n        groupData.groupActualScore = floatify(\n          groupData.groupActualScore + item.scoreWeight\n        )\n      }\n\n      const assetCount = item.assets.length\n\n      const assets = item.assets.map((asset, assetIndex) => {\n        const assetUrl = buildFetchUrl(asset, {\n          awsS3BaseUrl,\n          cloudinaryBaseUrl,\n          fit: true,\n          height: 880,\n          width: 880,\n        })\n\n        const link = `${awsS3BaseUrl}/${asset}`\n\n        const thumbnailUrl = buildFetchUrl(asset, {\n          awsS3BaseUrl,\n          cloudinaryBaseUrl,\n          width: 100,\n        })\n\n        const key = `${groupIndex}-item-asset-${assetIndex}`\n\n        return {\n          assetUrl,\n          key,\n          link,\n          thumbnailUrl,\n        }\n      })\n\n      const comments = item.comments\n      const label = item.label\n      const score = item.score\n\n      const key = `${groupIndex}-item-${itemIndex}`\n      const matchingScore = find(item.scores, { value: score })\n\n      // NOTE: ensure we have a score otherwise fallback to - value\n      const scoreLabel = hasScore && matchingScore ? matchingScore.label : '-'\n      const scoreWeight = hasScore ? item.scoreWeight : '-'\n      const weight = hasScore ? item.weight : '-'\n\n      return {\n        assetCount,\n        assets,\n        comments,\n        key,\n        label,\n        score,\n        scoreLabel,\n        scoreWeight,\n        weight,\n      }\n    })\n\n    return groupData\n  })\n\n  return auditData\n}\n"],"file":"index.js"}