{"version":3,"sources":["../../src/service-hours/schema.ts"],"names":["array","number","object","string","filter","first","isEmpty","isNil","last","orderBy","values","some","MAX_OFFSET_MS","Behaviours","Durations","Types","Weekdays","hoursSchema","type","oneOf","Default","Override","required","start","min","end","when","endSchema","duration","integer","durationSchema","expectedDuration","message","max","description","behaviour","Open","Close","behaviourSchema","strip","schema","timezone","options","startWeekday","hours","of","test","value","defaultHours","hasOverlappingHours","validateOverlappingHours","hoursArr","overrideHours","isUnix","failingIndex","sortedHoursArr","firstStart","lastEnd","isRangeWithinWeek","thisHours","thisIndex","overlap","otherHours","otherIndex","thisStart","thisEnd","otherStart","otherEnd","isMatching","isWithin","overlappingStart","overlappingEnd"],"mappings":"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","sourcesContent":["import {\n  array,\n  number,\n  object,\n  string,\n  NumberSchema,\n  StringSchema,\n} from 'yup'\n\nimport { filter, first, isEmpty, isNil, last, orderBy, values } from 'lodash/fp'\nimport { some } from 'lodash'\n\nconst MAX_OFFSET_MS = 604800000\n\nexport enum Behaviours {\n  Open = 'OPEN',\n  Close = 'CLOSE',\n}\n\nexport enum Durations {\n  Second = 1000,\n  Minute = 60000,\n  Hour = 3600000,\n  Day = 86400000,\n  Week = 604800000,\n}\n\nexport enum Types {\n  Default = 'DEFAULT',\n  Override = 'OVERRIDE',\n}\n\nexport enum Weekdays {\n  Monday = 'MONDAY',\n  Tuesday = 'TUESDAY',\n  Wednesday = 'WEDNESDAY',\n  Thursday = 'THURSDAY',\n  Friday = 'FRIDAY',\n  Saturday = 'SATURDAY',\n  Sunday = 'SUNDAY',\n}\n\nexport interface DefaultHoursSchema {\n  description?: string\n  duration?: number\n  end: number\n  start: number\n  type: Types\n}\n\nexport interface OverrideHoursSchema extends DefaultHoursSchema {\n  behaviour: Behaviours\n}\n\nexport type HoursSchema = DefaultHoursSchema | OverrideHoursSchema\n\nexport interface Schema {\n  hours: Array<HoursSchema>\n  options?: object\n  timezone: string\n}\n\nconst hoursSchema = object({\n  type: string()\n    .oneOf([Types.Default, Types.Override])\n    .required(),\n  start: number()\n    .min(0)\n    .required(),\n  end: number()\n    .min(0)\n    .required()\n    .when('start', (start: number, endSchema: NumberSchema) => {\n      return endSchema.min(start)\n    }),\n  duration: number()\n    .integer()\n    .when(['start', 'end'], (start: number, end: number, durationSchema: NumberSchema) => {\n      // NOTE This is a bit of a hack to check the exact value, but I can't find\n      // an API to check the exact value of a number\n      const expectedDuration = end - start\n      const message = '${path} must be equal to ' + expectedDuration\n      return durationSchema\n        .min(expectedDuration, message)\n        .max(expectedDuration, message)\n    }),\n  description: string(),\n  behaviour: string()\n    .oneOf([Behaviours.Open, Behaviours.Close])\n    .when('type', (type: Types, behaviourSchema: StringSchema) => {\n      return type === Types.Override ? behaviourSchema.required() : behaviourSchema.strip(true)\n    }),\n})\n\nexport const schema = object({\n  timezone: string()\n    .required(),\n  options: object({\n    startWeekday: string()\n      .oneOf(values(Weekdays))\n  }),\n  hours: array()\n    .of(hoursSchema)\n    .test('hasUndefinedHours', 'hours is a required field', value => !isNil(value))\n    .test(\n      'hasOverlappingDefaultHours',\n      'default hours must not overlap',\n      value => {\n        const defaultHours = filter({ type: Types.Default }, value)\n        const hasOverlappingHours = validateOverlappingHours({\n          hoursArr: defaultHours,\n        }) !== -1\n\n        if (hasOverlappingHours) return false\n\n        return true\n      }\n    )\n    .test(\n      'hasOverlappingOverrideHours',\n      'override hours must not overlap',\n      value => {\n        const overrideHours = filter({ type: Types.Override }, value)\n        const hasOverlappingHours = validateOverlappingHours({\n          hoursArr: overrideHours,\n          isUnix: true,\n        }) !== -1\n\n        if (hasOverlappingHours) return false\n\n        return true\n      }\n    ),\n})\n\ninterface ValidateOverlappingHours {\n  hoursArr: Array<HoursSchema>\n  isUnix?: Boolean\n}\n\n/**\n * validateOverlappingHours\n * Validates that any hours do not overlap each other \n * Validates default hours are within a week range\n */\nexport function validateOverlappingHours(options: ValidateOverlappingHours): Number {\n  const { hoursArr, isUnix } = options\n  let failingIndex = -1\n\n  if (isEmpty(hoursArr)) {\n    return failingIndex\n  }\n\n  // NOTE: when default hours and not override hours\n  if (!isUnix) {\n    const sortedHoursArr = orderBy(['start', 'end'], ['asc', 'asc'], hoursArr)\n\n    const { start: firstStart } = first(sortedHoursArr)\n    const { end: lastEnd } = last(sortedHoursArr)\n\n    // NOTE: default service hour values are invalid if the first start and\n    // last end exceed the MAX_OFFSET_MS which is a week\n    const isRangeWithinWeek = (lastEnd - firstStart) <= MAX_OFFSET_MS\n\n    if (!isRangeWithinWeek) {\n      failingIndex = 1\n      return failingIndex\n    }\n  }\n\n  some(hoursArr, (thisHours, thisIndex) => {\n    const overlap = some(hoursArr, (otherHours, otherIndex) => {\n      if (otherIndex === thisIndex) return false\n\n      const { start: thisStart, end: thisEnd } = thisHours\n      const { start: otherStart, end: otherEnd } = otherHours\n\n      const isMatching = otherStart === thisStart && otherEnd === thisEnd\n      const isWithin = thisStart > otherStart && thisEnd < otherEnd\n      const overlappingStart = thisStart < otherStart && thisEnd > otherStart\n      const overlappingEnd = thisStart < otherEnd && thisEnd > otherEnd\n\n      return isMatching || isWithin || overlappingStart || overlappingEnd\n    })\n\n    if (overlap) {\n      failingIndex = thisIndex\n      return true\n    }\n  })\n\n  return failingIndex\n}\n\nexport default schema\n"],"file":"schema.js"}