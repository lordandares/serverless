{"version":3,"sources":["../../../src/scheduling/generators/scheduleIntervalsGenerator.ts"],"names":["scheduleIntervalsGenerator","generateNonRepeatingSchedule","generateRepeatingSchedule","StrategyTypes","props","type","strategy","isRepeating","NoRepeat"],"mappings":";;oDAkBiBA,0B;;AAjBjB,SACEC,4BADF,EAEEC,yBAFF,QAGO,YAHP;AAIA,SAAmBC,aAAnB,QAAwC,qBAAxC;;AAUA;;;AAGA,OAAO,SAAUH,0BAAV,CAAqCI,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAESC,UAAAA,IAFT,GAGDD,KAHC,CAEHE,QAFG,CAESD,IAFT;AAICE,UAAAA,WAJD,GAIeF,IAAI,KAAKF,aAAa,CAACK,QAJtC;;AAAA,eAMDD,WANC;AAAA;AAAA;AAAA;;AAOI,wCAAOL,yBAAyB,CAACE,KAAD,CAAhC;;AAPJ;AAAA;;AAAA;AAUE,wCAAOH,4BAA4B,CAACG,KAAD,CAAnC;;AAVF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { Schema as ServiceHoursSchema } from '../../service-hours'\nimport {\n  generateNonRepeatingSchedule,\n  generateRepeatingSchedule,\n} from '../helpers'\nimport { Strategy, StrategyTypes } from '../scheduling.types'\n\ninterface ScheduleIntervalsGenerator {\n  readonly end: number\n  readonly isInitial: boolean\n  readonly strategy: Strategy\n  readonly serviceHours: ServiceHoursSchema\n  readonly start: number\n}\n\n/**\n * Generates schedule service and occurrence intervals\n */\nexport function* scheduleIntervalsGenerator(props: ScheduleIntervalsGenerator) {\n  const {\n    strategy: { type },\n  } = props\n  const isRepeating = type !== StrategyTypes.NoRepeat\n\n  if (isRepeating) {\n    return yield* generateRepeatingSchedule(props)\n  }\n\n  return yield* generateNonRepeatingSchedule(props)\n}\n"],"file":"scheduleIntervalsGenerator.js"}