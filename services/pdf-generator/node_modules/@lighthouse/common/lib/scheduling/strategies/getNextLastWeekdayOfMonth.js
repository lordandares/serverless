import moment from 'moment-timezone';
import { Unit } from '../scheduling.types';
/**
 * Generates next occurrence interval for last weekday of month strategy
 */

export function getNextLastWeekdayOfMonth(_ref) {
  var end = _ref.end,
      isInitial = _ref.isInitial,
      options = _ref.options,
      start = _ref.start,
      timezone = _ref.timezone;
  var duration = options.duration,
      frequency = options.frequency,
      weekday = options.weekday;
  var durationUnit = duration.unit,
      durationValue = duration.value;
  var frequencyUnit = frequency.unit,
      frequencyValue = frequency.value;
  var dateCursor = start;

  while (dateCursor < end) {
    var mStartOfMonth = isInitial ? moment.tz(dateCursor, timezone).add(1, Unit.Month).startOf(Unit.Month) : moment.tz(dateCursor, timezone).add(frequencyValue + 1, frequencyUnit).startOf(Unit.Month);
    var year = mStartOfMonth.year();
    var month = mStartOfMonth.month();
    var startDay = mStartOfMonth.isoWeekday();
    var date = startDay > weekday ? weekday - startDay + 8 : weekday - startDay + 1;
    var nextOccurrenceEnd = moment.tz(timezone).year(year).month(month).date(date).add(1, Unit.Day).startOf(Unit.Day).subtract(1, Unit.Week).valueOf();
    var nextOccurrenceStart = moment.tz(nextOccurrenceEnd, timezone).subtract(durationValue, durationUnit).valueOf();
    if (nextOccurrenceEnd <= nextOccurrenceStart || nextOccurrenceEnd > end) return;

    if (nextOccurrenceStart >= start) {
      return [nextOccurrenceStart, nextOccurrenceEnd - 1];
    }

    var nextDateCursor = mStartOfMonth.valueOf();
    dateCursor = nextDateCursor;
  }
}
//# sourceMappingURL=getNextLastWeekdayOfMonth.js.map