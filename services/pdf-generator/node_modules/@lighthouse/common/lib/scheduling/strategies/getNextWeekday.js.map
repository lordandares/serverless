{"version":3,"sources":["../../../src/scheduling/strategies/getNextWeekday.ts"],"names":["moment","Unit","getNextWeekday","end","isInitial","options","start","timezone","duration","frequency","weekday","durationUnit","unit","durationValue","value","frequencyUnit","frequencyValue","dateCursor","tz","startOf","Week","valueOf","add","nextOccurrenceEnd","isoWeekday","Day","nextOccurrenceStart","subtract","nextDateCursor"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,SAA4BC,IAA5B,QAAwC,qBAAxC;AAEA;;;;AAGA,OAAO,SAASC,cAAT,OAMsB;AAAA,MAL3BC,GAK2B,QAL3BA,GAK2B;AAAA,MAJ3BC,SAI2B,QAJ3BA,SAI2B;AAAA,MAH3BC,OAG2B,QAH3BA,OAG2B;AAAA,MAF3BC,KAE2B,QAF3BA,KAE2B;AAAA,MAD3BC,QAC2B,QAD3BA,QAC2B;AAAA,MACnBC,QADmB,GACcH,OADd,CACnBG,QADmB;AAAA,MACTC,SADS,GACcJ,OADd,CACTI,SADS;AAAA,MACEC,OADF,GACcL,OADd,CACEK,OADF;AAAA,MAEbC,YAFa,GAE0BH,QAF1B,CAEnBI,IAFmB;AAAA,MAEQC,aAFR,GAE0BL,QAF1B,CAECM,KAFD;AAAA,MAGbC,aAHa,GAG4BN,SAH5B,CAGnBG,IAHmB;AAAA,MAGSI,cAHT,GAG4BP,SAH5B,CAGEK,KAHF;AAK3B,MAAIG,UAAU,GAAGb,SAAS,GACtBJ,MAAM,CACHkB,EADH,CACMZ,KADN,EACaC,QADb,EAEGY,OAFH,CAEWlB,IAAI,CAACmB,IAFhB,EAGGC,OAHH,EADsB,GAKtBrB,MAAM,CACHkB,EADH,CACMZ,KADN,EACaC,QADb,EAEGe,GAFH,CAEON,cAFP,EAEuBD,aAFvB,EAGGI,OAHH,CAGWlB,IAAI,CAACmB,IAHhB,EAIGC,OAJH,EALJ;;AAWA,SAAOJ,UAAU,GAAGd,GAApB,EAAyB;AACvB,QAAMoB,iBAAiB,GAAGvB,MAAM,CAC7BkB,EADuB,CACpBD,UADoB,EACRV,QADQ,EAEvBiB,UAFuB,CAEZd,OAFY,EAGvBY,GAHuB,CAGnB,CAHmB,EAGhBrB,IAAI,CAACwB,GAHW,EAIvBN,OAJuB,CAIflB,IAAI,CAACwB,GAJU,EAKvBJ,OALuB,EAA1B;AAMA,QAAMK,mBAAmB,GAAG1B,MAAM,CAC/BkB,EADyB,CACtBK,iBADsB,EACHhB,QADG,EAEzBoB,QAFyB,CAEhBd,aAFgB,EAEDF,YAFC,EAGzBU,OAHyB,EAA5B;AAKA,QAAIE,iBAAiB,IAAIG,mBAArB,IAA4CH,iBAAiB,GAAGpB,GAApE,EACE;;AAEF,QAAIuB,mBAAmB,IAAIpB,KAA3B,EAAkC;AAChC,aAAO,CAACoB,mBAAD,EAAsBH,iBAAiB,GAAG,CAA1C,CAAP;AACD;;AAED,QAAMK,cAAc,GAAG5B,MAAM,CAC1BkB,EADoB,CACjBD,UADiB,EACLV,QADK,EAEpBe,GAFoB,CAEhB,CAFgB,EAEbrB,IAAI,CAACmB,IAFQ,EAGpBC,OAHoB,EAAvB;AAIAJ,IAAAA,UAAU,GAAGW,cAAb;AACD;AACF","sourcesContent":["import moment from 'moment-timezone'\n\nimport { GetNext, Interval, Unit } from '../scheduling.types'\n\n/**\n * Generates next occurrence interval for weekdays strategy\n */\nexport function getNextWeekday({\n  end,\n  isInitial,\n  options,\n  start,\n  timezone,\n}: GetNext): Interval | void {\n  const { duration, frequency, weekday } = options\n  const { unit: durationUnit, value: durationValue } = duration\n  const { unit: frequencyUnit, value: frequencyValue } = frequency\n\n  let dateCursor = isInitial\n    ? moment\n        .tz(start, timezone)\n        .startOf(Unit.Week)\n        .valueOf()\n    : moment\n        .tz(start, timezone)\n        .add(frequencyValue, frequencyUnit)\n        .startOf(Unit.Week)\n        .valueOf()\n\n  while (dateCursor < end) {\n    const nextOccurrenceEnd = moment\n      .tz(dateCursor, timezone)\n      .isoWeekday(weekday)\n      .add(1, Unit.Day)\n      .startOf(Unit.Day)\n      .valueOf()\n    const nextOccurrenceStart = moment\n      .tz(nextOccurrenceEnd, timezone)\n      .subtract(durationValue, durationUnit)\n      .valueOf()\n\n    if (nextOccurrenceEnd <= nextOccurrenceStart || nextOccurrenceEnd > end)\n      return\n\n    if (nextOccurrenceStart >= start) {\n      return [nextOccurrenceStart, nextOccurrenceEnd - 1]\n    }\n\n    const nextDateCursor = moment\n      .tz(dateCursor, timezone)\n      .add(1, Unit.Week)\n      .valueOf()\n    dateCursor = nextDateCursor\n  }\n}\n"],"file":"getNextWeekday.js"}