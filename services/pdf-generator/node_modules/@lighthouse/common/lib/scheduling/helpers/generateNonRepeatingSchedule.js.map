{"version":3,"sources":["../../../src/scheduling/helpers/generateNonRepeatingSchedule.ts"],"names":["generateNonRepeatingSchedule","isEmpty","first","last","hasValidStartAndEnd","IntervalTypes","occurrenceIntervalsGenerator","serviceIntervalsGenerator","props","end","isInitial","serviceHours","start","strategy","isStartAndEndValid","serviceIntervalSequence","hours","timezone","hasServiceHours","intervals","serviceIntervals","serviceInterval","interval","type","Service","occurrenceIntervalsSequence","occurrenceInterval","Occurrence"],"mappings":";;;oDASiBA,4B;;AATjB,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,IAAzB,QAAqC,WAArC;AAEA,SAASC,mBAAT,QAAoC,GAApC;AACA,SAASC,aAAT,QAA0D,qBAA1D;AACA,SAASC,4BAAT,EAAuCC,yBAAvC,QAAwE,eAAxE;AAEA;;;;AAGA,OAAO,SAAUP,4BAAV,CACLQ,KADK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGGC,UAAAA,GAHH,GAGqDD,KAHrD,CAGGC,GAHH,EAGQC,SAHR,GAGqDF,KAHrD,CAGQE,SAHR,EAGmBC,YAHnB,GAGqDH,KAHrD,CAGmBG,YAHnB,EAGiCC,KAHjC,GAGqDJ,KAHrD,CAGiCI,KAHjC,EAGwCC,QAHxC,GAGqDL,KAHrD,CAGwCK,QAHxC;AAKCC,UAAAA,kBALD,GAKsBV,mBAAmB,CAAC;AAAEK,YAAAA,GAAG,EAAHA,GAAF;AAAOG,YAAAA,KAAK,EAALA;AAAP,WAAD,CALzC;;AAAA,cAMAE,kBANA;AAAA;AAAA;AAAA;;AAAA,2CAM2B,EAN3B;;AAAA;AAQCC,UAAAA,uBARD,GAQ2BR,yBAAyB,CAAC;AACxDE,YAAAA,GAAG,EAAHA,GADwD;AAExDE,YAAAA,YAAY,EAAZA,YAFwD;AAGxDC,YAAAA,KAAK,EAALA;AAHwD,WAAD,CARpD;AAcGI,UAAAA,KAdH,GAcuBL,YAdvB,CAcGK,KAdH,EAcUC,QAdV,GAcuBN,YAdvB,CAcUM,QAdV;AAeCC,UAAAA,eAfD,GAemB,CAACjB,OAAO,CAACe,KAAD,CAf3B;AAgBCG,UAAAA,SAhBD,sBAgBiBJ,uBAhBjB,GAkBL;AACA;;AACMK,UAAAA,gBApBD,GAoBoB,CAACF,eAAD,GACrB,CAAC,CAACN,KAAD,EAAQH,GAAR,CAAD,CADqB,GAErB,CAACR,OAAO,CAACkB,SAAD,CAAR,GACA,CAAC,CAACjB,KAAK,CAACiB,SAAD,CAAL,CAAiB,CAAjB,CAAD,EAAsBhB,IAAI,CAACgB,SAAD,CAAJ,CAAgB,CAAhB,CAAtB,CAAD,CADA,GAEA,EAxBC;AAAA,sCA0ByBC,gBA1BzB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0BMC,UAAAA,eA1BN;AAAA;AA2BH,iBAAM;AAAEC,YAAAA,QAAQ,EAAED,eAAZ;AAA6BE,YAAAA,IAAI,EAAElB,aAAa,CAACmB;AAAjD,WAAN;;AA3BG;AA6BGC,UAAAA,2BA7BH,GA6BiCnB,4BAA4B,CAAC;AAC/DI,YAAAA,SAAS,EAATA,SAD+D;AAE/DW,YAAAA,eAAe,EAAfA,eAF+D;AAG/DR,YAAAA,QAAQ,EAARA,QAH+D;AAI/DI,YAAAA,QAAQ,EAARA;AAJ+D,WAAD,CA7B7D;AAAA;AAAA;AAAA;AAAA;AAAA,sBAoC8BQ,2BApC9B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoCQC,UAAAA,kBApCR;AAAA;AAqCD,iBAAM;AAAEJ,YAAAA,QAAQ,EAAEI,kBAAZ;AAAgCH,YAAAA,IAAI,EAAElB,aAAa,CAACsB;AAApD,WAAN;;AArCC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { isEmpty, first, last } from 'lodash/fp'\n\nimport { hasValidStartAndEnd } from '.'\nimport { IntervalTypes, ScheduleIntervalsGenerator } from '../scheduling.types'\nimport { occurrenceIntervalsGenerator, serviceIntervalsGenerator } from '../generators'\n\n/**\n * Generates non repeating schedule service and occurrence intervals\n */\nexport function* generateNonRepeatingSchedule(\n  props: ScheduleIntervalsGenerator\n) {\n  const { end, isInitial, serviceHours, start, strategy } = props\n\n  const isStartAndEndValid = hasValidStartAndEnd({ end, start })\n  if (!isStartAndEndValid) return []\n\n  const serviceIntervalSequence = serviceIntervalsGenerator({\n    end,\n    serviceHours,\n    start,\n  })\n\n  const { hours, timezone } = serviceHours\n  const hasServiceHours = !isEmpty(hours)\n  const intervals = [...serviceIntervalSequence]\n\n  // NOTE: when non repeating and has service hours the service interval is\n  // from the first and last service interval otherwise from the start and end\n  const serviceIntervals = !hasServiceHours\n    ? [[start, end]]\n    : !isEmpty(intervals)\n    ? [[first(intervals)[0], last(intervals)[1]]]\n    : []\n\n  for (const serviceInterval of serviceIntervals) {\n    yield { interval: serviceInterval, type: IntervalTypes.Service }\n\n    const occurrenceIntervalsSequence = occurrenceIntervalsGenerator({\n      isInitial,\n      serviceInterval,\n      strategy,\n      timezone,\n    })\n\n    for (const occurrenceInterval of occurrenceIntervalsSequence) {\n      yield { interval: occurrenceInterval, type: IntervalTypes.Occurrence }\n    }\n  }\n}\n"],"file":"generateNonRepeatingSchedule.js"}