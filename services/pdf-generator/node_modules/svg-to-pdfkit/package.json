{
  "_args": [
    [
      {
        "raw": "https://github.com/alafr/SVG-to-PDFKit/tarball/master",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/alafr/SVG-to-PDFKit/tarball/master",
        "spec": "https://github.com/alafr/SVG-to-PDFKit/tarball/master",
        "type": "remote"
      },
      "C:\\Users\\user"
    ]
  ],
  "_from": "https://github.com/alafr/SVG-to-PDFKit/tarball/master",
  "_id": "svg-to-pdfkit@0.1.7",
  "_inCache": true,
  "_location": "/svg-to-pdfkit",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/alafr/SVG-to-PDFKit/tarball/master",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/alafr/SVG-to-PDFKit/tarball/master",
    "spec": "https://github.com/alafr/SVG-to-PDFKit/tarball/master",
    "type": "remote"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://github.com/alafr/SVG-to-PDFKit/tarball/master",
  "_shasum": "1c9071cc10cb5bf8bab41a5bcc8356fb0ebddbe2",
  "_shrinkwrap": null,
  "_spec": "https://github.com/alafr/SVG-to-PDFKit/tarball/master",
  "_where": "C:\\Users\\user",
  "author": {
    "name": "alafr"
  },
  "bugs": {
    "url": "https://github.com/alafr/SVG-to-PDFKit/issues"
  },
  "dependencies": {
    "pdfkit": ">=0.8.1"
  },
  "description": "Insert SVG into a PDF document created with PDFKit",
  "devDependencies": {},
  "homepage": "https://github.com/alafr/SVG-to-PDFKit#readme",
  "license": "MIT",
  "main": "source.js",
  "name": "svg-to-pdfkit",
  "optionalDependencies": {},
  "readme": "# SVG-to-PDFKit\nInsert SVG into a PDF document created with PDFKit.\n\n## Install\n\n    npm install svg-to-pdfkit --save\n\n## Use\n\n    SVGtoPDF(doc, svg, x, y, options);\n\n&nbsp; &nbsp; If you prefer, you can add the function to the PDFDocument prototype:\n\n    PDFDocument.prototype.addSVG = function(svg, x, y, options) {\n      return SVGtoPDF(this, svg, x, y, options), this;\n    };\n\n&nbsp; &nbsp; And then simply call:\n\n    doc.addSVG(svg, x, y, options);\n\n## Parameters\n\n    doc [PDFDocument] = the PDF document created with PDFKit\n    svg [SVGElement or string] = the SVG object or XML code\n    x, y [number] = the position where the SVG will be added\n    options [Object] = >\n      - width, height [number] = initial viewport, by default it's the page dimensions\n      - preserveAspectRatio [string] = override alignment of the SVG content inside its viewport\n      - useCSS [boolean] = use the CSS styles computed by the browser (for SVGElement only)\n      - fontCallback [function] = function called to get the fonts, see source code\n      - imageCallback [function] = same as above for the images (for Node.js)\n      - documentCallback [function] = same as above for the external SVG documents\n      - colorCallback [function] = function called to get color, making mapping to CMYK possible\n      - warningCallback [function] = function called when there is a warning\n      - assumePt [boolean] = assume that units are PDF points instead of SVG pixels\n      - precision [number] = precision factor for approximative calculations (default = 3)\n\n## Demos\n&nbsp; &nbsp; <a href=\"https://alafr.github.io/SVG-to-PDFKit/examples/demo.htm\" target=\"_blank\">https://alafr.github.io/SVG-to-PDFKit/examples/demo.htm</a>\n\n&nbsp; &nbsp; <a href=\"https://alafr.github.io/SVG-to-PDFKit/examples/options.htm\" target=\"_blank\">https://alafr.github.io/SVG-to-PDFKit/examples/options.htm</a>\n\n## NodeJS example\n&nbsp; &nbsp; <a href=\"https://runkit.com/alafr/5a1377ff160182001232a91d\" target=\"_blank\">https://runkit.com/alafr/5a1377ff160182001232a91d</a>\n\n## Supported\n - shapes: rect, circle, path, ellipse, line, polyline, polygon\n - special elements: use, nested svg\n - text elements: text, tspan, textPath\n - text attributes: x, y, dx, dy, rotate, text-anchor, textLength, word-spacing, letter-spacing, font-size\n - styling: with attributes only\n - colors: fill, stroke & color (rgb, rgba, hex, string), fill-opacity, stroke-opacity & opacity\n - units: all standard units\n - transformations: transform, viewBox & preserveAspectRatio attributes\n - clip paths & masks\n - images\n - fonts\n - gradients\n - patterns\n - links\n\n## Unsupported\n - filters\n - text attributes: font-variant, writing-mode, unicode-bidi\n - foreignObject (<a href=\"https://github.com/alafr/SVG-to-PDFKit/issues/37\">#37</a>)\n - other things I don't even know they exist\n\n## Warning\n - Use an updated PDFKit version (â‰¥0.8.1): see <a href=\"https://github.com/alafr/pdfkit/wiki/How-to-install-and-build-a-PDFKit-branch\">here</a> how to build it, or use the prebuilt file in the <a href=\"https://github.com/alafr/SVG-to-PDFKit/tree/master/examples\">examples</a> folder.\n - There are bugs, please send issues and/or pull requests.\n\n## License\n&nbsp; &nbsp; <a href=\"http://choosealicense.com/licenses/mit/\">MIT</a>\n\n## Other useful projects\n - <a href=\"https://github.com/devongovett/pdfkit\">PDFKit</a>, the JavaScript PDF generation library for Node and the browser.\n - For inserting SVG graphics into a PDFKit document there is also <a href=\"https://github.com/devongovett/svgkit\">svgkit</a>.\n - For the opposite conversion, from PDF to SVG, you can use <a href=\"https://github.com/mozilla/pdf.js\">Mozilla's PDF.js</a>.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alafr/SVG-to-PDFKit.git"
  },
  "version": "0.1.7"
}
