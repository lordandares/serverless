{"version":3,"sources":["../../../src/scheduling/helpers/convertToTimezone.ts"],"names":["moment","DATE_FORMAT","convertToTimezone","timestamp","timezone","datestring","utc","format","mTimestamp","tz","valueOf"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,IAAMC,WAAW,GAAG,kBAApB;AAEA;;;;;;;;AAOA,OAAO,SAASC,iBAAT,CAA2BC,SAA3B,EAA8CC,QAA9C,EAAwE;AAC7E,MAAMC,UAAkB,GAAGL,MAAM,CAACM,GAAP,CAAWH,SAAX,EAAsBI,MAAtB,CAA6BN,WAA7B,CAA3B;AACA,MAAMO,UAAkB,GAAGR,MAAM,CAACS,EAAP,CAAUJ,UAAV,EAAsBD,QAAtB,EAAgCM,OAAhC,EAA3B;AACA,SAAOF,UAAP;AACD","sourcesContent":["import moment from 'moment-timezone'\n\nconst DATE_FORMAT = 'YYYY-MM-DD HH:mm'\n\n/**\n * Accepts a timestamp and returns the same timestamp but in the timezone\n * provided\n *\n * convertToTimezone(1561248000000, 'Australia/Melbourne') // 2019-06-23T00:00:00+00:00\n * returns 1561212000000 // 2019-06-23T00:00:00+10:00\n */\nexport function convertToTimezone(timestamp: number, timezone: string): moment {\n  const datestring: string = moment.utc(timestamp).format(DATE_FORMAT)\n  const mTimestamp: number = moment.tz(datestring, timezone).valueOf()\n  return mTimestamp\n}\n"],"file":"convertToTimezone.js"}