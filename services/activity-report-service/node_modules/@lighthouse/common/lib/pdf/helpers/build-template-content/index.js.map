{"version":3,"sources":["../../../../src/pdf/helpers/build-template-content/index.js"],"names":["compact","isEmpty","Promise","buildTemplateFieldRow","horizontalLine","table","text","twoColumnTable","buildTemplateContent","method","formGroups","data","settings","timezone","map","label","fieldGroups","fields","field","then","fieldGroupRows","rows","headerRows","body","fieldGroupTables","groupHeaderTable","layout","style","widths","hLine"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,QAAjC;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,SACEC,qBADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,cALF,QAMO,KANP;AAQA,OAAO,IAAMC,oBAAoB,GAAGN,OAAO,CAACO,MAAR,CAAe,YAA2B;AAAA,MAA1BC,UAA0B,uEAAb,EAAa;AAAA,MAATC,IAAS;AAAA,MACpEC,QADoE,GAC7CD,IAD6C,CACpEC,QADoE;AAAA,MAC1DC,QAD0D,GAC7CF,IAD6C,CAC1DE,QAD0D;AAG5E,SAAOX,OAAO,CAACY,GAAR,CAAYJ,UAAZ,EAAwB;AAAA,QAAGK,KAAH,QAAGA,KAAH;AAAA,QAAUC,WAAV,QAAUA,WAAV;AAAA,WAC7Bd,OAAO,CAACY,GAAR,CAAYE,WAAZ,EAAyB;AAAA,UAAGC,MAAH,SAAGA,MAAH;AAAA,aACvBf,OAAO,CAACY,GAAR,CAAYG,MAAZ,EAAoB,UAAAC,KAAK;AAAA,eACvBf,qBAAqB,CAAC;AAAEe,UAAAA,KAAK,EAALA,KAAF;AAASN,UAAAA,QAAQ,EAARA,QAAT;AAAmBC,UAAAA,QAAQ,EAARA;AAAnB,SAAD,CADE;AAAA,OAAzB,EAEEM,IAFF,CAEO,UAAAC,cAAc,EAAI;AACvB,YAAMC,IAAI,GAAGrB,OAAO,CAACoB,cAAD,CAApB,CADuB,CAGvB;AACA;AACA;AACA;;AACA,YAAInB,OAAO,CAACoB,IAAD,CAAX,EAAmB;AACjB,iBAAO,IAAP;AACD;;AAED,eAAOd,cAAc,CAAC;AACpBe,UAAAA,UAAU,EAAE,CADQ;AAEpBC,UAAAA,IAAI,qBAAMF,IAAN;AAFgB,SAAD,CAArB;AAID,OAjBD,CADuB;AAAA,KAAzB,EAmBEF,IAnBF,CAmBO,UAAAK,gBAAgB,EAAI;AACzB,UAAMR,WAAW,GAAGhB,OAAO,CAACwB,gBAAD,CAA3B;;AAEA,UAAIvB,OAAO,CAACe,WAAD,CAAX,EAA0B;AACxB,eAAO,EAAP;AACD;;AAED,UAAMS,gBAAgB,GAAGpB,KAAK,CAAC;AAC7BkB,QAAAA,IAAI,EAAE,CAAC,CAACjB,IAAI,CAACS,KAAD,CAAL,CAAD,CADuB;AAE7BW,QAAAA,MAAM,EAAE,WAFqB;AAG7BC,QAAAA,KAAK,EAAE,kBAHsB;AAI7BC,QAAAA,MAAM,EAAE,CAAC,GAAD;AAJqB,OAAD,CAA9B;AAOA,UAAMC,KAAK,GAAGzB,cAAc,EAA5B;AAEA,cAAQqB,gBAAR,EAA0BI,KAA1B,4BAAoCb,WAApC;AACD,KApCD,CAD6B;AAAA,GAAxB,CAAP;AAuCD,CA1CmC,CAA7B","sourcesContent":["import { compact, isEmpty } from 'lodash'\nimport Promise from 'bluebird'\n\nimport {\n  buildTemplateFieldRow,\n  horizontalLine,\n  table,\n  text,\n  twoColumnTable,\n} from '../'\n\nexport const buildTemplateContent = Promise.method((formGroups = [], data) => {\n  const { settings, timezone } = data\n\n  return Promise.map(formGroups, ({ label, fieldGroups }) =>\n    Promise.map(fieldGroups, ({ fields }) =>\n      Promise.map(fields, field =>\n        buildTemplateFieldRow({ field, settings, timezone })\n      ).then(fieldGroupRows => {\n        const rows = compact(fieldGroupRows)\n\n        // NOTE if empty return null so we can\n        // prevent this field group section from\n        // being created in the pdf. This can occur\n        // when we have a display text field\n        if (isEmpty(rows)) {\n          return null\n        }\n\n        return twoColumnTable({\n          headerRows: 0,\n          body: [...rows],\n        })\n      })\n    ).then(fieldGroupTables => {\n      const fieldGroups = compact(fieldGroupTables)\n\n      if (isEmpty(fieldGroups)) {\n        return []\n      }\n\n      const groupHeaderTable = table({\n        body: [[text(label)]],\n        layout: 'noBorders',\n        style: 'groupHeaderTable',\n        widths: ['*'],\n      })\n\n      const hLine = horizontalLine()\n\n      return [groupHeaderTable, hLine, ...fieldGroups]\n    })\n  )\n})\n"],"file":"index.js"}