"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateDefinition = generateDefinition;

var _lodash = require("lodash");

var _bluebird = _interopRequireDefault(require("bluebird"));

var _constants = require("../../../constants");

var _ = require("../");

function generateDefinition(options) {
  const {
    content,
    fileTitle,
    footer = _.defaultFooter,
    header = _.defaultHeader,
    logoUrl = _constants.LIGHTHOUSE_LOGO_URL,
    pageMargins = _constants.DEFAULT_PAGE_MARGINS,
    pageOrientation = _constants.DEFAULT_PAGE_ORIENTATION,
    pageSize = _constants.DEFAULT_PAGE_SIZE,
    styles = {},
    timestamp,
    timezone,
    type
  } = options;
  const pdfStyles = (0, _lodash.defaults)({}, styles, _.defaultStyles);
  const pdfInfo = {
    title: fileTitle
  };
  const headerPromise = pdfHeader(header({
    logoUrl,
    timestamp,
    timezone
  }));
  const contentPromise = pdfContent(content);
  const footerPromise = pdfFooter(footer({
    logoUrl: _constants.LIGHTHOUSE_LOGO_URL,
    timestamp,
    timezone,
    type
  }));
  const promises = [headerPromise, contentPromise, footerPromise];
  return _bluebird.default.all(promises).then(([header, content, footer]) => ({
    header,
    content,
    footer,
    info: pdfInfo,
    pageMargins,
    pageOrientation,
    pageSize,
    styles: pdfStyles
  })).catch(err => {
    throw new Error(`GenerateDefinitionError: ${err.message}`);
  });
}

function pdfHeader(header) {
  if ((0, _lodash.isFunction)(header)) {
    return _bluebird.default.resolve(header());
  }

  return _bluebird.default.resolve(header);
}

function pdfContent(content) {
  if ((0, _lodash.isFunction)(content)) {
    return _bluebird.default.resolve(content());
  }

  return _bluebird.default.resolve(content);
}

function pdfFooter(footer) {
  if ((0, _lodash.isFunction)(footer)) {
    return _bluebird.default.resolve(footer());
  }

  return _bluebird.default.resolve(footer);
}