"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOpen = isOpen;

var _momentTimezone = _interopRequireDefault(require("moment-timezone"));

var _fp = require("lodash/fp");

var _generators = require("../../scheduling/generators");

var _scheduling = require("../../scheduling/scheduling.types");

/**
 * Checks whether timestamp is within service hours for start and end
 */
function isOpen({
  serviceHours,
  timestamp
}) {
  if (!timestamp) return false;

  const start = _momentTimezone.default.utc(timestamp).subtract(1, _scheduling.Unit.Day).valueOf();

  const end = _momentTimezone.default.utc(timestamp).add(1, _scheduling.Unit.Day).valueOf();

  const serviceIntervalSequence = (0, _generators.serviceIntervalsGenerator)({
    end,
    serviceHours,
    start
  });
  const serviceIntervals = [...serviceIntervalSequence];
  const isOpen = (0, _fp.some)(([start, end]) => timestamp >= start && timestamp <= end)(serviceIntervals);
  return isOpen;
}