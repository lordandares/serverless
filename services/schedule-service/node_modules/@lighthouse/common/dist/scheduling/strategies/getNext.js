"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getNext = getNext;

var _momentTimezone = _interopRequireDefault(require("moment-timezone"));

var _scheduling = require("../scheduling.types");

/**
 * Generates next occurrence interval for stopwatch and window strategy
 */
function getNext({
  end,
  isInitial,
  options,
  start,
  timezone
}) {
  const {
    duration,
    frequency
  } = options;
  const {
    unit: durationUnit,
    value: durationValue
  } = duration;
  const {
    unit: frequencyUnit,
    value: frequencyValue
  } = frequency;
  const nextOccurrenceEnd = isInitial ? _momentTimezone.default.tz(start, timezone).add(frequencyValue, frequencyUnit).valueOf() : _momentTimezone.default.tz(start, timezone).add(1, _scheduling.Unit.Millisecond).add(frequencyValue, frequencyUnit).valueOf();

  const nextOccurrenceStart = _momentTimezone.default.tz(nextOccurrenceEnd, timezone).subtract(durationValue, durationUnit).valueOf();

  if (nextOccurrenceEnd <= nextOccurrenceStart || nextOccurrenceEnd > end) return;
  return [nextOccurrenceStart, nextOccurrenceEnd - 1];
}