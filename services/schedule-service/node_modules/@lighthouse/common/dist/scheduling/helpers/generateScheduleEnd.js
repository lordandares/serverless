"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateScheduleEnd = generateScheduleEnd;

var _fp = require("lodash/fp");

var _momentTimezone = _interopRequireDefault(require("moment-timezone"));

var _scheduling = require("../scheduling.types");

/**
 * Generates a schedule end datetime based on the start and frequency
 */
function generateScheduleEnd({
  frequency,
  start,
  timezone
}) {
  const {
    unit: frequencyUnit,
    value: frequencyValue
  } = frequency;
  const isFrequencyLessThanWeek = (0, _fp.includes)(frequencyUnit, [_scheduling.Unit.Millisecond, _scheduling.Unit.Second, _scheduling.Unit.Minute, _scheduling.Unit.Hour, _scheduling.Unit.Day]);

  const mStart = _momentTimezone.default.tz(start, timezone); // NOTE: if frequency unit less than a week we must set end to jump a week
  // so that we can ensure that we are within a service interval


  const end = isFrequencyLessThanWeek ? mStart.add(1, _scheduling.Unit.Week).valueOf() : mStart.add(frequencyValue * 2, frequencyUnit).valueOf();
  return end;
}