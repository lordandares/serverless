{"version":3,"sources":["../../src/scheduling/scheduling.types.ts"],"names":["IntervalTypes","Unit","StrategyTypes"],"mappings":"AAEA,WAAYA,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a;;AAKZ,WAAYC,IAAZ;;WAAYA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;GAAAA,I,KAAAA,I;;AAWZ,WAAYC,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a","sourcesContent":["import { Schema as ServiceHoursSchema } from '../service-hours'\n\nexport enum IntervalTypes {\n  Occurrence = 'occurrence',\n  Service = 'service',\n}\n\nexport enum Unit {\n  Millisecond = 'millisecond',\n  Second = 'second',\n  Minute = 'minute',\n  Hour = 'hour',\n  Day = 'day',\n  Week = 'isoWeek',\n  Month = 'month',\n  Year = 'year',\n}\n\nexport enum StrategyTypes {\n  ExactDateOfMonth = 'exactDateOfMonth',\n  LastDayOfMonth = 'lastDayOfMonth',\n  LastWeekdayOfMonth = 'lastWeekdayOfMonth',\n  NoRepeat = 'noRepeat',\n  Stopwatch = 'stopwatch',\n  Weekdays = 'weekdays',\n  Window = 'window',\n  XDayOfXWeekOfMonth = 'xDayOfxWeekOfMonth',\n}\n\nexport interface GetNext {\n  readonly end: number\n  readonly isInitial?: boolean\n  readonly options?: {\n    date?: number\n    dayOfWeek?: number\n    duration: Period\n    frequency: Period\n    weekday?: number\n    weekOfMonth?: number\n  }\n  readonly start: number\n  readonly timezone: string\n}\n\nexport interface Interval {\n  readonly [index: number]: number\n}\n\nexport interface Period {\n  readonly unit: Unit\n  readonly value: number\n}\n\nexport interface ScheduleIntervalsGenerator {\n  readonly end: number\n  readonly isInitial: boolean\n  readonly strategy: Strategy\n  readonly serviceHours: ServiceHoursSchema\n  readonly start: number\n}\n\nexport interface Strategy {\n  readonly options: any\n  readonly type: StrategyTypes\n}\n"],"file":"scheduling.types.js"}