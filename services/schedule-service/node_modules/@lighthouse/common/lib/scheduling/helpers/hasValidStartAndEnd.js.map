{"version":3,"sources":["../../../src/scheduling/helpers/hasValidStartAndEnd.ts"],"names":["moment","hasValidStartAndEnd","start","end","hasValidEnd","utc","isValid","hasValidStart"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,iBAAnB;;AAOA;;;;;;AAMA,OAAO,SAASC,mBAAT,OAG0B;AAAA,MAF/BC,KAE+B,QAF/BA,KAE+B;AAAA,MAD/BC,GAC+B,QAD/BA,GAC+B;AAC/B,MAAI,CAACD,KAAD,IAAU,CAACC,GAAf,EAAoB,OAAO,KAAP;AACpB,MAAIA,GAAG,IAAID,KAAX,EAAkB,OAAO,KAAP;AAElB,MAAME,WAAoB,GAAGJ,MAAM,CAACK,GAAP,CAAWF,GAAX,EAAgBG,OAAhB,EAA7B;AACA,MAAMC,aAAsB,GAAGP,MAAM,CAACK,GAAP,CAAWH,KAAX,EAAkBI,OAAlB,EAA/B;AAEA,MAAI,CAACF,WAAD,IAAgB,CAACG,aAArB,EAAoC,OAAO,KAAP;AAEpC,SAAO,IAAP;AACD","sourcesContent":["import moment from 'moment-timezone'\n\ninterface HasValidStartAndEnd {\n  readonly end: number\n  readonly start: number\n}\n\n/**\n * Checks if start and end are valid datetimes\n *\n * hasValidStartAndEnd({ end: 1566970473988, start: 1566970464839 })\n * returns true\n */\nexport function hasValidStartAndEnd({\n  start,\n  end,\n}: HasValidStartAndEnd): Boolean {\n  if (!start || !end) return false\n  if (end <= start) return false\n\n  const hasValidEnd: boolean = moment.utc(end).isValid()\n  const hasValidStart: boolean = moment.utc(start).isValid()\n\n  if (!hasValidEnd || !hasValidStart) return false\n\n  return true\n}\n"],"file":"hasValidStartAndEnd.js"}