{"version":3,"sources":["../../../src/scheduling/generators/occurrenceIntervalsGenerator.ts"],"names":["occurrenceIntervalsGenerator","StrategyTypes","getNext","getNextExactDateOfMonth","getNextLastDayOfMonth","getNextLastWeekdayOfMonth","getNextNoRepeat","getNextWeekday","getNextXDayOfXWeekOfMonth","strategyTypeMap","ExactDateOfMonth","LastDayOfMonth","LastWeekdayOfMonth","NoRepeat","Stopwatch","Weekdays","Window","XDayOfXWeekOfMonth","props","isInitial","serviceInterval","strategy","timezone","options","type","start","end","dateCursor","initial","duration","frequency","weekdays","weekday","weekdayDateCursor","weekdayIsInitial","nextOccurrence","getNextFn"],"mappings":"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","sourcesContent":["import { Interval, Strategy, StrategyTypes } from '../scheduling.types'\nimport {\n  getNext,\n  getNextExactDateOfMonth,\n  getNextLastDayOfMonth,\n  getNextLastWeekdayOfMonth,\n  getNextNoRepeat,\n  getNextWeekday,\n  getNextXDayOfXWeekOfMonth,\n} from '../strategies'\n\nexport const strategyTypeMap = {\n  [StrategyTypes.ExactDateOfMonth]: getNextExactDateOfMonth,\n  [StrategyTypes.LastDayOfMonth]: getNextLastDayOfMonth,\n  [StrategyTypes.LastWeekdayOfMonth]: getNextLastWeekdayOfMonth,\n  [StrategyTypes.NoRepeat]: getNextNoRepeat,\n  [StrategyTypes.Stopwatch]: getNext,\n  [StrategyTypes.Weekdays]: getNextWeekday,\n  [StrategyTypes.Window]: getNext,\n  [StrategyTypes.XDayOfXWeekOfMonth]: getNextXDayOfXWeekOfMonth,\n}\n\ninterface OccurrenceIntervalsGenerator {\n  readonly isInitial: boolean\n  readonly serviceInterval: Interval\n  readonly strategy: Strategy\n  readonly timezone: string\n}\n\n/**\n * Generates occurrence intervals for service intervals using strategy\n */\nexport function* occurrenceIntervalsGenerator(\n  props: OccurrenceIntervalsGenerator\n) {\n  const { isInitial, serviceInterval, strategy, timezone } = props\n  const { options, type } = strategy\n\n  const start = serviceInterval[0]\n  const end = serviceInterval[1]\n\n  let dateCursor = start\n  let initial = isInitial\n\n  // NOTE: weekdays strategy type must iterate through options independently\n  if (type === StrategyTypes.Weekdays) {\n    const { duration, frequency, weekdays } = options\n\n    for (const weekday of weekdays) {\n      let weekdayDateCursor = dateCursor\n      let weekdayIsInitial = isInitial\n\n      while (weekdayDateCursor < end) {\n        const nextOccurrence = getNextWeekday({\n          end,\n          isInitial: weekdayIsInitial,\n          start: weekdayDateCursor,\n          options: { ...options, weekday },\n          timezone,\n        })\n\n        if (!nextOccurrence) break\n\n        yield nextOccurrence\n\n        weekdayDateCursor = nextOccurrence[1]\n        weekdayIsInitial = false\n      }\n    }\n\n    return\n  }\n\n  const getNextFn = strategyTypeMap[type]\n\n  if (!getNextFn) return\n\n  while (dateCursor < end) {\n    const nextOccurrence = getNextFn({\n      end,\n      isInitial: initial,\n      start: dateCursor,\n      options,\n      timezone,\n    })\n\n    if (!nextOccurrence) return\n\n    yield nextOccurrence\n\n    initial = false\n    dateCursor = nextOccurrence[1]\n  }\n}\n"],"file":"occurrenceIntervalsGenerator.js"}