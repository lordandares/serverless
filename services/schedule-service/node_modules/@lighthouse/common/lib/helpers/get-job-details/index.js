import { upperCase } from 'lodash';
import moment from 'moment-timezone';
import { getAssigneesFullNames, getGeometryGeocodedString, getStatusDetails, getUserFullName, getTimezoneDatetime } from '../';
export function getJobDetails(data) {
  var _data$entity = data.entity,
      entity = _data$entity === void 0 ? {} : _data$entity,
      timezone = data.timezone,
      users = data.users;
  var assignees = entity.assignees,
      author = entity.author,
      createdAt = entity.createdAt,
      _entity$description = entity.description,
      description = _entity$description === void 0 ? '-' : _entity$description,
      due = entity.due,
      geometryReverseGeocoded = entity.geometryReverseGeocoded,
      _entity$reference = entity.reference,
      reference = _entity$reference === void 0 ? '-' : _entity$reference,
      status = entity.status;
  var assigneeNames = getAssigneesFullNames(users, assignees);
  var authorFullName = getUserFullName(users, author);
  var locationText = getGeometryGeocodedString(geometryReverseGeocoded);
  var statusProps = getStatusDetails(status);
  var statusStyle = statusProps.style;
  var statusColor = statusStyle.color;
  var statusText = upperCase(statusProps.text);
  var createdTimezoneDateTime = getTimezoneDatetime({
    timestamp: createdAt,
    timezone: timezone
  });
  var dueDateTimezoneDateTime = getTimezoneDatetime({
    timestamp: due,
    timezone: timezone
  });
  var timezoneAbbrText = moment.tz(timezone).format('z');
  return {
    assigneeNames: assigneeNames,
    authorFullName: authorFullName,
    createdTimezoneDateTime: createdTimezoneDateTime,
    description: description,
    dueDateTimezoneDateTime: dueDateTimezoneDateTime,
    locationText: locationText,
    statusStyle: statusStyle,
    statusColor: statusColor,
    statusText: statusText,
    reference: reference,
    timezoneAbbrText: timezoneAbbrText
  };
}
//# sourceMappingURL=index.js.map