{"version":3,"sources":["../../../src/service-hours/__helpers__/isOpen.ts"],"names":["moment","some","serviceIntervalsGenerator","Unit","isOpen","serviceHours","timestamp","start","utc","subtract","Day","valueOf","end","add","serviceIntervalSequence","serviceIntervals"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,IAAT,QAAqB,WAArB;AAGA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,IAAT,QAAqB,mCAArB;;AAOA;;;AAGA,OAAO,SAASC,MAAT,OAA8D;AAAA,MAA5CC,YAA4C,QAA5CA,YAA4C;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AACnE,MAAI,CAACA,SAAL,EAAgB,OAAO,KAAP;AAEhB,MAAMC,KAAK,GAAGP,MAAM,CACjBQ,GADW,CACPF,SADO,EAEXG,QAFW,CAEF,CAFE,EAECN,IAAI,CAACO,GAFN,EAGXC,OAHW,EAAd;AAIA,MAAMC,GAAG,GAAGZ,MAAM,CACfQ,GADS,CACLF,SADK,EAETO,GAFS,CAEL,CAFK,EAEFV,IAAI,CAACO,GAFH,EAGTC,OAHS,EAAZ;AAKA,MAAMG,uBAAuB,GAAGZ,yBAAyB,CAAC;AACxDU,IAAAA,GAAG,EAAHA,GADwD;AAExDP,IAAAA,YAAY,EAAZA,YAFwD;AAGxDE,IAAAA,KAAK,EAALA;AAHwD,GAAD,CAAzD;;AAMA,MAAMQ,gBAAgB,sBAAOD,uBAAP,CAAtB;;AACA,MAAMV,MAAM,GAAGH,IAAI,CAAC;AAAA;AAAA,QAAEM,KAAF;AAAA,QAASK,GAAT;;AAAA,WAAkBN,SAAS,IAAIC,KAAb,IAAsBD,SAAS,IAAIM,GAArD;AAAA,GAAD,CAAJ,CACbG,gBADa,CAAf;AAIA,SAAOX,MAAP;AACD","sourcesContent":["import moment from 'moment-timezone'\nimport { some } from 'lodash/fp'\n\nimport { Schema as ServiceHoursSchema } from '..'\nimport { serviceIntervalsGenerator } from '../../scheduling/generators'\nimport { Unit } from '../../scheduling/scheduling.types'\n\ninterface IsOpen {\n  serviceHours: ServiceHoursSchema\n  timestamp: number\n}\n\n/**\n * Checks whether timestamp is within service hours for start and end\n */\nexport function isOpen({ serviceHours, timestamp }: IsOpen): boolean {\n  if (!timestamp) return false\n\n  const start = moment\n    .utc(timestamp)\n    .subtract(1, Unit.Day)\n    .valueOf()\n  const end = moment\n    .utc(timestamp)\n    .add(1, Unit.Day)\n    .valueOf()\n\n  const serviceIntervalSequence = serviceIntervalsGenerator({\n    end,\n    serviceHours,\n    start,\n  })\n\n  const serviceIntervals = [...serviceIntervalSequence]\n  const isOpen = some(([start, end]) => timestamp >= start && timestamp <= end)(\n    serviceIntervals\n  )\n\n  return isOpen\n}\n"],"file":"isOpen.js"}