/**
 * Script to generate service hour definitions which is otherwise tedious to
 * calculate as we store them in millisecond offsets
 * Example Input: TUE 08:00 - TUE 17:00
 */
var days = {
  MON: 0,
  TUE: 1,
  WED: 2,
  THU: 3,
  FRI: 4,
  SAT: 5,
  SUN: 6,
  MON2: 7,
  TUE2: 8
};
var MINUTES = 60000;
var HOURS = 60 * MINUTES;
var DAYS = 24 * HOURS;
var input = process.argv[2];

if (!input) {
  throw new Error('invalid input');
}

var parts = input.split(' - ');

if (parts.length < 2) {
  throw new Error('invalid input');
}

var startOffset = parse(parts[0]);
var endOffset = parse(parts[1]);
var duration = endOffset - startOffset;
var output = {
  type: 'DEFAULT',
  start: startOffset,
  end: endOffset,
  duration: duration,
  description: input
};
console.dir(output, {
  depth: null
});

function parse(def) {
  var parts = def.split(' ');

  if (parts.length < 2) {
    throw new Error('invalid parts');
  }

  var day = days[parts[0]];
  var time = parts[1];

  if (day === undefined || day === null || !time) {
    throw new Error('invalid date/time');
  }

  var timeParts = time.split(':');
  var hour = timeParts[0];
  var minute = timeParts[1];

  if (!hour || !minute) {
    throw new Error('invalid end time');
  } // NOTE this isn't taking into account actual end of time if you target the
  // end of a minute, e.g. 23:59


  var offset = day * DAYS + hour * HOURS + minute * MINUTES;
  return offset;
}
//# sourceMappingURL=calculate-hours.js.map