{"version":3,"sources":["../../../src/pdf/shift-report/index.js"],"names":["Promise","each","filter","find","groupBy","isEmpty","map","size","sortBy","sum","toString","moment","duration","getLocationReference","getTimezoneAbbr","getTimezoneDatetime","launchIcon","generateDefinition","horizontalLine","summaryFieldsTable","summaryStatTable","summaryWrapperTable","table","text","threeColumnTable","zebraFillColor","LIGHTHOUSE_BASE_URL","buildShiftPdf","pdfOptions","data","timestamp","timezone","title","generateContent","content","fileTitle","type","buildActivitySection","activitySection","summarySection","buildSummarySection","titleTable","buildTitleTable","buildTimelineTable","timeline","buildActivitySummarySection","activitySummary","shift","user","breaks","end","start","headerTitle","style","username","firstName","lastName","headerSubTitle","mTimezoneStart","time","tz","mTimezoneEnd","rangeStart","format","rangeEnd","shiftDuration","getFineDuration","breakDuration","getBreakDuration","header","headerRange","body","layout","audits","events","issues","tasks","eventsByType","enterEventsCount","enter","issuesCount","tasksCount","auditsCount","scansText","issuesText","tasksText","auditsText","scansCountText","issuesCountText","tasksCountText","auditsCountText","scanTable","issueTable","taskTables","auditTable","wrapperTable","settings","enterEvents","event","auditRows","getFormRowData","issueRows","scanRows","getScanRowData","taskRows","rows","sortedRows","hLine","buildActivityTable","activityTable","activitySummarySection","timezoneAbbr","activityTableHeader","bold","alignment","link","location","icon","summaryFields","timezoneHour","showTzAbbr","iconCell","fit","image","hasSummaryFields","fields","fieldsTable","push","activityTableRow","colSpan","dontBreakRows","headerRow","hLineWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","vLineWidth","widths","activityTableRows","activityTableBody","fillColor","collection","locations","zones","document","_id","createdAt","entry","entity","zone","zoneDoc","doc","zoneName","name","shiftRows","getShiftRowData","timelineHeaderRow","timelineTable","timelineSection","startValues","getShiftValues","startShift","endValues","endShift","shiftData","startBreak","endBreak","value","locationName","durationValue","measurement","durationByMeasurement","hours","get","minutes","fineDuration","diff"],"mappings":";;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,GANF,EAOEC,IAPF,EAQEC,MARF,EASEC,GATF,EAUEC,QAVF,QAWO,QAXP;AAYA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,iBAAjC;AAEA,SACEC,oBADF,EAEEC,eAFF,EAGEC,mBAHF,QAIO,eAJP;AAKA,SAASC,UAAT,QAA2B,cAA3B;AACA,SACEC,kBADF,EAEEC,cAFF,EAGEC,kBAHF,EAIEC,gBAJF,EAKEC,mBALF,EAMEC,KANF,EAOEC,IAPF,EAQEC,gBARF,EASEC,cATF,QAUO,YAVP;AAYA,IAAMC,mBAAmB,GAAG,2BAA5B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO,iBAA6BC,UAA7B,EAAyCC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,YAAAA,SADH,GAC2BD,IAD3B,CACGC,SADH,EACcC,QADd,GAC2BF,IAD3B,CACcE,QADd;AAGCC,YAAAA,KAHD,GAGS,oBAHT;AAAA;AAAA,mBAIiBC,eAAe,CAACJ,IAAD,CAJhC;;AAAA;AAICK,YAAAA,OAJD;AAAA,6CAMEjB,kBAAkB;AACvBiB,cAAAA,OAAO,EAAPA,OADuB;AAEvBC,cAAAA,SAAS,EAAEH,KAFY;AAGvBF,cAAAA,SAAS,EAATA,SAHuB;AAIvBC,cAAAA,QAAQ,EAARA,QAJuB;AAKvBK,cAAAA,IAAI,EAAE;AALiB,eAMpBR,UANoB,EANpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgBQK,e;;;;;8EAAf,kBAA+BJ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgCQ,oBAAoB,CAACR,IAAD,CADpD;;AAAA;AACQS,YAAAA,eADR;AAEQC,YAAAA,cAFR,GAEyBC,mBAAmB,CAACX,IAAD,CAF5C;AAGQY,YAAAA,UAHR,GAGqBC,eAAe,CAACb,IAAD,CAHpC;AAAA,8CAKS,CAACY,UAAD,EAAaF,cAAb,EAA6BD,eAA7B,CALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAQeD,oB;;;;;mFAAf,kBAAoCR,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBc,kBAAkB,CAACd,IAAD,CAD3C;;AAAA;AACQe,YAAAA,QADR;AAAA;AAAA,mBAEgCC,2BAA2B,CAAChB,IAAD,CAF3D;;AAAA;AAEQiB,YAAAA,eAFR;AAAA,8CAIS,CAACF,QAAD,EAAWE,eAAX,CAJT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOA,SAASJ,eAAT,CAAyBb,IAAzB,EAA+B;AAAA,MACrBkB,KADqB,GACKlB,IADL,CACrBkB,KADqB;AAAA,MACdhB,QADc,GACKF,IADL,CACdE,QADc;AAAA,MACJiB,IADI,GACKnB,IADL,CACJmB,IADI;AAAA,MAErBC,MAFqB,GAEYF,KAFZ,CAErBE,MAFqB;AAAA,MAEbrC,QAFa,GAEYmC,KAFZ,CAEbnC,QAFa;AAAA,MAEHsC,GAFG,GAEYH,KAFZ,CAEHG,GAFG;AAAA,MAEEC,KAFF,GAEYJ,KAFZ,CAEEI,KAFF;AAI7B,MAAMC,WAAW,GAAG7B,IAAI,CAAC,oBAAD,EAAuB;AAAE8B,IAAAA,KAAK,EAAE;AAAT,GAAvB,CAAxB;AACA,MAAMC,QAAQ,GAAG,UAAGN,IAAI,CAACO,SAAR,cAAqBP,IAAI,CAACQ,QAA1B,KAAwC,cAAzD;AAEA,MAAMC,cAAc,GAAGlC,IAAI,WAAI+B,QAAJ,GAAgB;AACzCD,IAAAA,KAAK,EAAE;AADkC,GAAhB,CAA3B;AAIA,MAAMK,cAAc,GAAG/C,MAAM,CAACwC,KAAK,CAACQ,IAAP,CAAN,CAAmBC,EAAnB,CAAsB7B,QAAtB,CAAvB;AACA,MAAM8B,YAAY,GAAGlD,MAAM,CAACuC,GAAG,CAACS,IAAL,CAAN,CAAiBC,EAAjB,CAAoB7B,QAApB,CAArB;AAEA,MAAM+B,UAAU,GAAGnD,MAAM,CAAC+C,cAAD,CAAN,CAAuBK,MAAvB,CAA8B,cAA9B,CAAnB;AACA,MAAMC,QAAQ,GAAGrD,MAAM,CAACkD,YAAD,CAAN,CAAqBE,MAArB,CAA4B,cAA5B,CAAjB;AAEA,MAAME,aAAa,GAAGC,eAAe,CAACtD,QAAD,CAArC;AACA,MAAMuD,aAAa,GAAGC,gBAAgB,CAACnB,MAAD,CAAtC;AAEA,MAAMoB,MAAM,GAAG,CAACF,aAAD,aACRL,UADQ,gBACQE,QADR,0BACgCC,aADhC,cAERH,UAFQ,gBAEQE,QAFR,0BAEgCC,aAFhC,sBAEyDE,aAFzD,CAAf;AAGA,MAAMG,WAAW,GAAG/C,IAAI,CAAC8C,MAAD,EAAS;AAC/BhB,IAAAA,KAAK,EAAE;AADwB,GAAT,CAAxB;AAIA,SAAO/B,KAAK,CAAC;AACXiD,IAAAA,IAAI,EAAE,CAAC,CAACnB,WAAD,CAAD,EAAgB,CAACK,cAAD,CAAhB,EAAkC,CAACa,WAAD,CAAlC,CADK;AAEXE,IAAAA,MAAM,EAAE,WAFG;AAGXnB,IAAAA,KAAK,EAAE;AAHI,GAAD,CAAZ;AAKD;;AAED,SAASb,mBAAT,CAA6BX,IAA7B,EAAmC;AAAA,MACzB4C,MADyB,GACS5C,IADT,CACzB4C,MADyB;AAAA,MACjBC,MADiB,GACS7C,IADT,CACjB6C,MADiB;AAAA,MACTC,MADS,GACS9C,IADT,CACT8C,MADS;AAAA,MACDC,KADC,GACS/C,IADT,CACD+C,KADC;AAGjC,MAAMC,YAAY,GAAGzE,OAAO,CAACsE,MAAD,EAAS,MAAT,CAA5B;AAEA,MAAMI,gBAAgB,GAAGvE,IAAI,CAACsE,YAAY,CAACE,KAAd,CAA7B;AACA,MAAMC,WAAW,GAAGzE,IAAI,CAACoE,MAAD,CAAxB;AACA,MAAMM,UAAU,GAAG1E,IAAI,CAACqE,KAAD,CAAvB;AACA,MAAMM,WAAW,GAAG3E,IAAI,CAACkE,MAAD,CAAxB;AAEA,MAAMU,SAAS,GAAG5D,IAAI,CAAC,OAAD,EAAU;AAAE8B,IAAAA,KAAK,EAAE;AAAT,GAAV,CAAtB;AACA,MAAM+B,UAAU,GAAG7D,IAAI,CAAC,QAAD,EAAW;AAAE8B,IAAAA,KAAK,EAAE;AAAT,GAAX,CAAvB;AACA,MAAMgC,SAAS,GAAG9D,IAAI,CAAC,OAAD,EAAU;AAAE8B,IAAAA,KAAK,EAAE;AAAT,GAAV,CAAtB;AACA,MAAMiC,UAAU,GAAG/D,IAAI,CAAC,QAAD,EAAW;AAAE8B,IAAAA,KAAK,EAAE;AAAT,GAAX,CAAvB;AAEA,MAAMkC,cAAc,GAAGhE,IAAI,CAACb,QAAQ,CAACoE,gBAAD,CAAT,EAA6B;AACtDzB,IAAAA,KAAK,EAAE;AAD+C,GAA7B,CAA3B;AAGA,MAAMmC,eAAe,GAAGjE,IAAI,CAACb,QAAQ,CAACsE,WAAD,CAAT,EAAwB;AAAE3B,IAAAA,KAAK,EAAE;AAAT,GAAxB,CAA5B;AACA,MAAMoC,cAAc,GAAGlE,IAAI,CAACb,QAAQ,CAACuE,UAAD,CAAT,EAAuB;AAAE5B,IAAAA,KAAK,EAAE;AAAT,GAAvB,CAA3B;AACA,MAAMqC,eAAe,GAAGnE,IAAI,CAACb,QAAQ,CAACwE,WAAD,CAAT,EAAwB;AAAE7B,IAAAA,KAAK,EAAE;AAAT,GAAxB,CAA5B;AAEA,MAAMsC,SAAS,GAAGvE,gBAAgB,CAAC;AAAEmD,IAAAA,IAAI,EAAE,CAAC,CAACY,SAAD,CAAD,EAAc,CAACI,cAAD,CAAd;AAAR,GAAD,CAAlC;AACA,MAAMK,UAAU,GAAGxE,gBAAgB,CAAC;AAClCmD,IAAAA,IAAI,EAAE,CAAC,CAACa,UAAD,CAAD,EAAe,CAACI,eAAD,CAAf;AAD4B,GAAD,CAAnC;AAGA,MAAMK,UAAU,GAAGzE,gBAAgB,CAAC;AAAEmD,IAAAA,IAAI,EAAE,CAAC,CAACc,SAAD,CAAD,EAAc,CAACI,cAAD,CAAd;AAAR,GAAD,CAAnC;AACA,MAAMK,UAAU,GAAG1E,gBAAgB,CAAC;AAClCmD,IAAAA,IAAI,EAAE,CAAC,CAACe,UAAD,CAAD,EAAe,CAACI,eAAD,CAAf;AAD4B,GAAD,CAAnC;AAIA,MAAMK,YAAY,GAAG1E,mBAAmB,CAAC;AACvCkD,IAAAA,IAAI,EAAE,CAAC,CAACoB,SAAD,EAAYC,UAAZ,EAAwBC,UAAxB,EAAoCC,UAApC,CAAD;AADiC,GAAD,CAAxC;AAIA,SAAOC,YAAP;AACD;;SAEclD,2B;;;;;0FAAf,kBAA2ChB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AACU4C,YAAAA,MADV,GACgE5C,IADhE,CACU4C,MADV,EACkBC,MADlB,GACgE7C,IADhE,CACkB6C,MADlB,EAC0BC,MAD1B,GACgE9C,IADhE,CAC0B8C,MAD1B,EACkCqB,QADlC,GACgEnE,IADhE,CACkCmE,QADlC,EAC4CpB,KAD5C,GACgE/C,IADhE,CAC4C+C,KAD5C,EACmD7C,QADnD,GACgEF,IADhE,CACmDE,QADnD;AAGQkE,YAAAA,WAHR,GAGsB/F,MAAM,CAACwE,MAAD,EAAS,UAAAwB,KAAK;AAAA,qBAAIA,KAAK,CAAC9D,IAAN,KAAe,OAAnB;AAAA,aAAd,CAH5B;AAKQ+D,YAAAA,SALR,GAKoB7F,GAAG,CAACmE,MAAD,EAAS2B,cAAc,CAAC,QAAD,EAAWvE,IAAX,CAAvB,CALvB;AAMQwE,YAAAA,SANR,GAMoB/F,GAAG,CAACqE,MAAD,EAASyB,cAAc,CAAC,QAAD,EAAWvE,IAAX,CAAvB,CANvB;AAOQyE,YAAAA,QAPR,GAOmBhG,GAAG,CAAC2F,WAAD,EAAcM,cAAc,CAAC1E,IAAD,CAA5B,CAPtB;AAQQ2E,YAAAA,QARR,GAQmBlG,GAAG,CAACsE,KAAD,EAAQwB,cAAc,CAAC,OAAD,EAAUvE,IAAV,CAAtB,CARtB;AAUQ4E,YAAAA,IAVR,gCAUmBN,SAVnB,sBAUiCE,SAVjC,sBAU+CC,QAV/C,sBAU4DE,QAV5D;AAWQE,YAAAA,UAXR,GAWqBlG,MAAM,CAACiG,IAAD,EAAO,CAAC,WAAD,CAAP,EAAsB,CAAC,KAAD,CAAtB,CAX3B;AAYQzE,YAAAA,KAZR,GAYgBT,IAAI,CAAC,kBAAD,EAAqB;AAAE8B,cAAAA,KAAK,EAAE;AAAT,aAArB,CAZpB;AAcQgB,YAAAA,MAdR,GAciB/C,KAAK,CAAC;AACnBiD,cAAAA,IAAI,EAAE,CAAC,CAACvC,KAAD,CAAD,CADa;AAEnBwC,cAAAA,MAAM,EAAE,WAFW;AAGnBnB,cAAAA,KAAK,EAAE;AAHY,aAAD,CAdtB;AAoBQsD,YAAAA,KApBR,GAoBgBzF,cAAc,EApB9B;AAAA;AAAA,mBAqB8B0F,kBAAkB,CAAC;AAC7CH,cAAAA,IAAI,EAAEC,UADuC;AAE7CV,cAAAA,QAAQ,EAARA,QAF6C;AAG7CjE,cAAAA,QAAQ,EAARA;AAH6C,aAAD,CArBhD;;AAAA;AAqBQ8E,YAAAA,aArBR;AA0BQC,YAAAA,sBA1BR,GA0BiC,CAACzC,MAAD,EAASsC,KAAT,EAAgBE,aAAhB,CA1BjC;AAAA,8CA4BSC,sBA5BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA+BeF,kB;;;;;iFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoCH,YAAAA,IAApC,SAAoCA,IAApC,EAA0CT,QAA1C,SAA0CA,QAA1C,EAAoDjE,QAApD,SAAoDA,QAApD;AACQgF,YAAAA,YADR,GACuBjG,eAAe,CAACiB,QAAD,CADtC;AAGQiF,YAAAA,mBAHR,GAG8B,CAC1BzF,IAAI,CAAC,UAAD,EAAa;AAAE0F,cAAAA,IAAI,EAAE;AAAR,aAAb,CADsB,EAE1B;AAAE1F,cAAAA,IAAI,EAAE;AAAR,aAF0B,EAG1BA,IAAI,CAAC,UAAD,EAAa;AAAE0F,cAAAA,IAAI,EAAE;AAAR,aAAb,CAHsB,EAI1B1F,IAAI,sBAAewF,YAAf,QAAgC;AAAEG,cAAAA,SAAS,EAAE,OAAb;AAAsBD,cAAAA,IAAI,EAAE;AAA5B,aAAhC,CAJsB,CAH9B;AAAA;AAAA,mBAUkCjH,OAAO,CAACM,GAAR,CAAYmG,IAAZ;AAAA,mFAAkB,kBAAe5E,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACxCsF,wBAAAA,IADwC,GACkBtF,IADlB,CACxCsF,IADwC,EAClCC,QADkC,GACkBvF,IADlB,CAClCuF,QADkC,EACxBC,IADwB,GACkBxF,IADlB,CACxBwF,IADwB,EAClBC,aADkB,GACkBzF,IADlB,CAClByF,aADkB,EACHxF,SADG,GACkBD,IADlB,CACHC,SADG,EACQE,KADR,GACkBH,IADlB,CACQG,KADR;AAG1CuF,wBAAAA,YAH0C,GAG3BxG,mBAAmB,CAAC;AACvCgD,0BAAAA,MAAM,EAAE,eAD+B;AAEvCyD,0BAAAA,UAAU,EAAE,KAF2B;AAGvC1F,0BAAAA,SAAS,EAATA,SAHuC;AAIvCC,0BAAAA,QAAQ,EAARA;AAJuC,yBAAD,CAHQ;AAU1C0F,wBAAAA,QAV0C,GAU/BJ,IAAI,GACjB;AAAEH,0BAAAA,SAAS,EAAE,QAAb;AAAuBQ,0BAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,CAA5B;AAAoCC,0BAAAA,KAAK,EAAEN,IAA3C;AAAiDF,0BAAAA,IAAI,EAAJA;AAAjD,yBADiB,GAEjB;AAAE5F,0BAAAA,IAAI,EAAE;AAAR,yBAZ4C;AAc1CkF,wBAAAA,IAd0C,GAcnC,CACX,CACElF,IAAI,CAACS,KAAD,EAAQ;AAAEmF,0BAAAA,IAAI,EAAJA;AAAF,yBAAR,CADN,EAEEM,QAFF,EAGElG,IAAI,CAAC6F,QAAD,EAAW;AAAED,0BAAAA,IAAI,EAAJA;AAAF,yBAAX,CAHN,EAIE5F,IAAI,CAACgG,YAAD,EAAe;AAAEL,0BAAAA,SAAS,EAAE,OAAb;AAAsBC,0BAAAA,IAAI,EAAJA;AAAtB,yBAAf,CAJN,CADW,CAdmC;AAuB1CS,wBAAAA,gBAvB0C,GAuBvB,CAACvH,OAAO,CAACiH,aAAD,CAvBe;;AAAA,6BAyB5CM,gBAzB4C;AAAA;AAAA;AAAA;;AAAA;AAAA,+BA0BpBzG,kBAAkB,CAAC;AAC3C0G,0BAAAA,MAAM,EAAEP,aADmC;AAE3CtB,0BAAAA,QAAQ,EAARA,QAF2C;AAG3CjE,0BAAAA,QAAQ,EAARA;AAH2C,yBAAD,CA1BE;;AAAA;AA0BxC+F,wBAAAA,WA1BwC;AA+B9CrB,wBAAAA,IAAI,CAACsB,IAAL,CAAU,CAACD,WAAD,CAAV;;AA/B8C;AAkC1CE,wBAAAA,gBAlC0C,GAkCvB,CACvB1G,KAAK,CAAC;AACJiD,0BAAAA,IAAI,YAAMkC,IAAN,CADA;AAEJwB,0BAAAA,OAAO,EAAE,CAFL;AAGJC,0BAAAA,aAAa,EAAE,IAHX;AAIJC,0BAAAA,SAAS,EAAE,CAJP;AAKJ3D,0BAAAA,MAAM,EAAE;AACN4D,4BAAAA,UAAU,EAAE;AAAA,qCAAM,CAAN;AAAA,6BADN;AAENC,4BAAAA,WAAW,EAAE;AAAA,qCAAM,CAAN;AAAA,6BAFP;AAGNC,4BAAAA,YAAY,EAAE;AAAA,qCAAM,CAAN;AAAA,6BAHR;AAINC,4BAAAA,UAAU,EAAE;AAAA,qCAAM,CAAN;AAAA,6BAJN;AAKNC,4BAAAA,aAAa,EAAE;AAAA,qCAAM,CAAN;AAAA,6BALT;AAMNC,4BAAAA,UAAU,EAAE;AAAA,qCAAM,CAAN;AAAA;AANN,2BALJ;AAaJC,0BAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB;AAbJ,yBAAD,CADkB,CAlCuB;AAAA,0DAoDzCV,gBApDyC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB;;AAAA;AAAA;AAAA;AAAA,gBAVlC;;AAAA;AAUQW,YAAAA,iBAVR;AAiEQC,YAAAA,iBAjER,GAiE4BvI,OAAO,CAACsI,iBAAD,CAAP,GACtB,CAAC,CAACpH,IAAI,CAAC,mBAAD,EAAsB;AAAE0G,cAAAA,OAAO,EAAE;AAAX,aAAtB,CAAL,CAAD,CADsB,GAEtBU,iBAnEN;AAqEQ9B,YAAAA,aArER,GAqEwBvF,KAAK,CAAC;AAC1BiD,cAAAA,IAAI,GAAGyC,mBAAH,4BAA2B4B,iBAA3B,EADsB;AAE1BV,cAAAA,aAAa,EAAE,IAFW;AAG1B1D,cAAAA,MAAM,EAAE;AACN4D,gBAAAA,UAAU,EAAE;AAAA,yBAAM,CAAN;AAAA,iBADN;AAENS,gBAAAA,SAAS,EAAEpH,cAFL;AAGN4G,gBAAAA,WAAW,EAAE;AAAA,yBAAM,CAAN;AAAA,iBAHP;AAINC,gBAAAA,YAAY,EAAE;AAAA,yBAAM,CAAN;AAAA,iBAJR;AAKNC,gBAAAA,UAAU,EAAE;AAAA,yBAAM,CAAN;AAAA,iBALN;AAMNC,gBAAAA,aAAa,EAAE;AAAA,yBAAM,CAAN;AAAA,iBANT;AAONC,gBAAAA,UAAU,EAAE;AAAA,yBAAM,CAAN;AAAA;AAPN,eAHkB;AAY1BC,cAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,EAAe,EAAf,EAAmB,GAAnB;AAZkB,aAAD,CArE7B;AAAA,8CAoFS7B,aApFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAuFA,SAAST,cAAT,CAAwB0C,UAAxB,QAA0D;AAAA,MAApBC,SAAoB,QAApBA,SAAoB;AAAA,MAATC,KAAS,QAATA,KAAS;AACxD,SAAO,UAAAC,QAAQ,EAAI;AAAA,QACTC,GADS,GACyCD,QADzC,CACTC,GADS;AAAA,QACJC,SADI,GACyCF,QADzC,CACJE,SADI;AAAA,0BACyCF,QADzC,CACOG,KADP;AAAA,QACOA,KADP,gCACe,EADf;AAAA,0BACyCH,QADzC,CACmBjH,KADnB;AAAA,QACmBA,KADnB,gCAC2B,SAD3B;AAGjB,QAAMoF,QAAQ,GAAGvG,oBAAoB,CAAC;AACpCwI,MAAAA,MAAM,EAAEJ,QAD4B;AAEpCF,MAAAA,SAAS,EAATA,SAFoC;AAGpCC,MAAAA,KAAK,EAALA;AAHoC,KAAD,CAArC;AAMA,QAAM7B,IAAI,aAAMzF,mBAAN,sBAAqCoH,UAArC,cAAmDI,GAAnD,CAAV;AACA,QAAMpH,SAAS,GAAGqH,SAAlB;AAEA,QAAM7B,aAAa,GAAG8B,KAAK,CAAC9B,aAAN,IAAuB,EAA7C;AAEA,WAAO;AACLD,MAAAA,IAAI,EAAErG,UADD;AAELoG,MAAAA,QAAQ,EAARA,QAFK;AAGLD,MAAAA,IAAI,EAAJA,IAHK;AAILG,MAAAA,aAAa,EAAbA,aAJK;AAKLxF,MAAAA,SAAS,EAATA,SALK;AAMLE,MAAAA,KAAK,EAALA;AANK,KAAP;AAQD,GAtBD;AAuBD;;AAED,SAASuE,cAAT,QAAmC;AAAA,MAATyC,KAAS,SAATA,KAAS;AACjC,SAAO,UAAAC,QAAQ,EAAI;AAAA,QACTnH,SADS,GACgBmH,QADhB,CACTnH,SADS;AAAA,yBACgBmH,QADhB,CACEK,IADF;AAAA,QACEA,IADF,+BACS,EADT;AAGjB,QAAMC,OAAO,GACXD,IAAI,IAAInJ,IAAI,CAAC6I,KAAD,EAAQ,UAAAQ,GAAG;AAAA,aAAIA,GAAG,CAACN,GAAJ,CAAQxI,QAAR,OAAuB4I,IAAI,CAAC5I,QAAL,EAA3B;AAAA,KAAX,CADd;AAGA,QAAM+I,QAAQ,GAAGF,OAAO,IAAIA,OAAO,CAACG,IAApC;AACA,QAAMtC,QAAQ,GAAGqC,QAAQ,IAAI,kBAA7B;AAEA,QAAMzH,KAAK,GAAG,eAAd;AAEA,WAAO;AACLoF,MAAAA,QAAQ,EAARA,QADK;AAELtF,MAAAA,SAAS,EAATA,SAFK;AAGLE,MAAAA,KAAK,EAALA;AAHK,KAAP;AAKD,GAhBD;AAiBD;;SAEcW,kB;;;;;iFAAf,kBAAkCd,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUE,YAAAA,QADV,GACuBF,IADvB,CACUE,QADV;AAEQgF,YAAAA,YAFR,GAEuBjG,eAAe,CAACiB,QAAD,CAFtC;AAIQ4H,YAAAA,SAJR,GAIoBC,eAAe,CAAC/H,IAAD,CAJnC;AAMQ6E,YAAAA,UANR,GAMqBlG,MAAM,CAACmJ,SAAD,EAAY,CAAC,WAAD,CAAZ,EAA2B,CAAC,KAAD,CAA3B,CAN3B;AAAA;AAAA,mBAOyB3J,OAAO,CAACM,GAAR,CAAYoG,UAAZ;AAAA,mFAAwB,kBAAe7E,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACrCuF,wBAAAA,QADqC,GACNvF,IADM,CACrCuF,QADqC,EAC3BtF,SAD2B,GACND,IADM,CAC3BC,SAD2B,EAChBE,KADgB,GACNH,IADM,CAChBG,KADgB;AAGvCuF,wBAAAA,YAHuC,GAGxBxG,mBAAmB,CAAC;AACvCgD,0BAAAA,MAAM,EAAE,eAD+B;AAEvCyD,0BAAAA,UAAU,EAAE,KAF2B;AAGvC1F,0BAAAA,SAAS,EAATA,SAHuC;AAIvCC,0BAAAA,QAAQ,EAARA;AAJuC,yBAAD,CAHK;AAUvC0E,wBAAAA,IAVuC,GAUhC,CACXlF,IAAI,CAACS,KAAD,CADO,EAEXT,IAAI,CAAC6F,QAAD,CAFO,EAGX7F,IAAI,CAACgG,YAAD,EAAe;AAAEL,0BAAAA,SAAS,EAAE;AAAb,yBAAf,CAHO,CAVgC;AAAA,0DAgBtCT,IAhBsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAxB;;AAAA;AAAA;AAAA;AAAA,gBAPzB;;AAAA;AAOQ7D,YAAAA,QAPR;AA0BQiH,YAAAA,iBA1BR,GA0B4B,CACxBtI,IAAI,CAAC,UAAD,EAAa;AAAE0F,cAAAA,IAAI,EAAE;AAAR,aAAb,CADoB,EAExB1F,IAAI,CAAC,UAAD,EAAa;AAAE0F,cAAAA,IAAI,EAAE;AAAR,aAAb,CAFoB,EAGxB1F,IAAI,sBAAewF,YAAf,QAAgC;AAAEG,cAAAA,SAAS,EAAE,OAAb;AAAsBD,cAAAA,IAAI,EAAE;AAA5B,aAAhC,CAHoB,CA1B5B;AAgCQ6C,YAAAA,aAhCR,GAgCwBtI,gBAAgB,CAAC;AACrC+C,cAAAA,IAAI,GAAGsF,iBAAH,4BAAyBjH,QAAzB;AADiC,aAAD,CAhCxC;AAoCQZ,YAAAA,KApCR,GAoCgBT,IAAI,CAAC,UAAD,EAAa;AAAE8B,cAAAA,KAAK,EAAE;AAAT,aAAb,CApCpB;AAsCQgB,YAAAA,MAtCR,GAsCiB/C,KAAK,CAAC;AACnBiD,cAAAA,IAAI,EAAE,CAAC,CAACvC,KAAD,CAAD,CADa;AAEnBwC,cAAAA,MAAM,EAAE,WAFW;AAGnBnB,cAAAA,KAAK,EAAE;AAHY,aAAD,CAtCtB;AA4CQsD,YAAAA,KA5CR,GA4CgBzF,cAAc,EA5C9B;AA8CQ6I,YAAAA,eA9CR,GA8C0B,CAAC1F,MAAD,EAASsC,KAAT,EAAgBmD,aAAhB,CA9C1B;AAAA,8CAgDSC,eAhDT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmDA,SAASH,eAAT,QAAsD;AAAA,MAA3Bb,SAA2B,SAA3BA,SAA2B;AAAA,MAAhBhG,KAAgB,SAAhBA,KAAgB;AAAA,MAATiG,KAAS,SAATA,KAAS;AAAA,MAC5C/F,MAD4C,GACrBF,KADqB,CAC5CE,MAD4C;AAAA,MACpCC,GADoC,GACrBH,KADqB,CACpCG,GADoC;AAAA,MAC/BC,KAD+B,GACrBJ,KADqB,CAC/BI,KAD+B;AAGpD,MAAM6G,WAAW,GAAGC,cAAc,CAAC9G,KAAD,EAAQ;AAAE4F,IAAAA,SAAS,EAATA,SAAF;AAAahG,IAAAA,KAAK,EAALA,KAAb;AAAoBiG,IAAAA,KAAK,EAALA;AAApB,GAAR,CAAlC;;AACA,MAAMkB,UAAU;AAAKlI,IAAAA,KAAK,EAAE;AAAZ,KAAgCgI,WAAhC,CAAhB;;AACA,MAAMG,SAAS,GAAGF,cAAc,CAAC/G,GAAD,EAAM;AAAE6F,IAAAA,SAAS,EAATA,SAAF;AAAahG,IAAAA,KAAK,EAALA,KAAb;AAAoBiG,IAAAA,KAAK,EAALA;AAApB,GAAN,CAAhC;;AACA,MAAMoB,QAAQ;AAAKpI,IAAAA,KAAK,EAAE;AAAZ,KAA8BmI,SAA9B,CAAd;;AAEA,MAAME,SAAS,GAAG,CAACH,UAAD,EAAaE,QAAb,CAAlB;AAEAnK,EAAAA,IAAI,CAACgD,MAAD,EAAS,UAASpB,IAAT,EAAe;AAAA,QAClBqB,GADkB,GACHrB,IADG,CAClBqB,GADkB;AAAA,QACbC,KADa,GACHtB,IADG,CACbsB,KADa;AAE1B,QAAM6G,WAAW,GAAGC,cAAc,CAAC9G,KAAD,EAAQ;AAAE4F,MAAAA,SAAS,EAATA,SAAF;AAAahG,MAAAA,KAAK,EAALA,KAAb;AAAoBiG,MAAAA,KAAK,EAALA;AAApB,KAAR,CAAlC;;AACA,QAAMsB,UAAU;AAAKtI,MAAAA,KAAK,EAAE;AAAZ,OAAgCgI,WAAhC,CAAhB;;AACA,QAAMG,SAAS,GAAGF,cAAc,CAAC/G,GAAD,EAAM;AAAE6F,MAAAA,SAAS,EAATA,SAAF;AAAahG,MAAAA,KAAK,EAALA,KAAb;AAAoBiG,MAAAA,KAAK,EAALA;AAApB,KAAN,CAAhC;;AACA,QAAMuB,QAAQ;AAAKvI,MAAAA,KAAK,EAAE;AAAZ,OAA8BmI,SAA9B,CAAd;;AAEAE,IAAAA,SAAS,CAACtC,IAAV,CAAeuC,UAAf;AACAD,IAAAA,SAAS,CAACtC,IAAV,CAAewC,QAAf;AACD,GATG,CAAJ;AAWA,SAAOF,SAAP;AACD;;AAED,SAASJ,cAAT,CAAwBO,KAAxB,SAA4D;AAAA,MAA3BzB,SAA2B,SAA3BA,SAA2B;AAAA,MAAhBhG,KAAgB,SAAhBA,KAAgB;AAAA,MAATiG,KAAS,SAATA,KAAS;AAC1D,MAAMyB,YAAY,GAAG5J,oBAAoB,CAAC;AACxCwI,IAAAA,MAAM,EAAEmB,KADgC;AAExCzB,IAAAA,SAAS,EAATA,SAFwC;AAGxCC,IAAAA,KAAK,EAALA;AAHwC,GAAD,CAAzC;AAMA,MAAM5B,QAAQ,GACZqD,YAAY,KAAK,kBAAjB,GACI5J,oBAAoB,CAAC;AACnBwI,IAAAA,MAAM,EAAEtG,KADW;AAEnBgG,IAAAA,SAAS,EAATA,SAFmB;AAGnBC,IAAAA,KAAK,EAALA;AAHmB,GAAD,CADxB,GAMIyB,YAPN;AASA,SAAO;AACL3I,IAAAA,SAAS,EAAE0I,KAAK,CAAC7G,IADZ;AAELyD,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,SAASlD,eAAT,CAAyBwG,aAAzB,EAAwC;AACtC,MAAMC,WAAW,GAAG,cAApB;AACA,MAAMC,qBAAqB,GAAGhK,QAAQ,CAAC8J,aAAD,EAAgBC,WAAhB,CAAtC;AACA,MAAME,KAAK,GAAGD,qBAAqB,CAACE,GAAtB,CAA0B,OAA1B,CAAd;AACA,MAAMC,OAAO,GAAGH,qBAAqB,CAACE,GAAtB,CAA0B,SAA1B,CAAhB;AACA,MAAIE,YAAY,GAAG,EAAnB;AACAA,EAAAA,YAAY,IAAIH,KAAK,KAAK,CAAV,GAAcA,KAAK,GAAG,IAAtB,GAA6B,EAA7C;AACAG,EAAAA,YAAY,IAAID,OAAO,KAAK,CAAZ,GAAgBA,OAAO,GAAG,GAA1B,GAAgC,EAAhD;AAEA,SAAOC,YAAP;AACD;;AAED,SAAS5G,gBAAT,CAA0BnB,MAA1B,EAAkC;AAChC,MAAMrC,QAAQ,GAAGH,GAAG,CAClBH,GAAG,CAAC2C,MAAD,EAAS,UAASpB,IAAT,EAAe;AAAA,QACjBqB,GADiB,GACFrB,IADE,CACjBqB,GADiB;AAAA,QACZC,KADY,GACFtB,IADE,CACZsB,KADY;AAEzB,QAAMoH,QAAQ,GAAG5J,MAAM,CAACuC,GAAG,CAACS,IAAL,CAAvB;AACA,QAAM2G,UAAU,GAAG3J,MAAM,CAACwC,KAAK,CAACQ,IAAP,CAAzB;AACA,QAAMQ,aAAa,GAAGoG,QAAQ,CAACU,IAAT,CAAcX,UAAd,CAAtB;AAEA,WAAOnG,aAAP;AACD,GAPE,CADe,CAApB;AAWA,MAAMA,aAAa,GAAGD,eAAe,CAACtD,QAAD,CAArC;AAEA,SAAOuD,aAAP;AACD","sourcesContent":["import Promise from 'bluebird'\nimport {\n  each,\n  filter,\n  find,\n  groupBy,\n  isEmpty,\n  map,\n  size,\n  sortBy,\n  sum,\n  toString,\n} from 'lodash'\nimport moment, { duration } from 'moment-timezone'\n\nimport {\n  getLocationReference,\n  getTimezoneAbbr,\n  getTimezoneDatetime,\n} from '../../helpers'\nimport { launchIcon } from '../../images'\nimport {\n  generateDefinition,\n  horizontalLine,\n  summaryFieldsTable,\n  summaryStatTable,\n  summaryWrapperTable,\n  table,\n  text,\n  threeColumnTable,\n  zebraFillColor,\n} from '../helpers'\n\nconst LIGHTHOUSE_BASE_URL = 'https://app.lighthouse.io'\n\n/**\n * buildActivityPdf\n * @param {object} pdfOptions - the pdf options\n * @param {string} pdfOptions.fileTitle - pdf file title\n * @param {function} pdfOptions.footer - function executed to generate footer\n * @param {function} pdfOptions.header - function executed to generate header\n * @param {string} pdfOptions.logoUrl - pdf logo url\n * @param {array} pdfOptions.pageMargins - pdf page margins\n * @param {string} pdfOptions.pageOrientation - pdf page orientation\n * @param {string} pdfOptions.pageSize - pdf page size\n * @param {object} pdfOptions.styles - pdf styles\n * @param {object} pdfOptions.title - pdf title\n * @param {object} data - pdf data\n * @param {array} data.audits - audit documents\n * @param {array} data.events - event documents\n * @param {array} data.locations - location documents\n * @param {array} data.issues - issue documents\n * @param {array} data.audits - audit documents\n * @param {object} data.shift - shift document\n * @param {object} data.settings - settings properties\n * @param {string} data.settings.awsS3BaseUrl - aws S3 base url\n * @param {string} data.settings.cloudinaryBaseUrl - cloudinary base url\n * @param {array} data.tasks - task documents\n * @param {string} data.timestamp - timestamp string\n * @param {string} data.timezone - timezone string\n * @param {array} data.zones - zone documents\n * @param {array} data.user - user document\n * @returns {Promise} returns pdfmake definition object\n */\n\nexport async function buildShiftPdf(pdfOptions, data) {\n  const { timestamp, timezone } = data\n\n  const title = 'Daily Shift Report'\n  const content = await generateContent(data)\n\n  return generateDefinition({\n    content,\n    fileTitle: title,\n    timestamp,\n    timezone,\n    type: 'Shift Report',\n    ...pdfOptions,\n  })\n}\n\nasync function generateContent(data) {\n  const activitySection = await buildActivitySection(data)\n  const summarySection = buildSummarySection(data)\n  const titleTable = buildTitleTable(data)\n\n  return [titleTable, summarySection, activitySection]\n}\n\nasync function buildActivitySection(data) {\n  const timeline = await buildTimelineTable(data)\n  const activitySummary = await buildActivitySummarySection(data)\n\n  return [timeline, activitySummary]\n}\n\nfunction buildTitleTable(data) {\n  const { shift, timezone, user } = data\n  const { breaks, duration, end, start } = shift\n\n  const headerTitle = text('Daily Shift Report', { style: 'title' })\n  const username = `${user.firstName} ${user.lastName}` || 'Unknown User'\n\n  const headerSubTitle = text(`${username}`, {\n    style: 'subTitle',\n  })\n\n  const mTimezoneStart = moment(start.time).tz(timezone)\n  const mTimezoneEnd = moment(end.time).tz(timezone)\n\n  const rangeStart = moment(mTimezoneStart).format('MMM DD h:mma')\n  const rangeEnd = moment(mTimezoneEnd).format('MMM DD h:mma')\n\n  const shiftDuration = getFineDuration(duration)\n  const breakDuration = getBreakDuration(breaks)\n\n  const header = !breakDuration\n    ? `${rangeStart} - ${rangeEnd} | Duration: ${shiftDuration}`\n    : `${rangeStart} - ${rangeEnd} | Duration: ${shiftDuration}, Break: ${breakDuration}`\n  const headerRange = text(header, {\n    style: 'subTitle2',\n  })\n\n  return table({\n    body: [[headerTitle], [headerSubTitle], [headerRange]],\n    layout: 'noBorders',\n    style: 'titleTable',\n  })\n}\n\nfunction buildSummarySection(data) {\n  const { audits, events, issues, tasks } = data\n\n  const eventsByType = groupBy(events, 'type')\n\n  const enterEventsCount = size(eventsByType.enter)\n  const issuesCount = size(issues)\n  const tasksCount = size(tasks)\n  const auditsCount = size(audits)\n\n  const scansText = text('SCANS', { style: 'summaryText' })\n  const issuesText = text('ISSUES', { style: 'summaryText' })\n  const tasksText = text('TASKS', { style: 'summaryText' })\n  const auditsText = text('AUDITS', { style: 'summaryText' })\n\n  const scansCountText = text(toString(enterEventsCount), {\n    style: 'summaryCount',\n  })\n  const issuesCountText = text(toString(issuesCount), { style: 'summaryCount' })\n  const tasksCountText = text(toString(tasksCount), { style: 'summaryCount' })\n  const auditsCountText = text(toString(auditsCount), { style: 'summaryCount' })\n\n  const scanTable = summaryStatTable({ body: [[scansText], [scansCountText]] })\n  const issueTable = summaryStatTable({\n    body: [[issuesText], [issuesCountText]],\n  })\n  const taskTables = summaryStatTable({ body: [[tasksText], [tasksCountText]] })\n  const auditTable = summaryStatTable({\n    body: [[auditsText], [auditsCountText]],\n  })\n\n  const wrapperTable = summaryWrapperTable({\n    body: [[scanTable, issueTable, taskTables, auditTable]],\n  })\n\n  return wrapperTable\n}\n\nasync function buildActivitySummarySection(data) {\n  const { audits, events, issues, settings, tasks, timezone } = data\n\n  const enterEvents = filter(events, event => event.type === 'enter')\n\n  const auditRows = map(audits, getFormRowData('audits', data))\n  const issueRows = map(issues, getFormRowData('issues', data))\n  const scanRows = map(enterEvents, getScanRowData(data))\n  const taskRows = map(tasks, getFormRowData('tasks', data))\n\n  const rows = [...auditRows, ...issueRows, ...scanRows, ...taskRows]\n  const sortedRows = sortBy(rows, ['timestamp'], ['asc'])\n  const title = text('Activity Summary', { style: 'summarySectionHeader' })\n\n  const header = table({\n    body: [[title]],\n    layout: 'noBorders',\n    style: 'summaryHeaderTable',\n  })\n\n  const hLine = horizontalLine()\n  const activityTable = await buildActivityTable({\n    rows: sortedRows,\n    settings,\n    timezone,\n  })\n  const activitySummarySection = [header, hLine, activityTable]\n\n  return activitySummarySection\n}\n\nasync function buildActivityTable({ rows, settings, timezone }) {\n  const timezoneAbbr = getTimezoneAbbr(timezone)\n\n  const activityTableHeader = [\n    text('Activity', { bold: true }),\n    { text: '' },\n    text('Location', { bold: true }),\n    text(`Timestamp (${timezoneAbbr})`, { alignment: 'right', bold: true }),\n  ]\n\n  const activityTableRows = await Promise.map(rows, async function(data) {\n    const { link, location, icon, summaryFields, timestamp, title } = data\n\n    const timezoneHour = getTimezoneDatetime({\n      format: 'ddd DD h:mm a',\n      showTzAbbr: false,\n      timestamp,\n      timezone,\n    })\n\n    const iconCell = icon\n      ? { alignment: 'center', fit: [8, 8], image: icon, link }\n      : { text: '' }\n\n    const rows = [\n      [\n        text(title, { link }),\n        iconCell,\n        text(location, { link }),\n        text(timezoneHour, { alignment: 'right', link }),\n      ],\n    ]\n\n    const hasSummaryFields = !isEmpty(summaryFields)\n\n    if (hasSummaryFields) {\n      const fieldsTable = await summaryFieldsTable({\n        fields: summaryFields,\n        settings,\n        timezone,\n      })\n      rows.push([fieldsTable])\n    }\n\n    const activityTableRow = [\n      table({\n        body: [...rows],\n        colSpan: 5,\n        dontBreakRows: true,\n        headerRow: 0,\n        layout: {\n          hLineWidth: () => 0,\n          paddingLeft: () => 0,\n          paddingRight: () => 0,\n          paddingTop: () => 5,\n          paddingBottom: () => 5,\n          vLineWidth: () => 0,\n        },\n        widths: [120, 25, 200, 110, '*'],\n      }),\n    ]\n\n    return activityTableRow\n  })\n\n  const activityTableBody = isEmpty(activityTableRows)\n    ? [[text('No other activity', { colSpan: 4 })]]\n    : activityTableRows\n\n  const activityTable = table({\n    body: [activityTableHeader, ...activityTableBody],\n    dontBreakRows: true,\n    layout: {\n      hLineWidth: () => 0,\n      fillColor: zebraFillColor,\n      paddingLeft: () => 5,\n      paddingRight: () => 5,\n      paddingTop: () => 5,\n      paddingBottom: () => 5,\n      vLineWidth: () => 0,\n    },\n    widths: [110, 15, 230, 80, '*'],\n  })\n\n  return activityTable\n}\n\nfunction getFormRowData(collection, { locations, zones }) {\n  return document => {\n    const { _id, createdAt, entry = {}, title = 'Unknown' } = document\n\n    const location = getLocationReference({\n      entity: document,\n      locations,\n      zones,\n    })\n\n    const link = `${LIGHTHOUSE_BASE_URL}/reports/${collection}/${_id}`\n    const timestamp = createdAt\n\n    const summaryFields = entry.summaryFields || []\n\n    return {\n      icon: launchIcon,\n      location,\n      link,\n      summaryFields,\n      timestamp,\n      title,\n    }\n  }\n}\n\nfunction getScanRowData({ zones }) {\n  return document => {\n    const { timestamp, zone = '' } = document\n\n    const zoneDoc =\n      zone && find(zones, doc => doc._id.toString() === zone.toString())\n\n    const zoneName = zoneDoc && zoneDoc.name\n    const location = zoneName || 'Unknown Location'\n\n    const title = 'Location Scan'\n\n    return {\n      location,\n      timestamp,\n      title,\n    }\n  }\n}\n\nasync function buildTimelineTable(data) {\n  const { timezone } = data\n  const timezoneAbbr = getTimezoneAbbr(timezone)\n\n  const shiftRows = getShiftRowData(data)\n\n  const sortedRows = sortBy(shiftRows, ['timestamp'], ['asc'])\n  const timeline = await Promise.map(sortedRows, async function(data) {\n    const { location, timestamp, title } = data\n\n    const timezoneHour = getTimezoneDatetime({\n      format: 'ddd DD h:mm a',\n      showTzAbbr: false,\n      timestamp,\n      timezone,\n    })\n\n    const rows = [\n      text(title),\n      text(location),\n      text(timezoneHour, { alignment: 'right' }),\n    ]\n\n    return rows\n  })\n\n  const timelineHeaderRow = [\n    text('Activity', { bold: true }),\n    text('Location', { bold: true }),\n    text(`Timestamp (${timezoneAbbr})`, { alignment: 'right', bold: true }),\n  ]\n\n  const timelineTable = threeColumnTable({\n    body: [timelineHeaderRow, ...timeline],\n  })\n\n  const title = text('Timeline', { style: 'timelineTitle' })\n\n  const header = table({\n    body: [[title]],\n    layout: 'noBorders',\n    style: 'summaryHeaderTable',\n  })\n\n  const hLine = horizontalLine()\n\n  const timelineSection = [header, hLine, timelineTable]\n\n  return timelineSection\n}\n\nfunction getShiftRowData({ locations, shift, zones }) {\n  const { breaks, end, start } = shift\n\n  const startValues = getShiftValues(start, { locations, shift, zones })\n  const startShift = { title: 'Shift Started', ...startValues }\n  const endValues = getShiftValues(end, { locations, shift, zones })\n  const endShift = { title: 'Shift Ended', ...endValues }\n\n  const shiftData = [startShift, endShift]\n\n  each(breaks, function(data) {\n    const { end, start } = data\n    const startValues = getShiftValues(start, { locations, shift, zones })\n    const startBreak = { title: 'Break Started', ...startValues }\n    const endValues = getShiftValues(end, { locations, shift, zones })\n    const endBreak = { title: 'Break Ended', ...endValues }\n\n    shiftData.push(startBreak)\n    shiftData.push(endBreak)\n  })\n\n  return shiftData\n}\n\nfunction getShiftValues(value, { locations, shift, zones }) {\n  const locationName = getLocationReference({\n    entity: value,\n    locations,\n    zones,\n  })\n\n  const location =\n    locationName === 'Unknown Location'\n      ? getLocationReference({\n          entity: shift,\n          locations,\n          zones,\n        })\n      : locationName\n\n  return {\n    timestamp: value.time,\n    location,\n  }\n}\n\nfunction getFineDuration(durationValue) {\n  const measurement = 'milliseconds'\n  const durationByMeasurement = duration(durationValue, measurement)\n  const hours = durationByMeasurement.get('hours')\n  const minutes = durationByMeasurement.get('minutes')\n  let fineDuration = ''\n  fineDuration += hours !== 0 ? hours + 'h ' : ''\n  fineDuration += minutes !== 0 ? minutes + 'm' : ''\n\n  return fineDuration\n}\n\nfunction getBreakDuration(breaks) {\n  const duration = sum(\n    map(breaks, function(data) {\n      const { end, start } = data\n      const endBreak = moment(end.time)\n      const startBreak = moment(start.time)\n      const breakDuration = endBreak.diff(startBreak)\n\n      return breakDuration\n    })\n  )\n\n  const breakDuration = getFineDuration(duration)\n\n  return breakDuration\n}\n"],"file":"index.js"}